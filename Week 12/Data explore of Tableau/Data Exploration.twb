<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20211.21.0712.0907                               -->
<workbook original-version='18.1' source-build='2021.1.4 (20211.21.0712.0907)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <AutoCreateAndUpdateDSDPhoneLayouts />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelExtractV2.true...ObjectModelExtractV2 />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <SetMembershipControl />
    <SheetIdentifierTracking />
    <SortTagCleanup />
    <VizInTooltipHideWorksheet />
    <WindowsPersistSimpleIdentifiers />
    <WorksheetBackgroundTransparency />
    <ZoneBackgroundTransparency />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource hasconnection='false' inline='true' name='Parameters' version='18.1'>
      <aliases enabled='yes' />
      <column caption='fields' datatype='string' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;Demand&quot;'>
        <calculation class='tableau' formula='&quot;Demand&quot;' />
        <members>
          <member value='&quot;Demand&quot;' />
          <member value='&quot;Cost&quot;' />
          <member value='&quot;Orders&quot;' />
          <member value='&quot;Clicks&quot;' />
          <member value='&quot;Impressions&quot;' />
        </members>
      </column>
    </datasource>
    <datasource caption='raw data' inline='true' name='federated.0snhngp1rkwr1115dl6dp1qripkl' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='raw data' name='textscan.198bwmq10tnt7t1eet6sa1uwljxw'>
            <connection class='textscan' directory='C:/Users/yuehang/Desktop/UMBC/data604_fall2020-selected/week9_10.28_big data and Tableau Lab/Data explore of Tableau' filename='raw data.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='textscan.198bwmq10tnt7t1eet6sa1uwljxw' name='raw data.csv' table='[raw data#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='integer' name='ID' ordinal='0' />
            <column datatype='string' name='Category' ordinal='1' />
            <column datatype='date' name='Datex' ordinal='2' />
            <column datatype='integer' name='Year' ordinal='3' />
            <column datatype='string' name='Month' ordinal='4' />
            <column datatype='integer' name='Period' ordinal='5' />
            <column datatype='string' name='Season' ordinal='6' />
            <column datatype='integer' name='Impressions' ordinal='7' />
            <column datatype='integer' name='Clicks' ordinal='8' />
            <column datatype='real' name='CTR' ordinal='9' />
            <column datatype='real' name='Cost' ordinal='10' />
            <column datatype='real' name='CPC' ordinal='11' />
            <column datatype='integer' name='Orders' ordinal='12' />
            <column datatype='real' name='Conversion' ordinal='13' />
            <column datatype='real' name='Demand' ordinal='14' />
            <column datatype='real' name='ROAS' ordinal='15' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='textscan.198bwmq10tnt7t1eet6sa1uwljxw' name='raw data.csv' table='[raw data#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='integer' name='ID' ordinal='0' />
            <column datatype='string' name='Category' ordinal='1' />
            <column datatype='date' name='Datex' ordinal='2' />
            <column datatype='integer' name='Year' ordinal='3' />
            <column datatype='string' name='Month' ordinal='4' />
            <column datatype='integer' name='Period' ordinal='5' />
            <column datatype='string' name='Season' ordinal='6' />
            <column datatype='integer' name='Impressions' ordinal='7' />
            <column datatype='integer' name='Clicks' ordinal='8' />
            <column datatype='real' name='CTR' ordinal='9' />
            <column datatype='real' name='Cost' ordinal='10' />
            <column datatype='real' name='CPC' ordinal='11' />
            <column datatype='integer' name='Orders' ordinal='12' />
            <column datatype='real' name='Conversion' ordinal='13' />
            <column datatype='real' name='Demand' ordinal='14' />
            <column datatype='real' name='ROAS' ordinal='15' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[raw data.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ID</remote-name>
            <remote-type>20</remote-type>
            <local-name>[ID]</local-name>
            <parent-name>[raw data.csv]</parent-name>
            <remote-alias>ID</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[raw data.csv_B6FEDDC933244CE5964B3E5D7E8B46C0]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Category</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Category]</local-name>
            <parent-name>[raw data.csv]</parent-name>
            <remote-alias>Category</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[raw data.csv_B6FEDDC933244CE5964B3E5D7E8B46C0]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Datex</remote-name>
            <remote-type>133</remote-type>
            <local-name>[Datex]</local-name>
            <parent-name>[raw data.csv]</parent-name>
            <remote-alias>Datex</remote-alias>
            <ordinal>2</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[raw data.csv_B6FEDDC933244CE5964B3E5D7E8B46C0]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Year</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Year]</local-name>
            <parent-name>[raw data.csv]</parent-name>
            <remote-alias>Year</remote-alias>
            <ordinal>3</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[raw data.csv_B6FEDDC933244CE5964B3E5D7E8B46C0]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Month</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Month]</local-name>
            <parent-name>[raw data.csv]</parent-name>
            <remote-alias>Month</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[raw data.csv_B6FEDDC933244CE5964B3E5D7E8B46C0]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Period</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Period]</local-name>
            <parent-name>[raw data.csv]</parent-name>
            <remote-alias>Period</remote-alias>
            <ordinal>5</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[raw data.csv_B6FEDDC933244CE5964B3E5D7E8B46C0]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Season</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Season]</local-name>
            <parent-name>[raw data.csv]</parent-name>
            <remote-alias>Season</remote-alias>
            <ordinal>6</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[raw data.csv_B6FEDDC933244CE5964B3E5D7E8B46C0]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Impressions</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Impressions]</local-name>
            <parent-name>[raw data.csv]</parent-name>
            <remote-alias>Impressions</remote-alias>
            <ordinal>7</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[raw data.csv_B6FEDDC933244CE5964B3E5D7E8B46C0]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Clicks</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Clicks]</local-name>
            <parent-name>[raw data.csv]</parent-name>
            <remote-alias>Clicks</remote-alias>
            <ordinal>8</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[raw data.csv_B6FEDDC933244CE5964B3E5D7E8B46C0]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>CTR</remote-name>
            <remote-type>5</remote-type>
            <local-name>[CTR]</local-name>
            <parent-name>[raw data.csv]</parent-name>
            <remote-alias>CTR</remote-alias>
            <ordinal>9</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[raw data.csv_B6FEDDC933244CE5964B3E5D7E8B46C0]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Cost</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Cost]</local-name>
            <parent-name>[raw data.csv]</parent-name>
            <remote-alias>Cost</remote-alias>
            <ordinal>10</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[raw data.csv_B6FEDDC933244CE5964B3E5D7E8B46C0]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>CPC</remote-name>
            <remote-type>5</remote-type>
            <local-name>[CPC]</local-name>
            <parent-name>[raw data.csv]</parent-name>
            <remote-alias>CPC</remote-alias>
            <ordinal>11</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[raw data.csv_B6FEDDC933244CE5964B3E5D7E8B46C0]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Orders</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Orders]</local-name>
            <parent-name>[raw data.csv]</parent-name>
            <remote-alias>Orders</remote-alias>
            <ordinal>12</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[raw data.csv_B6FEDDC933244CE5964B3E5D7E8B46C0]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Conversion</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Conversion]</local-name>
            <parent-name>[raw data.csv]</parent-name>
            <remote-alias>Conversion</remote-alias>
            <ordinal>13</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[raw data.csv_B6FEDDC933244CE5964B3E5D7E8B46C0]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Demand</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Demand]</local-name>
            <parent-name>[raw data.csv]</parent-name>
            <remote-alias>Demand</remote-alias>
            <ordinal>14</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[raw data.csv_B6FEDDC933244CE5964B3E5D7E8B46C0]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ROAS</remote-name>
            <remote-type>5</remote-type>
            <local-name>[ROAS]</local-name>
            <parent-name>[raw data.csv]</parent-name>
            <remote-alias>ROAS</remote-alias>
            <ordinal>15</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[raw data.csv_B6FEDDC933244CE5964B3E5D7E8B46C0]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Old_ CPC' datatype='real' hidden='true' name='[CPC]' role='measure' type='quantitative' />
      <column caption='Old_CTR' datatype='real' hidden='true' name='[CTR]' role='measure' type='quantitative' />
      <column caption='CTR' datatype='real' name='[Calculation_-8074391144621891581]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='sum([Clicks])/sum([Impressions])' />
      </column>
      <column caption='CPC' datatype='real' name='[Calculation_-8074391144625012736]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='sum([Cost])/sum([Clicks])' />
      </column>
      <column caption='ROAS' datatype='real' name='[Calculation_1661828300553678848]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='sum([Demand])/sum([Cost])' />
      </column>
      <column caption='Conversion' datatype='real' name='[Calculation_1707427246772649986]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='sum([Orders])/sum([Clicks])' />
      </column>
      <column caption='Year' datatype='string' datatype-customized='true' name='[Calculation_1995094673632403458]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='STR(Year([Datex]))' />
      </column>
      <column caption='fields_choice' datatype='real' name='[Calculation_711005830858211330]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='Case [Parameters].[Parameter 1]&#13;&#10;when &quot;Demand&quot; THEN [Demand]&#13;&#10;when &quot;Orders&quot; THEN [Orders]&#13;&#10;when &quot;Clicks&quot; THEN [Clicks]&#13;&#10;when &quot;Cost&quot; THEN [Cost]&#13;&#10;when &quot;Impressions&quot; THEN [Impressions]&#13;&#10;End' />
      </column>
      <column caption='Blank' datatype='string' name='[Calculation_962925932654776325]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='&quot;&quot;' />
      </column>
      <column caption='Month' datatype='string' name='[Calculation_962925932752461831]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='if [Month]=&apos;August&apos; then &apos;Aug&apos;&#13;&#10;else [Month] end' />
      </column>
      <column caption='Category' datatype='string' name='[Category]' role='dimension' type='nominal' />
      <column caption='Clicks' datatype='integer' name='[Clicks]' role='measure' type='quantitative' />
      <column caption='Old Conversion' datatype='real' hidden='true' name='[Conversion]' role='measure' type='quantitative' />
      <column caption='Cost' datatype='real' name='[Cost]' role='measure' type='quantitative' />
      <column caption='Demand' datatype='real' name='[Demand]' role='measure' type='quantitative' />
      <column datatype='integer' name='[ID]' role='dimension' type='ordinal' />
      <column caption='Impressions' datatype='integer' name='[Impressions]' role='measure' type='quantitative' />
      <column caption='Old Month' datatype='string' name='[Month]' role='dimension' type='nominal' />
      <column caption='Orders' datatype='integer' name='[Orders]' role='measure' type='quantitative' />
      <column aggregation='Sum' datatype='integer' name='[Period]' role='dimension' type='ordinal' />
      <column caption='Old ROAS' datatype='real' hidden='true' name='[ROAS]' role='measure' type='quantitative' />
      <column caption='Season' datatype='string' name='[Season]' role='dimension' type='nominal' />
      <column caption='Old Year' datatype='string' datatype-customized='true' name='[Year]' role='dimension' type='nominal' />
      <_.fcp.ObjectModelTableType.true...column caption='raw data.csv' datatype='table' name='[__tableau_internal_object_id__].[raw data.csv_B6FEDDC933244CE5964B3E5D7E8B46C0]' role='measure' type='quantitative' />
      <column-instance column='[Clicks]' derivation='Sum' name='[cum:sum:Clicks:qk]' pivot='key' type='quantitative'>
        <table-calc aggregation='Sum' ordering-type='Rows' type='CumTotal' />
      </column-instance>
      <column-instance column='[Cost]' derivation='Sum' name='[cum:sum:Cost:qk:2]' pivot='key' type='quantitative'>
        <table-calc aggregation='Sum' ordering-type='Rows' type='CumTotal' />
      </column-instance>
      <column-instance column='[Demand]' derivation='Sum' name='[cum:sum:Demand:qk:1]' pivot='key' type='quantitative'>
        <table-calc aggregation='Sum' ordering-field='[federated.0snhngp1rkwr1115dl6dp1qripkl].[none:Period:ok]' ordering-type='Field' type='CumTotal' />
      </column-instance>
      <column-instance column='[Demand]' derivation='Sum' name='[cum:sum:Demand:qk:2]' pivot='key' type='quantitative'>
        <table-calc aggregation='Sum' ordering-type='Rows' type='CumTotal' />
      </column-instance>
      <column-instance column='[Impressions]' derivation='Sum' name='[cum:sum:Impressions:qk]' pivot='key' type='quantitative'>
        <table-calc aggregation='Sum' ordering-type='Rows' type='CumTotal' />
      </column-instance>
      <column-instance column='[Orders]' derivation='Sum' name='[cum:sum:Orders:qk]' pivot='key' type='quantitative'>
        <table-calc aggregation='Sum' ordering-type='Rows' type='CumTotal' />
      </column-instance>
      <column-instance column='[Calculation_1995094673632403458]' derivation='None' name='[none:Calculation_1995094673632403458:nk]' pivot='key' type='nominal' />
      <column-instance column='[Calculation_962925932752461831]' derivation='None' name='[none:Calculation_962925932752461831:nk]' pivot='key' type='nominal' />
      <column-instance column='[Category]' derivation='None' name='[none:Category:nk]' pivot='key' type='nominal' />
      <column-instance column='[Clicks]' derivation='None' name='[none:Clicks:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Cost]' derivation='None' name='[none:Cost:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Demand]' derivation='None' name='[none:Demand:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Forecast Indicator]' derivation='None' forecast-column-base='[Forecast Indicator]' forecast-column-type='forecast-indicator' name='[none:Forecast Indicator:nk]' pivot='key' type='nominal' />
      <column-instance column='[Impressions]' derivation='None' name='[none:Impressions:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Orders]' derivation='None' name='[none:Orders:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Period]' derivation='None' name='[none:Period:ok]' pivot='key' type='ordinal' />
      <column-instance column='[Season]' derivation='None' name='[none:Season:nk]' pivot='key' type='nominal' />
      <column-instance column='[Clicks]' derivation='Sum' name='[pcdf:sum:Clicks:qk]' pivot='key' type='quantitative'>
        <table-calc diff-options='Relative' ordering-type='Rows' type='PctDiff'>
          <address>
            <value>-1</value>
          </address>
        </table-calc>
      </column-instance>
      <column-instance column='[Cost]' derivation='Sum' name='[pcdf:sum:Cost:qk:4]' pivot='key' type='quantitative'>
        <table-calc diff-options='Relative' ordering-type='RowInPane' type='PctDiff'>
          <address>
            <value>-1</value>
          </address>
        </table-calc>
      </column-instance>
      <column-instance column='[Cost]' derivation='Sum' name='[pcdf:sum:Cost:qk]' pivot='key' type='quantitative'>
        <table-calc diff-options='Relative' ordering-type='Rows' type='PctDiff'>
          <address>
            <value>-1</value>
          </address>
        </table-calc>
      </column-instance>
      <column-instance column='[Demand]' derivation='Sum' name='[pcdf:sum:Demand:qk]' pivot='key' type='quantitative'>
        <table-calc diff-options='Relative' ordering-type='Rows' type='PctDiff'>
          <address>
            <value>-1</value>
          </address>
        </table-calc>
      </column-instance>
      <column-instance column='[Impressions]' derivation='Sum' name='[pcdf:sum:Impressions:qk]' pivot='key' type='quantitative'>
        <table-calc diff-options='Relative' ordering-type='Rows' type='PctDiff'>
          <address>
            <value>-1</value>
          </address>
        </table-calc>
      </column-instance>
      <column-instance column='[Orders]' derivation='Sum' name='[pcdf:sum:Orders:qk]' pivot='key' type='quantitative'>
        <table-calc diff-options='Relative' ordering-type='Rows' type='PctDiff'>
          <address>
            <value>-1</value>
          </address>
        </table-calc>
      </column-instance>
      <column-instance column='[Cost]' derivation='Sum' name='[pcto:sum:Cost:qk:1]' pivot='key' type='quantitative'>
        <table-calc ordering-type='Field' type='PctTotal'>
          <order field='[federated.0snhngp1rkwr1115dl6dp1qripkl].[none:Calculation_1995094673632403458:nk]' />
          <order field='[federated.0snhngp1rkwr1115dl6dp1qripkl].[none:Category:nk]' />
        </table-calc>
      </column-instance>
      <column-instance column='[Cost]' derivation='Sum' name='[pcto:sum:Cost:qk:3]' pivot='key' type='quantitative'>
        <table-calc ordering-type='Columns' type='PctTotal' />
      </column-instance>
      <column-instance column='[Cost]' derivation='Sum' name='[pcto:sum:Cost:qk:4]' pivot='key' type='quantitative'>
        <table-calc ordering-type='ColumnInPane' type='PctTotal' />
      </column-instance>
      <column-instance column='[Cost]' derivation='Sum' name='[pcto:sum:Cost:qk:5]' pivot='key' type='quantitative'>
        <table-calc ordering-field='[federated.0snhngp1rkwr1115dl6dp1qripkl].[none:Calculation_1995094673632403458:nk]' ordering-type='Field' type='PctTotal' />
      </column-instance>
      <column-instance column='[CPC]' derivation='Sum' name='[sum:CPC:qk]' pivot='key' type='quantitative' />
      <column-instance column='[CTR]' derivation='Sum' name='[sum:CTR:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_-8074391144621891581]' derivation='Sum' name='[sum:Calculation_-8074391144621891581:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_-8074391144625012736]' derivation='Sum' name='[sum:Calculation_-8074391144625012736:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_1707427246772649986]' derivation='Sum' name='[sum:Calculation_1707427246772649986:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Clicks]' derivation='Sum' name='[sum:Clicks:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Conversion]' derivation='Sum' name='[sum:Conversion:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Cost]' derivation='Sum' name='[sum:Cost:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Demand]' derivation='Sum' name='[sum:Demand:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Impressions]' derivation='Sum' name='[sum:Impressions:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Orders]' derivation='Sum' name='[sum:Orders:qk]' pivot='key' type='quantitative' />
      <column-instance column='[ROAS]' derivation='Sum' name='[sum:ROAS:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_-8074391144621891581]' derivation='User' name='[usr:Calculation_-8074391144621891581:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_-8074391144625012736]' derivation='User' name='[usr:Calculation_-8074391144625012736:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_1661828300553678848]' derivation='User' name='[usr:Calculation_1661828300553678848:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_1707427246772649986]' derivation='User' name='[usr:Calculation_1707427246772649986:qk]' pivot='key' type='quantitative' />
      <group hidden='true' name='[Exclusions (Season,Year)]' name-style='unqualified' user:auto-column='exclude'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[none:Season:nk]' />
          <groupfilter function='level-members' level='[none:Calculation_1995094673632403458:nk]' />
        </groupfilter>
      </group>
      <group caption='Old Month Set' name='[Old Month Set]' name-style='unqualified' user:ui-builder='filter-group'>
        <groupfilter function='member' level='[Month]' member='&quot;August&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
      </group>
      <group caption='Tooltip (Month)' hidden='true' name='[Tooltip (Month)]' name-style='unqualified' user:auto-column='sheet_link' user:ui-vit-column='true'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Calculation_962925932752461831]' />
        </groupfilter>
      </group>
      <group caption='Tooltip (Month,Period)' hidden='true' name='[Tooltip (Month,Period)]' name-style='unqualified' user:auto-column='sheet_link' user:ui-vit-column='true'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Calculation_962925932752461831]' />
          <groupfilter function='level-members' level='[Period]' />
        </groupfilter>
      </group>
      <group caption='Tooltip (Month,Year)' hidden='true' name='[Tooltip (Month,Year)]' name-style='unqualified' user:auto-column='sheet_link' user:ui-vit-column='true'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Calculation_962925932752461831]' />
          <groupfilter function='level-members' level='[Year]' />
        </groupfilter>
      </group>
      <group caption='Tooltip (Period)' hidden='true' name='[Tooltip (Period)]' name-style='unqualified' user:auto-column='sheet_link' user:ui-vit-column='true'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Period]' />
        </groupfilter>
      </group>
      <group caption='Tooltip (Period1)' hidden='true' name='[Tooltip (Period1)]' name-style='unqualified' user:auto-column='sheet_link' user:ui-vit-column='true'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Period]' />
        </groupfilter>
      </group>
      <group caption='Tooltip (Year,Month)' hidden='true' name='[Tooltip (Year,Month)]' name-style='unqualified' user:auto-column='sheet_link' user:ui-vit-column='true'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Calculation_1995094673632403458]' />
          <groupfilter function='level-members' level='[Calculation_962925932752461831]' />
        </groupfilter>
      </group>
      <group caption='Tooltip (Year,Month,Period)' hidden='true' name='[Tooltip (Year,Month,Period)]' name-style='unqualified' user:auto-column='sheet_link' user:ui-vit-column='true'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Calculation_1995094673632403458]' />
          <groupfilter function='level-members' level='[Calculation_962925932752461831]' />
          <groupfilter function='level-members' level='[Period]' />
        </groupfilter>
      </group>
      <group caption='Tooltip (Year,Period)' hidden='true' name='[Tooltip (Year,Period)]' name-style='unqualified' user:auto-column='sheet_link' user:ui-vit-column='true'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Calculation_1995094673632403458]' />
          <groupfilter function='level-members' level='[Period]' />
        </groupfilter>
      </group>
      <extract _.fcp.ObjectModelExtractV2.true...object-id='' count='-1' enabled='false' units='records'>
        <connection access_mode='readonly' authentication='auth-none' author-locale='en_US' class='hyper' dbname='C:/Users/yuehang/Desktop/UMBC/data604_fall2020-selected/week9_10.28_big data and Tableau Lab/Data explore of Tableau/raw data.hyper' default-settings='yes' schema='Extract' sslmode='' tablename='Extract' update-time='08/02/2021 06:59:15 PM' username='tableau_internal_user'>
          <_.fcp.ObjectModelEncapsulateLegacy.false...relation name='Extract' table='[Extract].[Extract]' type='table' />
          <_.fcp.ObjectModelEncapsulateLegacy.true...relation name='Extract' table='[Extract].[Extract]' type='table' />
          <refresh>
            <refresh-event add-from-file-path='raw data' increment-value='%null%' refresh-type='create' rows-inserted='93' timestamp-start='2021-08-02 18:59:15.268' />
          </refresh>
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>ID</remote-name>
              <remote-type>20</remote-type>
              <local-name>[ID]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>ID</remote-alias>
              <ordinal>0</ordinal>
              <family>raw data.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>93</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[raw data.csv_B6FEDDC933244CE5964B3E5D7E8B46C0]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Category</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Category]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Category</remote-alias>
              <ordinal>1</ordinal>
              <family>raw data.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>3</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[raw data.csv_B6FEDDC933244CE5964B3E5D7E8B46C0]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Datex</remote-name>
              <remote-type>133</remote-type>
              <local-name>[Datex]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Datex</remote-alias>
              <ordinal>2</ordinal>
              <family>raw data.csv</family>
              <local-type>date</local-type>
              <aggregation>Year</aggregation>
              <approx-count>31</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[raw data.csv_B6FEDDC933244CE5964B3E5D7E8B46C0]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Year</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Year]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Year</remote-alias>
              <ordinal>3</ordinal>
              <family>raw data.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>3</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='binary' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[raw data.csv_B6FEDDC933244CE5964B3E5D7E8B46C0]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Month</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Month]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Month</remote-alias>
              <ordinal>4</ordinal>
              <family>raw data.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>13</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[raw data.csv_B6FEDDC933244CE5964B3E5D7E8B46C0]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Period</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Period]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Period</remote-alias>
              <ordinal>5</ordinal>
              <family>raw data.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>31</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[raw data.csv_B6FEDDC933244CE5964B3E5D7E8B46C0]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Season</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Season]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Season</remote-alias>
              <ordinal>6</ordinal>
              <family>raw data.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>2</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[raw data.csv_B6FEDDC933244CE5964B3E5D7E8B46C0]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Impressions</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Impressions]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Impressions</remote-alias>
              <ordinal>7</ordinal>
              <family>raw data.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>93</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[raw data.csv_B6FEDDC933244CE5964B3E5D7E8B46C0]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Clicks</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Clicks]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Clicks</remote-alias>
              <ordinal>8</ordinal>
              <family>raw data.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>93</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[raw data.csv_B6FEDDC933244CE5964B3E5D7E8B46C0]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Cost</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Cost]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Cost</remote-alias>
              <ordinal>9</ordinal>
              <family>raw data.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>93</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[raw data.csv_B6FEDDC933244CE5964B3E5D7E8B46C0]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Orders</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Orders]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Orders</remote-alias>
              <ordinal>10</ordinal>
              <family>raw data.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>93</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[raw data.csv_B6FEDDC933244CE5964B3E5D7E8B46C0]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Demand</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Demand]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Demand</remote-alias>
              <ordinal>11</ordinal>
              <family>raw data.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>93</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[raw data.csv_B6FEDDC933244CE5964B3E5D7E8B46C0]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:Calculation_962925932752461831:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Sep&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Jan&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;May&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Oct&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Jun&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Feb&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Jul&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Nov&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Aug&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Mar&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Dec&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Apr&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Calculation_1995094673632403458:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;2016&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;2017&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;2018&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0snhngp1rkwr1115dl6dp1qripkl]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0snhngp1rkwr1115dl6dp1qripkl].[cum:sum:Cost:qk:2]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0snhngp1rkwr1115dl6dp1qripkl].[cum:sum:Cost:qk:7]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0snhngp1rkwr1115dl6dp1qripkl].[none:Cost:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0snhngp1rkwr1115dl6dp1qripkl].[pcdf:sum:Cost:qk:4]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0snhngp1rkwr1115dl6dp1qripkl].[pcdf:sum:Cost:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0snhngp1rkwr1115dl6dp1qripkl].[pcto:sum:Cost:qk:3]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0snhngp1rkwr1115dl6dp1qripkl].[pcto:sum:Cost:qk:4]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0snhngp1rkwr1115dl6dp1qripkl].[pcto:sum:Cost:qk:5]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0snhngp1rkwr1115dl6dp1qripkl].[sum:Calculation_1707427246768029697:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0snhngp1rkwr1115dl6dp1qripkl].[sum:Cost:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0snhngp1rkwr1115dl6dp1qripkl].[win:sum:Cost:qk:2]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0snhngp1rkwr1115dl6dp1qripkl].[win:sum:Cost:qk:4]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0snhngp1rkwr1115dl6dp1qripkl].[win:sum:Cost:qk]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.0snhngp1rkwr1115dl6dp1qripkl].[cum:sum:Impressions:qk]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.0snhngp1rkwr1115dl6dp1qripkl].[cum:sum:Orders:qk]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.0snhngp1rkwr1115dl6dp1qripkl].[none:Impressions:qk]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.0snhngp1rkwr1115dl6dp1qripkl].[none:Orders:qk]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.0snhngp1rkwr1115dl6dp1qripkl].[pcdf:sum:Impressions:qk]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.0snhngp1rkwr1115dl6dp1qripkl].[pcdf:sum:Orders:qk]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.0snhngp1rkwr1115dl6dp1qripkl].[sum:Calculation_1707427246772649986:qk]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.0snhngp1rkwr1115dl6dp1qripkl].[sum:Impressions:qk]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.0snhngp1rkwr1115dl6dp1qripkl].[sum:Orders:qk]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.0snhngp1rkwr1115dl6dp1qripkl].[usr:Calculation_1707427246772649986:qk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.0snhngp1rkwr1115dl6dp1qripkl].[cum:sum:Clicks:qk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.0snhngp1rkwr1115dl6dp1qripkl].[diff:sum:Clicks:qk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.0snhngp1rkwr1115dl6dp1qripkl].[none:Clicks:qk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.0snhngp1rkwr1115dl6dp1qripkl].[pcdf:sum:Clicks:qk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.0snhngp1rkwr1115dl6dp1qripkl].[sum:Calculation_-8074391144621891581:qk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.0snhngp1rkwr1115dl6dp1qripkl].[sum:Clicks:qk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.0snhngp1rkwr1115dl6dp1qripkl].[usr:Calculation_-8074391144621891581:qk]&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;[federated.0snhngp1rkwr1115dl6dp1qripkl].[sum:CTR:qk]&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;[federated.0snhngp1rkwr1115dl6dp1qripkl].[sum:Calculation_-8074391144621441020:qk]&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;[federated.0snhngp1rkwr1115dl6dp1qripkl].[sum:Calculation_-8074391144625012736:qk]&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;[federated.0snhngp1rkwr1115dl6dp1qripkl].[sum:Conversion:qk]&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;[federated.0snhngp1rkwr1115dl6dp1qripkl].[usr:Calculation_-8074391144625012736:qk]&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;[federated.0snhngp1rkwr1115dl6dp1qripkl].[usr:Calculation_1661828300553678848:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.0snhngp1rkwr1115dl6dp1qripkl].[none:Demand:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.0snhngp1rkwr1115dl6dp1qripkl].[sum:Demand:qk]&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;[federated.0snhngp1rkwr1115dl6dp1qripkl].[cum:sum:Demand:qk:1]&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;[federated.0snhngp1rkwr1115dl6dp1qripkl].[cum:sum:Demand:qk:2]&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;[federated.0snhngp1rkwr1115dl6dp1qripkl].[cum:sum:Demand:qk:3]&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;[federated.0snhngp1rkwr1115dl6dp1qripkl].[cum:sum:Demand:qk:5]&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;[federated.0snhngp1rkwr1115dl6dp1qripkl].[cum:sum:Demand:qk:6]&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;[federated.0snhngp1rkwr1115dl6dp1qripkl].[cum:sum:Demand:qk:8]&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;[federated.0snhngp1rkwr1115dl6dp1qripkl].[pcdf:sum:Demand:qk]&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;[federated.0snhngp1rkwr1115dl6dp1qripkl].[__tableau_internal_object_id__].[cnt:raw data.csv_2B3250F779784EC9A94131A5D8A82E20:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.0snhngp1rkwr1115dl6dp1qripkl].[pcto:sum:Cost:qk:1]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.0snhngp1rkwr1115dl6dp1qripkl].[sum:ROAS:qk]&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;[federated.0snhngp1rkwr1115dl6dp1qripkl].[sum:CPC:qk]&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;[federated.0snhngp1rkwr1115dl6dp1qripkl].[sum:Calculation_-8074391144622891006:qk]&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Category:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;BRAND&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;PLA&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;NON BRAND&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <default-sorts>
        <manual-sort column='[none:Forecast Indicator:nk]' direction='ASC'>
          <dictionary>
            <bucket>&quot;Actual&quot;</bucket>
            <bucket>&quot;Estimate&quot;</bucket>
          </dictionary>
        </manual-sort>
      </default-sorts>
      <datasource-dependencies datasource='Parameters'>
        <column caption='fields' datatype='string' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;Demand&quot;'>
          <calculation class='tableau' formula='&quot;Demand&quot;' />
        </column>
      </datasource-dependencies>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='raw data.csv' id='raw data.csv_B6FEDDC933244CE5964B3E5D7E8B46C0'>
            <properties context=''>
              <relation connection='textscan.198bwmq10tnt7t1eet6sa1uwljxw' name='raw data.csv' table='[raw data#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
                  <column datatype='integer' name='ID' ordinal='0' />
                  <column datatype='string' name='Category' ordinal='1' />
                  <column datatype='date' name='Datex' ordinal='2' />
                  <column datatype='integer' name='Year' ordinal='3' />
                  <column datatype='string' name='Month' ordinal='4' />
                  <column datatype='integer' name='Period' ordinal='5' />
                  <column datatype='string' name='Season' ordinal='6' />
                  <column datatype='integer' name='Impressions' ordinal='7' />
                  <column datatype='integer' name='Clicks' ordinal='8' />
                  <column datatype='real' name='CTR' ordinal='9' />
                  <column datatype='real' name='Cost' ordinal='10' />
                  <column datatype='real' name='CPC' ordinal='11' />
                  <column datatype='integer' name='Orders' ordinal='12' />
                  <column datatype='real' name='Conversion' ordinal='13' />
                  <column datatype='real' name='Demand' ordinal='14' />
                  <column datatype='real' name='ROAS' ordinal='15' />
                </columns>
              </relation>
            </properties>
            <properties context='extract'>
              <relation name='Extract' table='[Extract].[Extract]' type='table' />
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <worksheets>
    <worksheet name='CPC'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true'>CPC with Cost and Clicks</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='raw data' name='federated.0snhngp1rkwr1115dl6dp1qripkl' />
          </datasources>
          <datasource-dependencies datasource='federated.0snhngp1rkwr1115dl6dp1qripkl'>
            <column caption='CPC' datatype='real' name='[Calculation_-8074391144625012736]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='sum([Cost])/sum([Clicks])' />
            </column>
            <column caption='Year' datatype='string' datatype-customized='true' name='[Calculation_1995094673632403458]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='STR(Year([Datex]))' />
            </column>
            <column caption='Month' datatype='string' name='[Calculation_962925932752461831]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='if [Month]=&apos;August&apos; then &apos;Aug&apos;&#13;&#10;else [Month] end' />
            </column>
            <column caption='Category' datatype='string' name='[Category]' role='dimension' type='nominal' />
            <column caption='Clicks' datatype='integer' name='[Clicks]' role='measure' type='quantitative' />
            <column caption='Cost' datatype='real' name='[Cost]' role='measure' type='quantitative' />
            <column datatype='date' name='[Datex]' role='dimension' type='ordinal' />
            <column caption='Old Month' datatype='string' name='[Month]' role='dimension' type='nominal' />
            <column caption='Season' datatype='string' name='[Season]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_1995094673632403458]' derivation='None' name='[none:Calculation_1995094673632403458:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_962925932752461831]' derivation='None' name='[none:Calculation_962925932752461831:nk]' pivot='key' type='nominal' />
            <column-instance column='[Category]' derivation='None' name='[none:Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Season]' derivation='None' name='[none:Season:nk]' pivot='key' type='nominal' />
            <column-instance column='[Clicks]' derivation='Sum' name='[sum:Clicks:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Cost]' derivation='Sum' name='[sum:Cost:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_-8074391144625012736]' derivation='User' name='[usr:Calculation_-8074391144625012736:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0snhngp1rkwr1115dl6dp1qripkl].[none:Calculation_1995094673632403458:nk]'>
            <groupfilter from='&quot;2016&quot;' function='range' level='[none:Calculation_1995094673632403458:nk]' to='&quot;2018&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0snhngp1rkwr1115dl6dp1qripkl].[none:Category:nk]' filter-group='6'>
            <groupfilter function='member' level='[none:Category:nk]' member='&quot;BRAND&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0snhngp1rkwr1115dl6dp1qripkl].[none:Season:nk]' filter-group='7'>
            <groupfilter function='member' level='[none:Season:nk]' member='&quot;Spring&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0snhngp1rkwr1115dl6dp1qripkl].[none:Category:nk]</column>
            <column>[federated.0snhngp1rkwr1115dl6dp1qripkl].[none:Season:nk]</column>
            <column>[federated.0snhngp1rkwr1115dl6dp1qripkl].[none:Calculation_1995094673632403458:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' domain-expand='false' field='[federated.0snhngp1rkwr1115dl6dp1qripkl].[sum:Clicks:qk]' field-type='quantitative' scope='cols' type='space' />
            <encoding attr='space' class='0' domain-expand='false' field='[federated.0snhngp1rkwr1115dl6dp1qripkl].[sum:Cost:qk]' field-type='quantitative' scope='cols' type='space' />
            <encoding attr='space' class='0' domain-expand='false' field='[federated.0snhngp1rkwr1115dl6dp1qripkl].[usr:Calculation_-8074391144625012736:qk]' field-type='quantitative' scope='cols' type='space' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='text-format' field='[federated.0snhngp1rkwr1115dl6dp1qripkl].[usr:Calculation_-8074391144625012736:qk]' value='c&quot;$&quot;#,##0.00;(&quot;$&quot;#,##0.00)' />
            <format attr='font-size' field='[federated.0snhngp1rkwr1115dl6dp1qripkl].[usr:Calculation_-8074391144625012736:qk]' value='8' />
            <format attr='font-size' field='[federated.0snhngp1rkwr1115dl6dp1qripkl].[sum:Cost:qk]' value='8' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[federated.0snhngp1rkwr1115dl6dp1qripkl].[none:Season:nk]' value='68' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-format' field='[federated.0snhngp1rkwr1115dl6dp1qripkl].[usr:Calculation_-8074391144625012736:qk]' value='c&quot;$&quot;#,##0.00;(&quot;$&quot;#,##0.00)' />
          </style-rule>
        </style>
        <panes>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Shape' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='181' />
                <format attr='maxwidth' value='181' />
                <format attr='minheight' value='620' />
                <format attr='maxheight' value='620' />
                <format attr='aspect' value='0' />
              </style-rule>
            </style>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' x-axis-name='[federated.0snhngp1rkwr1115dl6dp1qripkl].[sum:Clicks:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Shape' />
            <encodings>
              <size column='[federated.0snhngp1rkwr1115dl6dp1qripkl].[sum:Clicks:qk]' />
            </encodings>
            <style>
              <style-rule element='datalabel'>
                <format attr='color-mode' value='auto' />
                <format attr='font-size' value='8' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='shape' value=':filled/circle' />
                <format attr='mark-labels-show' value='false' />
                <format attr='mark-color' value='#59a14f' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='184' />
                <format attr='maxwidth' value='184' />
                <format attr='minheight' value='620' />
                <format attr='maxheight' value='620' />
                <format attr='aspect' value='0' />
              </style-rule>
            </style>
          </pane>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow' x-axis-name='[federated.0snhngp1rkwr1115dl6dp1qripkl].[sum:Cost:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Shape' />
            <encodings>
              <size column='[federated.0snhngp1rkwr1115dl6dp1qripkl].[sum:Cost:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='184' />
                <format attr='maxwidth' value='184' />
                <format attr='minheight' value='620' />
                <format attr='maxheight' value='620' />
                <format attr='aspect' value='0' />
              </style-rule>
            </style>
          </pane>
          <pane id='4' selection-relaxation-option='selection-relaxation-allow' x-axis-name='[federated.0snhngp1rkwr1115dl6dp1qripkl].[usr:Calculation_-8074391144625012736:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Shape' />
            <encodings>
              <size column='[federated.0snhngp1rkwr1115dl6dp1qripkl].[usr:Calculation_-8074391144625012736:qk]' />
              <text column='[federated.0snhngp1rkwr1115dl6dp1qripkl].[usr:Calculation_-8074391144625012736:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='shape' value=':filled/diamond' />
                <format attr='mark-color' value='#b6992d' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='184' />
                <format attr='maxwidth' value='184' />
                <format attr='minheight' value='620' />
                <format attr='maxheight' value='620' />
                <format attr='aspect' value='0' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.0snhngp1rkwr1115dl6dp1qripkl].[none:Calculation_1995094673632403458:nk] / ([federated.0snhngp1rkwr1115dl6dp1qripkl].[none:Season:nk] / ([federated.0snhngp1rkwr1115dl6dp1qripkl].[none:Calculation_962925932752461831:nk] / [federated.0snhngp1rkwr1115dl6dp1qripkl].[none:Category:nk])))</rows>
        <cols>([federated.0snhngp1rkwr1115dl6dp1qripkl].[sum:Clicks:qk] + ([federated.0snhngp1rkwr1115dl6dp1qripkl].[sum:Cost:qk] + [federated.0snhngp1rkwr1115dl6dp1qripkl].[usr:Calculation_-8074391144625012736:qk]))</cols>
      </table>
      <simple-id uuid='{D3A30023-A791-44D5-B117-E8028FB166FE}' />
    </worksheet>
    <worksheet name='CTR'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true'>CTR Over Time</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='raw data' name='federated.0snhngp1rkwr1115dl6dp1qripkl' />
          </datasources>
          <datasource-dependencies datasource='federated.0snhngp1rkwr1115dl6dp1qripkl'>
            <column caption='CTR' datatype='real' name='[Calculation_-8074391144621891581]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='sum([Clicks])/sum([Impressions])' />
            </column>
            <column caption='Year' datatype='string' datatype-customized='true' name='[Calculation_1995094673632403458]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='STR(Year([Datex]))' />
            </column>
            <column caption='Category' datatype='string' name='[Category]' role='dimension' type='nominal' />
            <column caption='Clicks' datatype='integer' name='[Clicks]' role='measure' type='quantitative' />
            <column datatype='date' name='[Datex]' role='dimension' type='ordinal' />
            <column caption='Impressions' datatype='integer' name='[Impressions]' role='measure' type='quantitative' />
            <column aggregation='Sum' datatype='integer' name='[Period]' role='dimension' type='ordinal' />
            <column caption='Season' datatype='string' name='[Season]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_1995094673632403458]' derivation='None' name='[none:Calculation_1995094673632403458:nk]' pivot='key' type='nominal' />
            <column-instance column='[Category]' derivation='None' name='[none:Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Period]' derivation='None' name='[none:Period:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Season]' derivation='None' name='[none:Season:nk]' pivot='key' type='nominal' />
            <column-instance column='[Clicks]' derivation='Sum' name='[sum:Clicks:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Impressions]' derivation='Sum' name='[sum:Impressions:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_-8074391144621891581]' derivation='User' name='[usr:Calculation_-8074391144621891581:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0snhngp1rkwr1115dl6dp1qripkl].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0snhngp1rkwr1115dl6dp1qripkl].[sum:Impressions:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0snhngp1rkwr1115dl6dp1qripkl].[sum:Clicks:qk]&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.0snhngp1rkwr1115dl6dp1qripkl].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.0snhngp1rkwr1115dl6dp1qripkl].[sum:Impressions:qk]&quot;</bucket>
              <bucket>&quot;[federated.0snhngp1rkwr1115dl6dp1qripkl].[sum:Clicks:qk]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='categorical' column='[federated.0snhngp1rkwr1115dl6dp1qripkl].[none:Calculation_1995094673632403458:nk]'>
            <groupfilter function='level-members' level='[none:Calculation_1995094673632403458:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0snhngp1rkwr1115dl6dp1qripkl].[none:Category:nk]' filter-group='5'>
            <groupfilter function='level-members' level='[none:Category:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0snhngp1rkwr1115dl6dp1qripkl].[none:Season:nk]' filter-group='4'>
            <groupfilter function='level-members' level='[none:Season:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0snhngp1rkwr1115dl6dp1qripkl].[none:Category:nk]</column>
            <column>[federated.0snhngp1rkwr1115dl6dp1qripkl].[:Measure Names]</column>
            <column>[federated.0snhngp1rkwr1115dl6dp1qripkl].[none:Season:nk]</column>
            <column>[federated.0snhngp1rkwr1115dl6dp1qripkl].[none:Calculation_1995094673632403458:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.0snhngp1rkwr1115dl6dp1qripkl].[Multiple Values]' scope='rows' value='Count' />
            <encoding attr='space' class='0' field='[federated.0snhngp1rkwr1115dl6dp1qripkl].[usr:Calculation_-8074391144621891581:qk]' field-type='quantitative' fold='true' scope='rows' type='space' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='width' field='[federated.0snhngp1rkwr1115dl6dp1qripkl].[none:Period:ok]' value='28' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='fill-above' id='refline0' value='#00000000' />
            <format attr='fill-below' id='refline0' value='#00000000' />
            <format attr='fill-above' id='refline1' value='#00000000' />
            <format attr='fill-below' id='refline1' value='#00000000' />
            <format attr='fill-above' id='refline2' value='#00000000' />
            <format attr='fill-below' id='refline2' value='#00000000' />
            <format attr='fill-above' id='refline3' value='#00000000' />
            <format attr='fill-below' id='refline3' value='#00000000' />
            <format attr='text-format' id='refline3' value='n#,##0;-#,##0' />
            <format attr='fill-above' id='refline4' value='#00000000' />
            <format attr='fill-below' id='refline4' value='#00000000' />
            <format attr='fill-above' id='refline5' value='#00000000' />
            <format attr='fill-below' id='refline5' value='#00000000' />
            <format attr='fill-above' id='refline6' value='#00000000' />
            <format attr='fill-below' id='refline6' value='#00000000' />
            <format attr='text-format' id='refline9' value='n#,##0;-#,##0' />
            <format attr='fill-above' id='refline10' value='#00000000' />
            <format attr='fill-below' id='refline10' value='#00000000' />
            <format attr='text-format' id='refline11' value='n#,##0;-#,##0' />
            <format attr='fill-above' id='refline9' value='#00000000' />
            <format attr='fill-below' id='refline9' value='#00000000' />
            <format attr='text-format' id='refline8' value='n#,##0;-#,##0' />
            <format attr='text-format' id='refline10' value='n#,##0;-#,##0' />
            <format attr='text-format' id='refline0' value='n#,##0;-#,##0' />
          </style-rule>
        </style>
        <panes>
          <pane id='9' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.0snhngp1rkwr1115dl6dp1qripkl].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='datalabel'>
                <format attr='color-mode' value='auto' />
                <format attr='font-size' value='8' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='size' value='2' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
                <format attr='line-interpolation' value='linear' />
                <format attr='mark-markers-mode' value='all' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
          <pane id='10' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0snhngp1rkwr1115dl6dp1qripkl].[Multiple Values]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.0snhngp1rkwr1115dl6dp1qripkl].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='datalabel'>
                <format attr='color-mode' value='auto' />
                <format attr='font-size' value='8' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='size' value='1.0324862003326416' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
                <format attr='line-interpolation' value='linear' />
                <format attr='mark-markers-mode' value='all' />
                <format attr='mark-transparency' value='193' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
          <pane id='11' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0snhngp1rkwr1115dl6dp1qripkl].[usr:Calculation_-8074391144621891581:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.0snhngp1rkwr1115dl6dp1qripkl].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='datalabel'>
                <format attr='color-mode' value='auto' />
                <format attr='font-size' value='8' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='size' value='0.91154694557189941' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
                <format attr='line-interpolation' value='linear' />
                <format attr='mark-markers-mode' value='all' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.0snhngp1rkwr1115dl6dp1qripkl].[Multiple Values] + [federated.0snhngp1rkwr1115dl6dp1qripkl].[usr:Calculation_-8074391144621891581:qk])</rows>
        <cols>[federated.0snhngp1rkwr1115dl6dp1qripkl].[none:Period:ok]</cols>
      </table>
      <simple-id uuid='{8F3CDD77-8A41-4F8A-9ECB-283A62E1F200}' />
    </worksheet>
    <worksheet name='Conversion'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true'>Conversion Over Time</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='raw data' name='federated.0snhngp1rkwr1115dl6dp1qripkl' />
          </datasources>
          <datasource-dependencies datasource='federated.0snhngp1rkwr1115dl6dp1qripkl'>
            <column caption='Conversion' datatype='real' name='[Calculation_1707427246772649986]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='sum([Orders])/sum([Clicks])' />
            </column>
            <column caption='Year' datatype='string' datatype-customized='true' name='[Calculation_1995094673632403458]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='STR(Year([Datex]))' />
            </column>
            <column caption='Category' datatype='string' name='[Category]' role='dimension' type='nominal' />
            <column caption='Clicks' datatype='integer' name='[Clicks]' role='measure' type='quantitative' />
            <column datatype='date' name='[Datex]' role='dimension' type='ordinal' />
            <column caption='Orders' datatype='integer' name='[Orders]' role='measure' type='quantitative' />
            <column aggregation='Sum' datatype='integer' name='[Period]' role='dimension' type='ordinal' />
            <column caption='Season' datatype='string' name='[Season]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_1995094673632403458]' derivation='None' name='[none:Calculation_1995094673632403458:nk]' pivot='key' type='nominal' />
            <column-instance column='[Category]' derivation='None' name='[none:Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Period]' derivation='None' name='[none:Period:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Season]' derivation='None' name='[none:Season:nk]' pivot='key' type='nominal' />
            <column-instance column='[Clicks]' derivation='Sum' name='[sum:Clicks:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Orders]' derivation='Sum' name='[sum:Orders:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1707427246772649986]' derivation='User' name='[usr:Calculation_1707427246772649986:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0snhngp1rkwr1115dl6dp1qripkl].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0snhngp1rkwr1115dl6dp1qripkl].[sum:Clicks:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0snhngp1rkwr1115dl6dp1qripkl].[sum:Orders:qk]&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0snhngp1rkwr1115dl6dp1qripkl].[none:Calculation_1995094673632403458:nk]'>
            <groupfilter function='level-members' level='[none:Calculation_1995094673632403458:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0snhngp1rkwr1115dl6dp1qripkl].[none:Category:nk]' filter-group='5'>
            <groupfilter function='level-members' level='[none:Category:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0snhngp1rkwr1115dl6dp1qripkl].[none:Season:nk]' filter-group='4'>
            <groupfilter function='level-members' level='[none:Season:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0snhngp1rkwr1115dl6dp1qripkl].[none:Category:nk]</column>
            <column>[federated.0snhngp1rkwr1115dl6dp1qripkl].[:Measure Names]</column>
            <column>[federated.0snhngp1rkwr1115dl6dp1qripkl].[none:Season:nk]</column>
            <column>[federated.0snhngp1rkwr1115dl6dp1qripkl].[none:Calculation_1995094673632403458:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='width' field='[federated.0snhngp1rkwr1115dl6dp1qripkl].[sum:Clicks:qk]' value='56' />
            <format attr='width' field='[federated.0snhngp1rkwr1115dl6dp1qripkl].[sum:Orders:qk]' value='56' />
            <format attr='title' class='0' field='[federated.0snhngp1rkwr1115dl6dp1qripkl].[Multiple Values]' scope='rows' value='Count' />
            <encoding attr='space' class='0' field='[federated.0snhngp1rkwr1115dl6dp1qripkl].[usr:Calculation_1707427246772649986:qk]' field-type='quantitative' fold='true' scope='rows' type='space' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-format' field='[federated.0snhngp1rkwr1115dl6dp1qripkl].[usr:Calculation_1707427246772649986:qk]' value='p0.00%' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='fill-above' id='refline2' value='#00000000' />
            <format attr='fill-below' id='refline2' value='#00000000' />
            <format attr='fill-above' id='refline0' value='#00000000' />
            <format attr='fill-below' id='refline0' value='#00000000' />
          </style-rule>
        </style>
        <panes>
          <pane id='13' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.0snhngp1rkwr1115dl6dp1qripkl].[:Measure Names]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878'>Month:&#9;</run>
                <run bold='true'><![CDATA[<[federated.0snhngp1rkwr1115dl6dp1qripkl].[none:Calculation_962925932752461831:nk]>]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'><![CDATA[<[federated.0snhngp1rkwr1115dl6dp1qripkl].[:Measure Names]>:	]]></run>
                <run bold='true'><![CDATA[<[federated.0snhngp1rkwr1115dl6dp1qripkl].[Multiple Values]>]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Conversion:&#9;</run>
                <run bold='true'><![CDATA[<[federated.0snhngp1rkwr1115dl6dp1qripkl].[usr:Calculation_1707427246772649986:qk]>]]></run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='1' />
                <format attr='mark-labels-show' value='false' />
                <format attr='mark-transparency' value='208' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
          <pane id='14' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0snhngp1rkwr1115dl6dp1qripkl].[Multiple Values]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.0snhngp1rkwr1115dl6dp1qripkl].[:Measure Names]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878'>Month:&#9;</run>
                <run bold='true'><![CDATA[<[federated.0snhngp1rkwr1115dl6dp1qripkl].[none:Calculation_962925932752461831:nk]>]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'><![CDATA[<[federated.0snhngp1rkwr1115dl6dp1qripkl].[:Measure Names]>:	]]></run>
                <run bold='true'><![CDATA[<[federated.0snhngp1rkwr1115dl6dp1qripkl].[Multiple Values]>]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Conversion:&#9;</run>
                <run bold='true'><![CDATA[<[federated.0snhngp1rkwr1115dl6dp1qripkl].[usr:Calculation_1707427246772649986:qk]>]]></run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='1' />
                <format attr='mark-labels-show' value='false' />
                <format attr='mark-transparency' value='208' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
          <pane id='15' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0snhngp1rkwr1115dl6dp1qripkl].[usr:Calculation_1707427246772649986:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.0snhngp1rkwr1115dl6dp1qripkl].[:Measure Names]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878'>Month:&#9;</run>
                <run bold='true'><![CDATA[<[federated.0snhngp1rkwr1115dl6dp1qripkl].[none:Calculation_962925932752461831:nk]>]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'><![CDATA[<[federated.0snhngp1rkwr1115dl6dp1qripkl].[:Measure Names]>:	]]></run>
                <run bold='true'><![CDATA[<[federated.0snhngp1rkwr1115dl6dp1qripkl].[Multiple Values]>]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Conversion:&#9;</run>
                <run bold='true'><![CDATA[<[federated.0snhngp1rkwr1115dl6dp1qripkl].[usr:Calculation_1707427246772649986:qk]>]]></run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='1' />
                <format attr='mark-labels-show' value='false' />
                <format attr='mark-transparency' value='208' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.0snhngp1rkwr1115dl6dp1qripkl].[Multiple Values] + [federated.0snhngp1rkwr1115dl6dp1qripkl].[usr:Calculation_1707427246772649986:qk])</rows>
        <cols>[federated.0snhngp1rkwr1115dl6dp1qripkl].[none:Period:ok]</cols>
      </table>
      <simple-id uuid='{07AAE008-CAF8-4690-98C6-9C2176074848}' />
    </worksheet>
    <worksheet name='Cost'>
      <table>
        <view>
          <datasources>
            <datasource caption='raw data' name='federated.0snhngp1rkwr1115dl6dp1qripkl' />
          </datasources>
          <datasource-dependencies datasource='federated.0snhngp1rkwr1115dl6dp1qripkl'>
            <column caption='Year' datatype='string' datatype-customized='true' name='[Calculation_1995094673632403458]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='STR(Year([Datex]))' />
            </column>
            <column caption='Category' datatype='string' name='[Category]' role='dimension' type='nominal' />
            <column caption='Cost' datatype='real' name='[Cost]' role='measure' type='quantitative' />
            <column datatype='date' name='[Datex]' role='dimension' type='ordinal' />
            <column caption='Season' datatype='string' name='[Season]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_1995094673632403458]' derivation='None' name='[none:Calculation_1995094673632403458:nk]' pivot='key' type='nominal' />
            <column-instance column='[Category]' derivation='None' name='[none:Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Season]' derivation='None' name='[none:Season:nk]' pivot='key' type='nominal' />
            <column-instance column='[Cost]' derivation='Sum' name='[pcdf:sum:Cost:qk:4]' pivot='key' type='quantitative'>
              <table-calc diff-options='Relative' ordering-type='RowInPane' type='PctDiff'>
                <address>
                  <value>-1</value>
                </address>
              </table-calc>
            </column-instance>
            <column-instance column='[Cost]' derivation='Sum' name='[sum:Cost:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0snhngp1rkwr1115dl6dp1qripkl].[Exclusions (Season,Year)]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='crossjoin'>
                <groupfilter function='level-members' level='[none:Season:nk]' />
                <groupfilter function='level-members' level='[none:Calculation_1995094673632403458:nk]' />
              </groupfilter>
              <groupfilter function='reorder-dimensionality'>
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[none:Calculation_1995094673632403458:nk]' member='&quot;2018&quot;' />
                  <groupfilter function='member' level='[none:Season:nk]' member='&quot;Fall&quot;' />
                </groupfilter>
                <order>
                  <hierarchy name='[none:Season:nk]' />
                  <hierarchy name='[none:Calculation_1995094673632403458:nk]' />
                </order>
              </groupfilter>
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0snhngp1rkwr1115dl6dp1qripkl].[none:Category:nk]'>
            <groupfilter from='&quot;BRAND&quot;' function='range' level='[none:Category:nk]' to='&quot;PLA&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0snhngp1rkwr1115dl6dp1qripkl].[none:Category:nk]</column>
            <column>[federated.0snhngp1rkwr1115dl6dp1qripkl].[Exclusions (Season,Year)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='table'>
            <format attr='show-null-value-warning' value='false' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='fill-above' id='refline0' value='#00000000' />
            <format attr='fill-below' id='refline0' value='#00000000' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0snhngp1rkwr1115dl6dp1qripkl].[sum:Cost:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.0snhngp1rkwr1115dl6dp1qripkl].[sum:Cost:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0snhngp1rkwr1115dl6dp1qripkl].[pcdf:sum:Cost:qk:4]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.0snhngp1rkwr1115dl6dp1qripkl].[sum:Cost:qk] + [federated.0snhngp1rkwr1115dl6dp1qripkl].[pcdf:sum:Cost:qk:4])</rows>
        <cols>([federated.0snhngp1rkwr1115dl6dp1qripkl].[none:Season:nk] / [federated.0snhngp1rkwr1115dl6dp1qripkl].[none:Calculation_1995094673632403458:nk])</cols>
      </table>
      <simple-id uuid='{069A37F1-2C6A-472A-BFA4-FDF6F8BA1C97}' />
    </worksheet>
    <worksheet name='Cumlative all over time '>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true'>CTR Over Time</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='raw data' name='federated.0snhngp1rkwr1115dl6dp1qripkl' />
          </datasources>
          <datasource-dependencies datasource='federated.0snhngp1rkwr1115dl6dp1qripkl'>
            <column caption='Category' datatype='string' name='[Category]' role='dimension' type='nominal' />
            <column caption='Clicks' datatype='integer' name='[Clicks]' role='measure' type='quantitative' />
            <column caption='Cost' datatype='real' name='[Cost]' role='measure' type='quantitative' />
            <column caption='Demand' datatype='real' name='[Demand]' role='measure' type='quantitative' />
            <column caption='Impressions' datatype='integer' name='[Impressions]' role='measure' type='quantitative' />
            <column caption='Orders' datatype='integer' name='[Orders]' role='measure' type='quantitative' />
            <column aggregation='Sum' datatype='integer' name='[Period]' role='dimension' type='ordinal' />
            <column caption='Season' datatype='string' name='[Season]' role='dimension' type='nominal' />
            <column caption='Old Year' datatype='string' datatype-customized='true' name='[Year]' role='dimension' type='nominal' />
            <column-instance column='[Clicks]' derivation='Sum' name='[cum:sum:Clicks:qk]' pivot='key' type='quantitative'>
              <table-calc aggregation='Sum' ordering-type='Rows' type='CumTotal' />
            </column-instance>
            <column-instance column='[Cost]' derivation='Sum' name='[cum:sum:Cost:qk:2]' pivot='key' type='quantitative'>
              <table-calc aggregation='Sum' ordering-type='Rows' type='CumTotal' />
            </column-instance>
            <column-instance column='[Demand]' derivation='Sum' name='[cum:sum:Demand:qk:2]' pivot='key' type='quantitative'>
              <table-calc aggregation='Sum' ordering-type='Rows' type='CumTotal' />
            </column-instance>
            <column-instance column='[Impressions]' derivation='Sum' name='[cum:sum:Impressions:qk]' pivot='key' type='quantitative'>
              <table-calc aggregation='Sum' ordering-type='Rows' type='CumTotal' />
            </column-instance>
            <column-instance column='[Orders]' derivation='Sum' name='[cum:sum:Orders:qk]' pivot='key' type='quantitative'>
              <table-calc aggregation='Sum' ordering-type='Rows' type='CumTotal' />
            </column-instance>
            <column-instance column='[Category]' derivation='None' name='[none:Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Period]' derivation='None' name='[none:Period:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Season]' derivation='None' name='[none:Season:nk]' pivot='key' type='nominal' />
            <column-instance column='[Year]' derivation='None' name='[none:Year:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0snhngp1rkwr1115dl6dp1qripkl].[none:Category:nk]' filter-group='5'>
            <groupfilter function='level-members' level='[none:Category:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <natural-sort column='[federated.0snhngp1rkwr1115dl6dp1qripkl].[none:Period:ok]' direction='ASC' />
          <filter class='categorical' column='[federated.0snhngp1rkwr1115dl6dp1qripkl].[none:Season:nk]' filter-group='4'>
            <groupfilter function='level-members' level='[none:Season:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <natural-sort column='[federated.0snhngp1rkwr1115dl6dp1qripkl].[none:Season:nk]' direction='DESC' />
          <slices>
            <column>[federated.0snhngp1rkwr1115dl6dp1qripkl].[none:Category:nk]</column>
            <column>[federated.0snhngp1rkwr1115dl6dp1qripkl].[none:Season:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[federated.0snhngp1rkwr1115dl6dp1qripkl].[none:Period:ok]' value='28' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='fill-above' id='refline0' value='#00000000' />
            <format attr='fill-below' id='refline0' value='#00000000' />
            <format attr='fill-above' id='refline1' value='#00000000' />
            <format attr='fill-below' id='refline1' value='#00000000' />
            <format attr='fill-above' id='refline2' value='#00000000' />
            <format attr='fill-below' id='refline2' value='#00000000' />
            <format attr='fill-above' id='refline3' value='#00000000' />
            <format attr='fill-below' id='refline3' value='#00000000' />
            <format attr='text-format' id='refline3' value='n#,##0;-#,##0' />
            <format attr='fill-above' id='refline4' value='#00000000' />
            <format attr='fill-below' id='refline4' value='#00000000' />
            <format attr='fill-above' id='refline5' value='#00000000' />
            <format attr='fill-below' id='refline5' value='#00000000' />
            <format attr='fill-above' id='refline6' value='#00000000' />
            <format attr='fill-below' id='refline6' value='#00000000' />
            <format attr='text-format' id='refline9' value='n#,##0;-#,##0' />
            <format attr='fill-above' id='refline10' value='#00000000' />
            <format attr='fill-below' id='refline10' value='#00000000' />
            <format attr='text-format' id='refline11' value='n#,##0;-#,##0' />
            <format attr='fill-above' id='refline9' value='#00000000' />
            <format attr='fill-below' id='refline9' value='#00000000' />
            <format attr='text-format' id='refline8' value='n#,##0;-#,##0' />
            <format attr='text-format' id='refline10' value='n#,##0;-#,##0' />
            <format attr='text-format' id='refline0' value='n#,##0;-#,##0' />
          </style-rule>
        </style>
        <panes>
          <pane id='10' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <style>
              <style-rule element='datalabel'>
                <format attr='color-mode' value='auto' />
                <format attr='font-size' value='8' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='size' value='1.0324862003326416' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
                <format attr='line-interpolation' value='linear' />
                <format attr='mark-markers-mode' value='all' />
                <format attr='mark-transparency' value='193' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
          <pane id='11' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0snhngp1rkwr1115dl6dp1qripkl].[cum:sum:Impressions:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <style>
              <style-rule element='datalabel'>
                <format attr='color-mode' value='auto' />
                <format attr='font-size' value='8' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='size' value='1.0324862003326416' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
                <format attr='line-interpolation' value='linear' />
                <format attr='mark-markers-mode' value='all' />
                <format attr='mark-transparency' value='193' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
          <pane id='12' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0snhngp1rkwr1115dl6dp1qripkl].[cum:sum:Clicks:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <style>
              <style-rule element='datalabel'>
                <format attr='color-mode' value='auto' />
                <format attr='font-size' value='8' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='size' value='1.0324862003326416' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
                <format attr='line-interpolation' value='linear' />
                <format attr='mark-markers-mode' value='all' />
                <format attr='mark-transparency' value='193' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
          <pane id='13' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0snhngp1rkwr1115dl6dp1qripkl].[cum:sum:Orders:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <style>
              <style-rule element='datalabel'>
                <format attr='color-mode' value='auto' />
                <format attr='font-size' value='8' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='size' value='1.0324862003326416' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
                <format attr='line-interpolation' value='linear' />
                <format attr='mark-markers-mode' value='all' />
                <format attr='mark-transparency' value='193' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
          <pane id='14' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0snhngp1rkwr1115dl6dp1qripkl].[cum:sum:Cost:qk:2]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <style>
              <style-rule element='datalabel'>
                <format attr='color-mode' value='auto' />
                <format attr='font-size' value='8' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='size' value='1.0324862003326416' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
                <format attr='line-interpolation' value='linear' />
                <format attr='mark-markers-mode' value='all' />
                <format attr='mark-transparency' value='193' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
          <pane id='15' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0snhngp1rkwr1115dl6dp1qripkl].[cum:sum:Demand:qk:2]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <style>
              <style-rule element='datalabel'>
                <format attr='color-mode' value='auto' />
                <format attr='font-size' value='8' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='size' value='1.0324862003326416' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
                <format attr='line-interpolation' value='linear' />
                <format attr='mark-markers-mode' value='all' />
                <format attr='mark-transparency' value='193' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.0snhngp1rkwr1115dl6dp1qripkl].[cum:sum:Impressions:qk] + ([federated.0snhngp1rkwr1115dl6dp1qripkl].[cum:sum:Clicks:qk] + ([federated.0snhngp1rkwr1115dl6dp1qripkl].[cum:sum:Orders:qk] + ([federated.0snhngp1rkwr1115dl6dp1qripkl].[cum:sum:Cost:qk:2] + [federated.0snhngp1rkwr1115dl6dp1qripkl].[cum:sum:Demand:qk:2]))))</rows>
        <cols>([federated.0snhngp1rkwr1115dl6dp1qripkl].[none:Category:nk] / ([federated.0snhngp1rkwr1115dl6dp1qripkl].[none:Year:nk] / ([federated.0snhngp1rkwr1115dl6dp1qripkl].[none:Season:nk] / [federated.0snhngp1rkwr1115dl6dp1qripkl].[none:Period:ok])))</cols>
      </table>
      <simple-id uuid='{57B99BC1-796D-467E-8126-5D79858C9E03}' />
    </worksheet>
    <worksheet name='Cumulative_Demand'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true'>Cumulative Demand Over Time</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='raw data' name='federated.0snhngp1rkwr1115dl6dp1qripkl' />
          </datasources>
          <datasource-dependencies datasource='federated.0snhngp1rkwr1115dl6dp1qripkl'>
            <column caption='Year' datatype='string' datatype-customized='true' name='[Calculation_1995094673632403458]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='STR(Year([Datex]))' />
            </column>
            <column caption='Category' datatype='string' name='[Category]' role='dimension' type='nominal' />
            <column caption='Cost' datatype='real' name='[Cost]' role='measure' type='quantitative' />
            <column datatype='date' name='[Datex]' role='dimension' type='ordinal' />
            <column caption='Demand' datatype='real' name='[Demand]' role='measure' type='quantitative' />
            <column caption='Old Month' datatype='string' name='[Month]' role='dimension' type='nominal' />
            <column aggregation='Sum' datatype='integer' name='[Period]' role='dimension' type='ordinal' />
            <column caption='Season' datatype='string' name='[Season]' role='dimension' type='nominal' />
            <column-instance column='[Cost]' derivation='Sum' name='[cum:sum:Cost:qk:2]' pivot='key' type='quantitative'>
              <table-calc aggregation='Sum' ordering-type='Rows' type='CumTotal' />
            </column-instance>
            <column-instance column='[Demand]' derivation='Sum' name='[cum:sum:Demand:qk:2]' pivot='key' type='quantitative'>
              <table-calc aggregation='Sum' ordering-type='Rows' type='CumTotal' />
            </column-instance>
            <column-instance column='[Old Month Set]' derivation='InOut' name='[io:Old Month Set:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1995094673632403458]' derivation='None' name='[none:Calculation_1995094673632403458:nk]' pivot='key' type='nominal' />
            <column-instance column='[Category]' derivation='None' name='[none:Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Period]' derivation='None' name='[none:Period:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Season]' derivation='None' name='[none:Season:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0snhngp1rkwr1115dl6dp1qripkl].[io:Old Month Set:nk]'>
            <groupfilter function='member' level='[io:Old Month Set:nk]' member='false' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0snhngp1rkwr1115dl6dp1qripkl].[none:Calculation_1995094673632403458:nk]'>
            <groupfilter from='&quot;2016&quot;' function='range' level='[none:Calculation_1995094673632403458:nk]' to='&quot;2018&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0snhngp1rkwr1115dl6dp1qripkl].[none:Category:nk]' filter-group='5'>
            <groupfilter function='level-members' level='[none:Category:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0snhngp1rkwr1115dl6dp1qripkl].[none:Season:nk]' filter-group='4'>
            <groupfilter function='level-members' level='[none:Season:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0snhngp1rkwr1115dl6dp1qripkl].[none:Season:nk]</column>
            <column>[federated.0snhngp1rkwr1115dl6dp1qripkl].[none:Category:nk]</column>
            <column>[federated.0snhngp1rkwr1115dl6dp1qripkl].[none:Calculation_1995094673632403458:nk]</column>
            <column>[federated.0snhngp1rkwr1115dl6dp1qripkl].[io:Old Month Set:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0snhngp1rkwr1115dl6dp1qripkl].[cum:sum:Cost:qk:2]' field-type='quantitative' fold='true' scope='rows' synchronized='true' type='space' />
            <format attr='title' class='0' field='[federated.0snhngp1rkwr1115dl6dp1qripkl].[cum:sum:Cost:qk:2]' scope='rows' value='' />
            <format attr='auto-subtitle' class='0' field='[federated.0snhngp1rkwr1115dl6dp1qripkl].[cum:sum:Cost:qk:2]' scope='rows' value='false' />
            <format attr='display' class='0' field='[federated.0snhngp1rkwr1115dl6dp1qripkl].[cum:sum:Cost:qk:2]' scope='rows' value='false' />
            <format attr='title' class='0' field='[federated.0snhngp1rkwr1115dl6dp1qripkl].[cum:sum:Demand:qk:2]' scope='rows' value='Cumulative Sum of Demand and Cost' />
            <format attr='auto-subtitle' class='0' field='[federated.0snhngp1rkwr1115dl6dp1qripkl].[cum:sum:Demand:qk:2]' scope='rows' value='false' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='fill-above' id='refline0' value='#00000000' />
            <format attr='fill-below' id='refline0' value='#00000000' />
          </style-rule>
        </style>
        <panes>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <lod column='[federated.0snhngp1rkwr1115dl6dp1qripkl].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#499894' />
              </style-rule>
            </style>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0snhngp1rkwr1115dl6dp1qripkl].[cum:sum:Demand:qk:2]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <lod column='[federated.0snhngp1rkwr1115dl6dp1qripkl].[:Measure Names]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878'>Month:&#9;</run>
                <run bold='true'><![CDATA[<[federated.0snhngp1rkwr1115dl6dp1qripkl].[none:Calculation_962925932752461831:nk]>]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Running Sum of Demand along Month:	</run>
                <run bold='true'><![CDATA[<[federated.0snhngp1rkwr1115dl6dp1qripkl].[cum:sum:Demand:qk:5]>]]></run>
                <run>Æ&#10;</run>
                <run bold='true'>&lt;</run>
                <run bold='true'><![CDATA[Sheet name="Demand Sub_chart" maxwidth="300" maxheight="300" filter="<All Fields>"]]></run>
                <run bold='true'>&gt;</run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#8cd17d' />
                <format attr='mark-transparency' value='226' />
              </style-rule>
            </style>
          </pane>
          <pane id='4' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0snhngp1rkwr1115dl6dp1qripkl].[cum:sum:Cost:qk:2]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <lod column='[federated.0snhngp1rkwr1115dl6dp1qripkl].[:Measure Names]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878'>Month:&#9;</run>
                <run bold='true'><![CDATA[<[federated.0snhngp1rkwr1115dl6dp1qripkl].[none:Calculation_962925932752461831:nk]>]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Running Sum of Cost along Table (Across):	</run>
                <run bold='true'><![CDATA[<[federated.0snhngp1rkwr1115dl6dp1qripkl].[cum:sum:Cost:qk:2]>]]></run>
                <run>Æ&#10;</run>
                <run bold='true'>&lt;</run>
                <run bold='true'><![CDATA[Sheet name="Demand Sub_chart" maxwidth="300" maxheight="300" filter="<All Fields>"]]></run>
                <run bold='true'>&gt;</run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#4e79a7' />
                <format attr='size' value='1.5932043790817261' />
                <format attr='mark-markers-mode' value='all' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.0snhngp1rkwr1115dl6dp1qripkl].[cum:sum:Demand:qk:2] + [federated.0snhngp1rkwr1115dl6dp1qripkl].[cum:sum:Cost:qk:2])</rows>
        <cols>[federated.0snhngp1rkwr1115dl6dp1qripkl].[none:Period:ok]</cols>
      </table>
      <simple-id uuid='{20D4C5A0-F8BC-46C6-8AD4-DD2E7B2BA629}' />
    </worksheet>
    <worksheet name='Demand Sub_chart'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true'>Demand and Cost Over Time</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='raw data' name='federated.0snhngp1rkwr1115dl6dp1qripkl' />
          </datasources>
          <datasource-dependencies datasource='federated.0snhngp1rkwr1115dl6dp1qripkl'>
            <column caption='Year' datatype='string' datatype-customized='true' name='[Calculation_1995094673632403458]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='STR(Year([Datex]))' />
            </column>
            <column caption='Month' datatype='string' name='[Calculation_962925932752461831]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='if [Month]=&apos;August&apos; then &apos;Aug&apos;&#13;&#10;else [Month] end' />
            </column>
            <column caption='Category' datatype='string' name='[Category]' role='dimension' type='nominal' />
            <column caption='Cost' datatype='real' name='[Cost]' role='measure' type='quantitative' />
            <column datatype='date' name='[Datex]' role='dimension' type='ordinal' />
            <column caption='Demand' datatype='real' name='[Demand]' role='measure' type='quantitative' />
            <column caption='Old Month' datatype='string' name='[Month]' role='dimension' type='nominal' />
            <column aggregation='Sum' datatype='integer' name='[Period]' role='dimension' type='ordinal' />
            <column caption='Season' datatype='string' name='[Season]' role='dimension' type='nominal' />
            <column caption='Old Year' datatype='string' datatype-customized='true' name='[Year]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_1995094673632403458]' derivation='None' name='[none:Calculation_1995094673632403458:nk]' pivot='key' type='nominal' />
            <column-instance column='[Category]' derivation='None' name='[none:Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Period]' derivation='None' name='[none:Period:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Season]' derivation='None' name='[none:Season:nk]' pivot='key' type='nominal' />
            <column-instance column='[Cost]' derivation='Sum' name='[sum:Cost:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Demand]' derivation='Sum' name='[sum:Demand:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0snhngp1rkwr1115dl6dp1qripkl].[Tooltip (Month)]'>
            <groupfilter function='level-members' level='[Calculation_962925932752461831]' user:ui-action-filter='[Action - Demand]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0snhngp1rkwr1115dl6dp1qripkl].[Tooltip (Month,Year)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action - Demand]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Calculation_962925932752461831]' />
              <groupfilter function='level-members' level='[Year]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0snhngp1rkwr1115dl6dp1qripkl].[Tooltip (Period)]'>
            <groupfilter function='level-members' level='[Period]' user:ui-action-filter='[Action - Demand Sub_chart]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0snhngp1rkwr1115dl6dp1qripkl].[none:Calculation_1995094673632403458:nk]'>
            <groupfilter from='&quot;2016&quot;' function='range' level='[none:Calculation_1995094673632403458:nk]' to='&quot;2018&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0snhngp1rkwr1115dl6dp1qripkl].[none:Category:nk]' filter-group='5'>
            <groupfilter function='level-members' level='[none:Category:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0snhngp1rkwr1115dl6dp1qripkl].[none:Season:nk]' filter-group='4'>
            <groupfilter function='level-members' level='[none:Season:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0snhngp1rkwr1115dl6dp1qripkl].[none:Season:nk]</column>
            <column>[federated.0snhngp1rkwr1115dl6dp1qripkl].[none:Category:nk]</column>
            <column>[federated.0snhngp1rkwr1115dl6dp1qripkl].[Tooltip (Month)]</column>
            <column>[federated.0snhngp1rkwr1115dl6dp1qripkl].[Tooltip (Month,Year)]</column>
            <column>[federated.0snhngp1rkwr1115dl6dp1qripkl].[none:Calculation_1995094673632403458:nk]</column>
            <column>[federated.0snhngp1rkwr1115dl6dp1qripkl].[Tooltip (Period)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0snhngp1rkwr1115dl6dp1qripkl].[sum:Cost:qk]' field-type='quantitative' fold='true' scope='rows' synchronized='true' type='space' />
            <format attr='display' class='0' field='[federated.0snhngp1rkwr1115dl6dp1qripkl].[sum:Cost:qk]' scope='rows' value='false' />
            <format attr='title' class='0' field='[federated.0snhngp1rkwr1115dl6dp1qripkl].[sum:Demand:qk]' scope='rows' value=' Demand and Cost' />
            <encoding attr='space' class='0' domain-expand='false' field='[federated.0snhngp1rkwr1115dl6dp1qripkl].[sum:Demand:qk]' field-type='quantitative' scope='rows' type='space' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='width' field='[federated.0snhngp1rkwr1115dl6dp1qripkl].[none:Period:ok]' value='28' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.0snhngp1rkwr1115dl6dp1qripkl].[sum:Demand:qk]' palette='blue_teal_10_0' type='interpolated' />
            <encoding attr='color' field='[federated.0snhngp1rkwr1115dl6dp1qripkl].[sum:Cost:qk]' num-steps='2' palette='red_10_0' reverse='true' type='interpolated' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <lod column='[federated.0snhngp1rkwr1115dl6dp1qripkl].[:Measure Names]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878'>Month:&#9;</run>
                <run bold='true'><![CDATA[<[federated.0snhngp1rkwr1115dl6dp1qripkl].[none:Calculation_962925932752461831:nk]>]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Demand:&#9;</run>
                <run bold='true'><![CDATA[<[federated.0snhngp1rkwr1115dl6dp1qripkl].[sum:Demand:qk]>]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Cost:&#9;</run>
                <run bold='true'><![CDATA[<[federated.0snhngp1rkwr1115dl6dp1qripkl].[sum:Cost:qk]>]]></run>
                <run>Æ&#10;</run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#499894' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0snhngp1rkwr1115dl6dp1qripkl].[sum:Demand:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[federated.0snhngp1rkwr1115dl6dp1qripkl].[sum:Demand:qk]' />
              <text column='[federated.0snhngp1rkwr1115dl6dp1qripkl].[sum:Demand:qk]' />
              <lod column='[federated.0snhngp1rkwr1115dl6dp1qripkl].[:Measure Names]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878'>Month:&#9;</run>
                <run bold='true'><![CDATA[<[federated.0snhngp1rkwr1115dl6dp1qripkl].[none:Calculation_962925932752461831:nk]>]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Demand:&#9;</run>
                <run bold='true'><![CDATA[<[federated.0snhngp1rkwr1115dl6dp1qripkl].[sum:Demand:qk]>]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Cost:&#9;</run>
                <run bold='true'><![CDATA[<[federated.0snhngp1rkwr1115dl6dp1qripkl].[sum:Cost:qk]>]]></run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#f1ce63' />
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
          <pane id='4' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0snhngp1rkwr1115dl6dp1qripkl].[sum:Cost:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.0snhngp1rkwr1115dl6dp1qripkl].[sum:Cost:qk]' />
              <lod column='[federated.0snhngp1rkwr1115dl6dp1qripkl].[:Measure Names]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878'>Month:&#9;</run>
                <run bold='true'><![CDATA[<[federated.0snhngp1rkwr1115dl6dp1qripkl].[none:Calculation_962925932752461831:nk]>]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Demand:&#9;</run>
                <run bold='true'><![CDATA[<[federated.0snhngp1rkwr1115dl6dp1qripkl].[sum:Demand:qk]>]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Cost:&#9;</run>
                <run>Æ&#10;</run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#4e79a7' />
                <format attr='size' value='1.5932043790817261' />
                <format attr='mark-markers-mode' value='all' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.0snhngp1rkwr1115dl6dp1qripkl].[sum:Demand:qk] + [federated.0snhngp1rkwr1115dl6dp1qripkl].[sum:Cost:qk])</rows>
        <cols>[federated.0snhngp1rkwr1115dl6dp1qripkl].[none:Period:ok]</cols>
      </table>
      <simple-id uuid='{3FC65BC1-9DA5-4A6F-A9D8-C9988DDB3210}' />
    </worksheet>
    <worksheet name='Order'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true'>Order Change Over Time</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='raw data' name='federated.0snhngp1rkwr1115dl6dp1qripkl' />
          </datasources>
          <datasource-dependencies datasource='federated.0snhngp1rkwr1115dl6dp1qripkl'>
            <column caption='Year' datatype='string' datatype-customized='true' name='[Calculation_1995094673632403458]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='STR(Year([Datex]))' />
            </column>
            <column caption='Category' datatype='string' name='[Category]' role='dimension' type='nominal' />
            <column datatype='date' name='[Datex]' role='dimension' type='ordinal' />
            <column caption='Orders' datatype='integer' name='[Orders]' role='measure' type='quantitative' />
            <column aggregation='Sum' datatype='integer' name='[Period]' role='dimension' type='ordinal' />
            <column caption='Season' datatype='string' name='[Season]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_1995094673632403458]' derivation='None' name='[none:Calculation_1995094673632403458:nk]' pivot='key' type='nominal' />
            <column-instance column='[Category]' derivation='None' name='[none:Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Period]' derivation='None' name='[none:Period:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Season]' derivation='None' name='[none:Season:nk]' pivot='key' type='nominal' />
            <column-instance column='[Orders]' derivation='Sum' name='[pcdf:sum:Orders:qk]' pivot='key' type='quantitative'>
              <table-calc diff-options='Relative' ordering-type='Rows' type='PctDiff'>
                <address>
                  <value>-1</value>
                </address>
              </table-calc>
            </column-instance>
            <column-instance column='[Orders]' derivation='Sum' name='[sum:Orders:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0snhngp1rkwr1115dl6dp1qripkl].[none:Calculation_1995094673632403458:nk]'>
            <groupfilter from='&quot;2016&quot;' function='range' level='[none:Calculation_1995094673632403458:nk]' to='&quot;2018&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0snhngp1rkwr1115dl6dp1qripkl].[none:Category:nk]' filter-group='5'>
            <groupfilter function='level-members' level='[none:Category:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0snhngp1rkwr1115dl6dp1qripkl].[none:Season:nk]' filter-group='4'>
            <groupfilter function='level-members' level='[none:Season:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0snhngp1rkwr1115dl6dp1qripkl].[none:Category:nk]</column>
            <column>[federated.0snhngp1rkwr1115dl6dp1qripkl].[none:Season:nk]</column>
            <column>[federated.0snhngp1rkwr1115dl6dp1qripkl].[none:Calculation_1995094673632403458:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.0snhngp1rkwr1115dl6dp1qripkl].[sum:Orders:qk]' num-steps='6' palette='green_blue_diverging_10_0' type='interpolated' />
            <encoding attr='color' field='[federated.0snhngp1rkwr1115dl6dp1qripkl].[pcdf:sum:Orders:qk]' num-steps='6' palette='green_blue_diverging_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='table'>
            <format attr='omit-on-special' field='[federated.0snhngp1rkwr1115dl6dp1qripkl].[pcdf:sum:Orders:qk]' value='false' />
            <format attr='break-on-special' field='[federated.0snhngp1rkwr1115dl6dp1qripkl].[pcdf:sum:Orders:qk]' value='false' />
            <format attr='show-null-value-warning' field='[federated.0snhngp1rkwr1115dl6dp1qripkl].[pcdf:sum:Orders:qk]' value='false' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[federated.0snhngp1rkwr1115dl6dp1qripkl].[pcdf:sum:Orders:qk]' />
              <text column='[federated.0snhngp1rkwr1115dl6dp1qripkl].[sum:Orders:qk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878'>Month:&#9;</run>
                <run bold='true'><![CDATA[<[federated.0snhngp1rkwr1115dl6dp1qripkl].[none:Calculation_962925932752461831:nk]>]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>% Difference in Orders from the Previous along Table (Across):	</run>
                <run bold='true'><![CDATA[<[federated.0snhngp1rkwr1115dl6dp1qripkl].[pcdf:sum:Orders:qk]>]]></run>
                <run>Æ&#10;</run>
                <run bold='true'><![CDATA[<Sheet name="Order sub_chart" maxwidth="300" maxheight="300" filter="<All Fields>">]]></run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0snhngp1rkwr1115dl6dp1qripkl].[pcdf:sum:Orders:qk]</rows>
        <cols>[federated.0snhngp1rkwr1115dl6dp1qripkl].[none:Period:ok]</cols>
      </table>
      <simple-id uuid='{D53D6DB6-0457-401B-BF4A-4AE2E53C87AF}' />
    </worksheet>
    <worksheet name='Order sub_chart'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Order Over Time</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='raw data' name='federated.0snhngp1rkwr1115dl6dp1qripkl' />
          </datasources>
          <datasource-dependencies datasource='federated.0snhngp1rkwr1115dl6dp1qripkl'>
            <column caption='Year' datatype='string' datatype-customized='true' name='[Calculation_1995094673632403458]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='STR(Year([Datex]))' />
            </column>
            <column caption='Month' datatype='string' name='[Calculation_962925932752461831]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='if [Month]=&apos;August&apos; then &apos;Aug&apos;&#13;&#10;else [Month] end' />
            </column>
            <column caption='Category' datatype='string' name='[Category]' role='dimension' type='nominal' />
            <column datatype='date' name='[Datex]' role='dimension' type='ordinal' />
            <column caption='Old Month' datatype='string' name='[Month]' role='dimension' type='nominal' />
            <column caption='Orders' datatype='integer' name='[Orders]' role='measure' type='quantitative' />
            <column aggregation='Sum' datatype='integer' name='[Period]' role='dimension' type='ordinal' />
            <column caption='Season' datatype='string' name='[Season]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_1995094673632403458]' derivation='None' name='[none:Calculation_1995094673632403458:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_962925932752461831]' derivation='None' name='[none:Calculation_962925932752461831:nk]' pivot='key' type='nominal' />
            <column-instance column='[Category]' derivation='None' name='[none:Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Season]' derivation='None' name='[none:Season:nk]' pivot='key' type='nominal' />
            <column-instance column='[Orders]' derivation='Sum' name='[sum:Orders:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0snhngp1rkwr1115dl6dp1qripkl].[Tooltip (Month)]'>
            <groupfilter function='level-members' level='[Calculation_962925932752461831]' user:ui-action-filter='[Action - Order 2]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0snhngp1rkwr1115dl6dp1qripkl].[Tooltip (Month,Period)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action - Order sub_chart]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Calculation_962925932752461831]' />
              <groupfilter function='level-members' level='[Period]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0snhngp1rkwr1115dl6dp1qripkl].[Tooltip (Period)]'>
            <groupfilter function='level-members' level='[Period]' user:ui-action-filter='[Action - Order sub_chart]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0snhngp1rkwr1115dl6dp1qripkl].[Tooltip (Period1)]'>
            <groupfilter function='level-members' level='[Period]' user:ui-action-filter='[Action - Order sub_chart]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0snhngp1rkwr1115dl6dp1qripkl].[Tooltip (Year,Month)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action - Order sub_chart]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Calculation_1995094673632403458]' />
              <groupfilter function='level-members' level='[Calculation_962925932752461831]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0snhngp1rkwr1115dl6dp1qripkl].[Tooltip (Year,Month,Period)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action - Order sub_chart]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Calculation_1995094673632403458]' />
              <groupfilter function='level-members' level='[Calculation_962925932752461831]' />
              <groupfilter function='level-members' level='[Period]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0snhngp1rkwr1115dl6dp1qripkl].[Tooltip (Year,Period)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action - Order sub_chart]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Calculation_1995094673632403458]' />
              <groupfilter function='level-members' level='[Period]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0snhngp1rkwr1115dl6dp1qripkl].[none:Calculation_1995094673632403458:nk]'>
            <groupfilter function='level-members' level='[none:Calculation_1995094673632403458:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0snhngp1rkwr1115dl6dp1qripkl].[none:Category:nk]' filter-group='5'>
            <groupfilter function='level-members' level='[none:Category:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0snhngp1rkwr1115dl6dp1qripkl].[none:Season:nk]' filter-group='4'>
            <groupfilter function='level-members' level='[none:Season:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0snhngp1rkwr1115dl6dp1qripkl].[none:Category:nk]</column>
            <column>[federated.0snhngp1rkwr1115dl6dp1qripkl].[Tooltip (Month)]</column>
            <column>[federated.0snhngp1rkwr1115dl6dp1qripkl].[none:Season:nk]</column>
            <column>[federated.0snhngp1rkwr1115dl6dp1qripkl].[none:Calculation_1995094673632403458:nk]</column>
            <column>[federated.0snhngp1rkwr1115dl6dp1qripkl].[Tooltip (Period)]</column>
            <column>[federated.0snhngp1rkwr1115dl6dp1qripkl].[Tooltip (Year,Month)]</column>
            <column>[federated.0snhngp1rkwr1115dl6dp1qripkl].[Tooltip (Year,Period)]</column>
            <column>[federated.0snhngp1rkwr1115dl6dp1qripkl].[Tooltip (Month,Period)]</column>
            <column>[federated.0snhngp1rkwr1115dl6dp1qripkl].[Tooltip (Year,Month,Period)]</column>
            <column>[federated.0snhngp1rkwr1115dl6dp1qripkl].[Tooltip (Period1)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='refline'>
            <format attr='fill-above' id='refline0' value='#00000000' />
            <format attr='fill-below' id='refline0' value='#00000000' />
            <format attr='fill-above' id='refline1' value='#00000000' />
            <format attr='fill-below' id='refline1' value='#00000000' />
            <format attr='fill-above' id='refline2' value='#00000000' />
            <format attr='fill-below' id='refline2' value='#00000000' />
            <format attr='text-format' id='refline2' value='n#,##0;-#,##0' />
            <format attr='fill-above' id='refline3' value='#00000000' />
            <format attr='fill-below' id='refline3' value='#00000000' />
            <format attr='fill-above' id='refline4' value='#00000000' />
            <format attr='fill-below' id='refline4' value='#00000000' />
            <format attr='fill-above' id='refline5' value='#00000000' />
            <format attr='fill-below' id='refline5' value='#00000000' />
            <format attr='fill-above' id='refline6' value='#00000000' />
            <format attr='fill-below' id='refline6' value='#00000000' />
            <format attr='text-format' id='refline0' value='n#,##0;-#,##0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.0snhngp1rkwr1115dl6dp1qripkl].[none:Calculation_1995094673632403458:nk]' />
              <text column='[federated.0snhngp1rkwr1115dl6dp1qripkl].[sum:Orders:qk]' />
            </encodings>
            <style>
              <style-rule element='datalabel'>
                <format attr='color-mode' value='auto' />
                <format attr='font-size' value='8' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='size' value='1.2743645906448364' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.0snhngp1rkwr1115dl6dp1qripkl].[none:Calculation_962925932752461831:nk] / [federated.0snhngp1rkwr1115dl6dp1qripkl].[none:Calculation_1995094673632403458:nk])</rows>
        <cols>[federated.0snhngp1rkwr1115dl6dp1qripkl].[sum:Orders:qk]</cols>
      </table>
      <simple-id uuid='{11A4C6D2-A12E-4BBA-9157-57E84E63B6AE}' />
    </worksheet>
    <worksheet name='Percent difference all over time'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true'>CTR Over Time</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='raw data' name='federated.0snhngp1rkwr1115dl6dp1qripkl' />
          </datasources>
          <datasource-dependencies datasource='federated.0snhngp1rkwr1115dl6dp1qripkl'>
            <column caption='Category' datatype='string' name='[Category]' role='dimension' type='nominal' />
            <column caption='Clicks' datatype='integer' name='[Clicks]' role='measure' type='quantitative' />
            <column caption='Cost' datatype='real' name='[Cost]' role='measure' type='quantitative' />
            <column caption='Demand' datatype='real' name='[Demand]' role='measure' type='quantitative' />
            <column caption='Impressions' datatype='integer' name='[Impressions]' role='measure' type='quantitative' />
            <column caption='Orders' datatype='integer' name='[Orders]' role='measure' type='quantitative' />
            <column aggregation='Sum' datatype='integer' name='[Period]' role='dimension' type='ordinal' />
            <column caption='Season' datatype='string' name='[Season]' role='dimension' type='nominal' />
            <column caption='Old Year' datatype='string' datatype-customized='true' name='[Year]' role='dimension' type='nominal' />
            <column-instance column='[Category]' derivation='None' name='[none:Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Period]' derivation='None' name='[none:Period:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Season]' derivation='None' name='[none:Season:nk]' pivot='key' type='nominal' />
            <column-instance column='[Year]' derivation='None' name='[none:Year:nk]' pivot='key' type='nominal' />
            <column-instance column='[Clicks]' derivation='Sum' name='[pcdf:sum:Clicks:qk]' pivot='key' type='quantitative'>
              <table-calc diff-options='Relative' ordering-type='Rows' type='PctDiff'>
                <address>
                  <value>-1</value>
                </address>
              </table-calc>
            </column-instance>
            <column-instance column='[Cost]' derivation='Sum' name='[pcdf:sum:Cost:qk]' pivot='key' type='quantitative'>
              <table-calc diff-options='Relative' ordering-type='Rows' type='PctDiff'>
                <address>
                  <value>-1</value>
                </address>
              </table-calc>
            </column-instance>
            <column-instance column='[Demand]' derivation='Sum' name='[pcdf:sum:Demand:qk]' pivot='key' type='quantitative'>
              <table-calc diff-options='Relative' ordering-type='Rows' type='PctDiff'>
                <address>
                  <value>-1</value>
                </address>
              </table-calc>
            </column-instance>
            <column-instance column='[Impressions]' derivation='Sum' name='[pcdf:sum:Impressions:qk]' pivot='key' type='quantitative'>
              <table-calc diff-options='Relative' ordering-type='Rows' type='PctDiff'>
                <address>
                  <value>-1</value>
                </address>
              </table-calc>
            </column-instance>
            <column-instance column='[Orders]' derivation='Sum' name='[pcdf:sum:Orders:qk]' pivot='key' type='quantitative'>
              <table-calc diff-options='Relative' ordering-type='Rows' type='PctDiff'>
                <address>
                  <value>-1</value>
                </address>
              </table-calc>
            </column-instance>
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0snhngp1rkwr1115dl6dp1qripkl].[none:Category:nk]' filter-group='5'>
            <groupfilter function='level-members' level='[none:Category:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <natural-sort column='[federated.0snhngp1rkwr1115dl6dp1qripkl].[none:Period:ok]' direction='ASC' />
          <filter class='categorical' column='[federated.0snhngp1rkwr1115dl6dp1qripkl].[none:Season:nk]' filter-group='4'>
            <groupfilter function='level-members' level='[none:Season:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <natural-sort column='[federated.0snhngp1rkwr1115dl6dp1qripkl].[none:Season:nk]' direction='DESC' />
          <slices>
            <column>[federated.0snhngp1rkwr1115dl6dp1qripkl].[none:Category:nk]</column>
            <column>[federated.0snhngp1rkwr1115dl6dp1qripkl].[none:Season:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[federated.0snhngp1rkwr1115dl6dp1qripkl].[none:Period:ok]' value='28' />
          </style-rule>
          <style-rule element='table'>
            <format attr='omit-on-special' field='[federated.0snhngp1rkwr1115dl6dp1qripkl].[pcdf:sum:Clicks:qk]' value='false' />
            <format attr='break-on-special' field='[federated.0snhngp1rkwr1115dl6dp1qripkl].[pcdf:sum:Clicks:qk]' value='false' />
            <format attr='show-null-value-warning' field='[federated.0snhngp1rkwr1115dl6dp1qripkl].[pcdf:sum:Clicks:qk]' value='false' />
            <format attr='omit-on-special' field='[federated.0snhngp1rkwr1115dl6dp1qripkl].[pcdf:sum:Cost:qk]' value='false' />
            <format attr='break-on-special' field='[federated.0snhngp1rkwr1115dl6dp1qripkl].[pcdf:sum:Cost:qk]' value='false' />
            <format attr='show-null-value-warning' field='[federated.0snhngp1rkwr1115dl6dp1qripkl].[pcdf:sum:Cost:qk]' value='false' />
            <format attr='omit-on-special' field='[federated.0snhngp1rkwr1115dl6dp1qripkl].[pcdf:sum:Demand:qk]' value='false' />
            <format attr='break-on-special' field='[federated.0snhngp1rkwr1115dl6dp1qripkl].[pcdf:sum:Demand:qk]' value='false' />
            <format attr='show-null-value-warning' field='[federated.0snhngp1rkwr1115dl6dp1qripkl].[pcdf:sum:Demand:qk]' value='false' />
            <format attr='omit-on-special' field='[federated.0snhngp1rkwr1115dl6dp1qripkl].[pcdf:sum:Impressions:qk]' value='false' />
            <format attr='break-on-special' field='[federated.0snhngp1rkwr1115dl6dp1qripkl].[pcdf:sum:Impressions:qk]' value='false' />
            <format attr='show-null-value-warning' field='[federated.0snhngp1rkwr1115dl6dp1qripkl].[pcdf:sum:Impressions:qk]' value='false' />
            <format attr='omit-on-special' field='[federated.0snhngp1rkwr1115dl6dp1qripkl].[pcdf:sum:Orders:qk]' value='false' />
            <format attr='break-on-special' field='[federated.0snhngp1rkwr1115dl6dp1qripkl].[pcdf:sum:Orders:qk]' value='false' />
            <format attr='show-null-value-warning' field='[federated.0snhngp1rkwr1115dl6dp1qripkl].[pcdf:sum:Orders:qk]' value='false' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='fill-above' id='refline0' value='#00000000' />
            <format attr='fill-below' id='refline0' value='#00000000' />
            <format attr='fill-above' id='refline1' value='#00000000' />
            <format attr='fill-below' id='refline1' value='#00000000' />
            <format attr='fill-above' id='refline2' value='#00000000' />
            <format attr='fill-below' id='refline2' value='#00000000' />
            <format attr='fill-above' id='refline3' value='#00000000' />
            <format attr='fill-below' id='refline3' value='#00000000' />
            <format attr='text-format' id='refline3' value='n#,##0;-#,##0' />
            <format attr='fill-above' id='refline4' value='#00000000' />
            <format attr='fill-below' id='refline4' value='#00000000' />
            <format attr='fill-above' id='refline5' value='#00000000' />
            <format attr='fill-below' id='refline5' value='#00000000' />
            <format attr='fill-above' id='refline6' value='#00000000' />
            <format attr='fill-below' id='refline6' value='#00000000' />
            <format attr='text-format' id='refline9' value='n#,##0;-#,##0' />
            <format attr='fill-above' id='refline10' value='#00000000' />
            <format attr='fill-below' id='refline10' value='#00000000' />
            <format attr='text-format' id='refline11' value='n#,##0;-#,##0' />
            <format attr='fill-above' id='refline9' value='#00000000' />
            <format attr='fill-below' id='refline9' value='#00000000' />
            <format attr='text-format' id='refline8' value='n#,##0;-#,##0' />
            <format attr='text-format' id='refline10' value='n#,##0;-#,##0' />
            <format attr='text-format' id='refline0' value='n#,##0;-#,##0' />
          </style-rule>
        </style>
        <panes>
          <pane id='10' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878'>Period:&#9;</run>
                <run bold='true'><![CDATA[<[federated.0snhngp1rkwr1115dl6dp1qripkl].[none:Period:ok]>]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Season:&#9;</run>
                <run bold='true'><![CDATA[<[federated.0snhngp1rkwr1115dl6dp1qripkl].[none:Season:nk]>]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Old Year:&#9;</run>
                <run bold='true'><![CDATA[<[federated.0snhngp1rkwr1115dl6dp1qripkl].[none:Year:nk]>]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>% Difference in Impressions from the Previous along Table (Across):	</run>
                <run bold='true'><![CDATA[<[federated.0snhngp1rkwr1115dl6dp1qripkl].[pcdf:sum:Impressions:qk]>]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>% Difference in Clicks from the Previous along Table (Across):	</run>
                <run bold='true'><![CDATA[<[federated.0snhngp1rkwr1115dl6dp1qripkl].[pcdf:sum:Clicks:qk]>]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>% Difference in Orders from the Previous along Table (Across):	</run>
                <run bold='true'><![CDATA[<[federated.0snhngp1rkwr1115dl6dp1qripkl].[pcdf:sum:Orders:qk]>]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>% Difference in Cost from the Previous along Table (Across):	</run>
                <run bold='true'><![CDATA[<[federated.0snhngp1rkwr1115dl6dp1qripkl].[pcdf:sum:Cost:qk]>]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>% Difference in Demand from the Previous along Table (Across):	</run>
                <run bold='true'><![CDATA[<[federated.0snhngp1rkwr1115dl6dp1qripkl].[pcdf:sum:Demand:qk]>]]></run>
                <run>Æ&#10;</run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='datalabel'>
                <format attr='color-mode' value='auto' />
                <format attr='font-size' value='8' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='size' value='1.0324862003326416' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
                <format attr='line-interpolation' value='linear' />
                <format attr='mark-markers-mode' value='all' />
                <format attr='mark-transparency' value='193' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
          <pane id='11' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0snhngp1rkwr1115dl6dp1qripkl].[pcdf:sum:Impressions:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878'>Period:&#9;</run>
                <run bold='true'><![CDATA[<[federated.0snhngp1rkwr1115dl6dp1qripkl].[none:Period:ok]>]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Season:&#9;</run>
                <run bold='true'><![CDATA[<[federated.0snhngp1rkwr1115dl6dp1qripkl].[none:Season:nk]>]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Old Year:&#9;</run>
                <run bold='true'><![CDATA[<[federated.0snhngp1rkwr1115dl6dp1qripkl].[none:Year:nk]>]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>% Difference in Impressions from the Previous along Table (Across):	</run>
                <run bold='true'><![CDATA[<[federated.0snhngp1rkwr1115dl6dp1qripkl].[pcdf:sum:Impressions:qk]>]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>% Difference in Clicks from the Previous along Table (Across):	</run>
                <run bold='true'><![CDATA[<[federated.0snhngp1rkwr1115dl6dp1qripkl].[pcdf:sum:Clicks:qk]>]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>% Difference in Orders from the Previous along Table (Across):	</run>
                <run bold='true'><![CDATA[<[federated.0snhngp1rkwr1115dl6dp1qripkl].[pcdf:sum:Orders:qk]>]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>% Difference in Cost from the Previous along Table (Across):	</run>
                <run bold='true'><![CDATA[<[federated.0snhngp1rkwr1115dl6dp1qripkl].[pcdf:sum:Cost:qk]>]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>% Difference in Demand from the Previous along Table (Across):	</run>
                <run bold='true'><![CDATA[<[federated.0snhngp1rkwr1115dl6dp1qripkl].[pcdf:sum:Demand:qk]>]]></run>
                <run>Æ&#10;</run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='datalabel'>
                <format attr='color-mode' value='auto' />
                <format attr='font-size' value='8' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='size' value='1.0324862003326416' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
                <format attr='line-interpolation' value='linear' />
                <format attr='mark-markers-mode' value='all' />
                <format attr='mark-transparency' value='193' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
          <pane id='12' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0snhngp1rkwr1115dl6dp1qripkl].[pcdf:sum:Clicks:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878'>Period:&#9;</run>
                <run bold='true'><![CDATA[<[federated.0snhngp1rkwr1115dl6dp1qripkl].[none:Period:ok]>]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Season:&#9;</run>
                <run bold='true'><![CDATA[<[federated.0snhngp1rkwr1115dl6dp1qripkl].[none:Season:nk]>]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Old Year:&#9;</run>
                <run bold='true'><![CDATA[<[federated.0snhngp1rkwr1115dl6dp1qripkl].[none:Year:nk]>]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>% Difference in Impressions from the Previous along Table (Across):	</run>
                <run bold='true'><![CDATA[<[federated.0snhngp1rkwr1115dl6dp1qripkl].[pcdf:sum:Impressions:qk]>]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>% Difference in Clicks from the Previous along Table (Across):	</run>
                <run bold='true'><![CDATA[<[federated.0snhngp1rkwr1115dl6dp1qripkl].[pcdf:sum:Clicks:qk]>]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>% Difference in Orders from the Previous along Table (Across):	</run>
                <run bold='true'><![CDATA[<[federated.0snhngp1rkwr1115dl6dp1qripkl].[pcdf:sum:Orders:qk]>]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>% Difference in Cost from the Previous along Table (Across):	</run>
                <run bold='true'><![CDATA[<[federated.0snhngp1rkwr1115dl6dp1qripkl].[pcdf:sum:Cost:qk]>]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>% Difference in Demand from the Previous along Table (Across):	</run>
                <run bold='true'><![CDATA[<[federated.0snhngp1rkwr1115dl6dp1qripkl].[pcdf:sum:Demand:qk]>]]></run>
                <run>Æ&#10;</run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='datalabel'>
                <format attr='color-mode' value='auto' />
                <format attr='font-size' value='8' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='size' value='1.0324862003326416' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
                <format attr='line-interpolation' value='linear' />
                <format attr='mark-markers-mode' value='all' />
                <format attr='mark-transparency' value='193' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
          <pane id='13' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0snhngp1rkwr1115dl6dp1qripkl].[pcdf:sum:Orders:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878'>Period:&#9;</run>
                <run bold='true'><![CDATA[<[federated.0snhngp1rkwr1115dl6dp1qripkl].[none:Period:ok]>]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Season:&#9;</run>
                <run bold='true'><![CDATA[<[federated.0snhngp1rkwr1115dl6dp1qripkl].[none:Season:nk]>]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Old Year:&#9;</run>
                <run bold='true'><![CDATA[<[federated.0snhngp1rkwr1115dl6dp1qripkl].[none:Year:nk]>]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>% Difference in Impressions from the Previous along Table (Across):	</run>
                <run bold='true'><![CDATA[<[federated.0snhngp1rkwr1115dl6dp1qripkl].[pcdf:sum:Impressions:qk]>]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>% Difference in Clicks from the Previous along Table (Across):	</run>
                <run bold='true'><![CDATA[<[federated.0snhngp1rkwr1115dl6dp1qripkl].[pcdf:sum:Clicks:qk]>]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>% Difference in Orders from the Previous along Table (Across):	</run>
                <run bold='true'><![CDATA[<[federated.0snhngp1rkwr1115dl6dp1qripkl].[pcdf:sum:Orders:qk]>]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>% Difference in Cost from the Previous along Table (Across):	</run>
                <run bold='true'><![CDATA[<[federated.0snhngp1rkwr1115dl6dp1qripkl].[pcdf:sum:Cost:qk]>]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>% Difference in Demand from the Previous along Table (Across):	</run>
                <run bold='true'><![CDATA[<[federated.0snhngp1rkwr1115dl6dp1qripkl].[pcdf:sum:Demand:qk]>]]></run>
                <run>Æ&#10;</run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='datalabel'>
                <format attr='color-mode' value='auto' />
                <format attr='font-size' value='8' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='size' value='1.0324862003326416' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
                <format attr='line-interpolation' value='linear' />
                <format attr='mark-markers-mode' value='all' />
                <format attr='mark-transparency' value='193' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
          <pane id='14' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0snhngp1rkwr1115dl6dp1qripkl].[pcdf:sum:Cost:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878'>Period:&#9;</run>
                <run bold='true'><![CDATA[<[federated.0snhngp1rkwr1115dl6dp1qripkl].[none:Period:ok]>]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Season:&#9;</run>
                <run bold='true'><![CDATA[<[federated.0snhngp1rkwr1115dl6dp1qripkl].[none:Season:nk]>]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Old Year:&#9;</run>
                <run bold='true'><![CDATA[<[federated.0snhngp1rkwr1115dl6dp1qripkl].[none:Year:nk]>]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>% Difference in Impressions from the Previous along Table (Across):	</run>
                <run bold='true'><![CDATA[<[federated.0snhngp1rkwr1115dl6dp1qripkl].[pcdf:sum:Impressions:qk]>]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>% Difference in Clicks from the Previous along Table (Across):	</run>
                <run bold='true'><![CDATA[<[federated.0snhngp1rkwr1115dl6dp1qripkl].[pcdf:sum:Clicks:qk]>]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>% Difference in Orders from the Previous along Table (Across):	</run>
                <run bold='true'><![CDATA[<[federated.0snhngp1rkwr1115dl6dp1qripkl].[pcdf:sum:Orders:qk]>]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>% Difference in Cost from the Previous along Table (Across):	</run>
                <run bold='true'><![CDATA[<[federated.0snhngp1rkwr1115dl6dp1qripkl].[pcdf:sum:Cost:qk]>]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>% Difference in Demand from the Previous along Table (Across):	</run>
                <run bold='true'><![CDATA[<[federated.0snhngp1rkwr1115dl6dp1qripkl].[pcdf:sum:Demand:qk]>]]></run>
                <run>Æ&#10;</run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='datalabel'>
                <format attr='color-mode' value='auto' />
                <format attr='font-size' value='8' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='size' value='1.0324862003326416' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
                <format attr='line-interpolation' value='linear' />
                <format attr='mark-markers-mode' value='all' />
                <format attr='mark-transparency' value='193' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
          <pane id='15' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0snhngp1rkwr1115dl6dp1qripkl].[pcdf:sum:Demand:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878'>Period:&#9;</run>
                <run bold='true'><![CDATA[<[federated.0snhngp1rkwr1115dl6dp1qripkl].[none:Period:ok]>]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Season:&#9;</run>
                <run bold='true'><![CDATA[<[federated.0snhngp1rkwr1115dl6dp1qripkl].[none:Season:nk]>]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Old Year:&#9;</run>
                <run bold='true'><![CDATA[<[federated.0snhngp1rkwr1115dl6dp1qripkl].[none:Year:nk]>]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>% Difference in Impressions from the Previous along Table (Across):	</run>
                <run bold='true'><![CDATA[<[federated.0snhngp1rkwr1115dl6dp1qripkl].[pcdf:sum:Impressions:qk]>]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>% Difference in Clicks from the Previous along Table (Across):	</run>
                <run bold='true'><![CDATA[<[federated.0snhngp1rkwr1115dl6dp1qripkl].[pcdf:sum:Clicks:qk]>]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>% Difference in Orders from the Previous along Table (Across):	</run>
                <run bold='true'><![CDATA[<[federated.0snhngp1rkwr1115dl6dp1qripkl].[pcdf:sum:Orders:qk]>]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>% Difference in Cost from the Previous along Table (Across):	</run>
                <run bold='true'><![CDATA[<[federated.0snhngp1rkwr1115dl6dp1qripkl].[pcdf:sum:Cost:qk]>]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>% Difference in Demand from the Previous along Table (Across):	</run>
                <run bold='true'><![CDATA[<[federated.0snhngp1rkwr1115dl6dp1qripkl].[pcdf:sum:Demand:qk]>]]></run>
                <run>Æ&#10;</run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='datalabel'>
                <format attr='color-mode' value='auto' />
                <format attr='font-size' value='8' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='size' value='1.0324862003326416' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
                <format attr='line-interpolation' value='linear' />
                <format attr='mark-markers-mode' value='all' />
                <format attr='mark-transparency' value='193' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.0snhngp1rkwr1115dl6dp1qripkl].[pcdf:sum:Impressions:qk] + ([federated.0snhngp1rkwr1115dl6dp1qripkl].[pcdf:sum:Clicks:qk] + ([federated.0snhngp1rkwr1115dl6dp1qripkl].[pcdf:sum:Orders:qk] + ([federated.0snhngp1rkwr1115dl6dp1qripkl].[pcdf:sum:Cost:qk] + [federated.0snhngp1rkwr1115dl6dp1qripkl].[pcdf:sum:Demand:qk]))))</rows>
        <cols>([federated.0snhngp1rkwr1115dl6dp1qripkl].[none:Category:nk] / ([federated.0snhngp1rkwr1115dl6dp1qripkl].[none:Year:nk] / ([federated.0snhngp1rkwr1115dl6dp1qripkl].[none:Season:nk] / [federated.0snhngp1rkwr1115dl6dp1qripkl].[none:Period:ok])))</cols>
      </table>
      <simple-id uuid='{78456AEA-4B89-46BB-8A4B-EA841A5A26F6}' />
    </worksheet>
    <worksheet name='ROAS'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true'>ROAS with Cost and Demand</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='raw data' name='federated.0snhngp1rkwr1115dl6dp1qripkl' />
          </datasources>
          <datasource-dependencies datasource='federated.0snhngp1rkwr1115dl6dp1qripkl'>
            <column caption='ROAS' datatype='real' name='[Calculation_1661828300553678848]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='sum([Demand])/sum([Cost])' />
            </column>
            <column caption='Year' datatype='string' datatype-customized='true' name='[Calculation_1995094673632403458]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='STR(Year([Datex]))' />
            </column>
            <column caption='Month' datatype='string' name='[Calculation_962925932752461831]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='if [Month]=&apos;August&apos; then &apos;Aug&apos;&#13;&#10;else [Month] end' />
            </column>
            <column caption='Category' datatype='string' name='[Category]' role='dimension' type='nominal' />
            <column caption='Cost' datatype='real' name='[Cost]' role='measure' type='quantitative' />
            <column datatype='date' name='[Datex]' role='dimension' type='ordinal' />
            <column caption='Demand' datatype='real' name='[Demand]' role='measure' type='quantitative' />
            <column caption='Old Month' datatype='string' name='[Month]' role='dimension' type='nominal' />
            <column caption='Season' datatype='string' name='[Season]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_1995094673632403458]' derivation='None' name='[none:Calculation_1995094673632403458:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_962925932752461831]' derivation='None' name='[none:Calculation_962925932752461831:nk]' pivot='key' type='nominal' />
            <column-instance column='[Category]' derivation='None' name='[none:Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Season]' derivation='None' name='[none:Season:nk]' pivot='key' type='nominal' />
            <column-instance column='[Cost]' derivation='Sum' name='[sum:Cost:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Demand]' derivation='Sum' name='[sum:Demand:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1661828300553678848]' derivation='User' name='[usr:Calculation_1661828300553678848:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0snhngp1rkwr1115dl6dp1qripkl].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0snhngp1rkwr1115dl6dp1qripkl].[sum:Cost:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0snhngp1rkwr1115dl6dp1qripkl].[sum:Demand:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0snhngp1rkwr1115dl6dp1qripkl].[usr:Calculation_1661828300553678848:qk]&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0snhngp1rkwr1115dl6dp1qripkl].[none:Calculation_1995094673632403458:nk]'>
            <groupfilter from='&quot;2016&quot;' function='range' level='[none:Calculation_1995094673632403458:nk]' to='&quot;2018&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0snhngp1rkwr1115dl6dp1qripkl].[none:Category:nk]' filter-group='6'>
            <groupfilter function='member' level='[none:Category:nk]' member='&quot;BRAND&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0snhngp1rkwr1115dl6dp1qripkl].[none:Season:nk]' filter-group='7'>
            <groupfilter function='member' level='[none:Season:nk]' member='&quot;Spring&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0snhngp1rkwr1115dl6dp1qripkl].[:Measure Names]</column>
            <column>[federated.0snhngp1rkwr1115dl6dp1qripkl].[none:Category:nk]</column>
            <column>[federated.0snhngp1rkwr1115dl6dp1qripkl].[none:Season:nk]</column>
            <column>[federated.0snhngp1rkwr1115dl6dp1qripkl].[none:Calculation_1995094673632403458:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='text-format' field='[federated.0snhngp1rkwr1115dl6dp1qripkl].[usr:Calculation_1661828300553678848:qk]' value='n#,##0.00;-#,##0.00' />
            <format attr='width' field='[federated.0snhngp1rkwr1115dl6dp1qripkl].[:Measure Names]' value='154' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[federated.0snhngp1rkwr1115dl6dp1qripkl].[none:Calculation_962925932752461831:nk]' value='72' />
            <format attr='width' field='[federated.0snhngp1rkwr1115dl6dp1qripkl].[none:Category:nk]' value='120' />
            <format attr='width' field='[federated.0snhngp1rkwr1115dl6dp1qripkl].[none:Season:nk]' value='76' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.0snhngp1rkwr1115dl6dp1qripkl].[sum:Cost:qk]' palette='blue_teal_10_0' type='interpolated' />
            <encoding attr='color' field='[federated.0snhngp1rkwr1115dl6dp1qripkl].[sum:Demand:qk]' palette='red_green_gold_diverging_10_0' reverse='true' type='interpolated' />
            <encoding attr='color' field='[federated.0snhngp1rkwr1115dl6dp1qripkl].[usr:Calculation_1661828300553678848:qk]' palette='green_gold_10_0' type='interpolated' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0snhngp1rkwr1115dl6dp1qripkl].[usr:Calculation_1661828300553678848:qk]' />
              <text column='[federated.0snhngp1rkwr1115dl6dp1qripkl].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.0snhngp1rkwr1115dl6dp1qripkl].[none:Calculation_1995094673632403458:nk] / ([federated.0snhngp1rkwr1115dl6dp1qripkl].[none:Season:nk] / ([federated.0snhngp1rkwr1115dl6dp1qripkl].[none:Calculation_962925932752461831:nk] / [federated.0snhngp1rkwr1115dl6dp1qripkl].[none:Category:nk])))</rows>
        <cols>[federated.0snhngp1rkwr1115dl6dp1qripkl].[:Measure Names]</cols>
        <subtotals>
          <column>[federated.0snhngp1rkwr1115dl6dp1qripkl].[none:Season:nk]</column>
          <column>[federated.0snhngp1rkwr1115dl6dp1qripkl].[none:Year:nk]</column>
        </subtotals>
      </table>
      <simple-id uuid='{4663182A-D948-4AD8-A7E7-AA61DE707CE6}' />
    </worksheet>
    <worksheet name='Sheet 10'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Demand</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='raw data' name='federated.0snhngp1rkwr1115dl6dp1qripkl' />
          </datasources>
          <datasource-dependencies datasource='federated.0snhngp1rkwr1115dl6dp1qripkl'>
            <column caption='Month' datatype='string' name='[Calculation_962925932752461831]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='if [Month]=&apos;August&apos; then &apos;Aug&apos;&#13;&#10;else [Month] end' />
            </column>
            <column caption='Category' datatype='string' name='[Category]' role='dimension' type='nominal' />
            <column caption='Demand' datatype='real' name='[Demand]' role='measure' type='quantitative' />
            <column caption='Old Month' datatype='string' name='[Month]' role='dimension' type='nominal' />
            <column caption='Season' datatype='string' name='[Season]' role='dimension' type='nominal' />
            <column caption='Old Year' datatype='string' datatype-customized='true' name='[Year]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_962925932752461831]' derivation='None' name='[none:Calculation_962925932752461831:nk]' pivot='key' type='nominal' />
            <column-instance column='[Category]' derivation='None' name='[none:Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Season]' derivation='None' name='[none:Season:nk]' pivot='key' type='nominal' />
            <column-instance column='[Year]' derivation='None' name='[none:Year:nk]' pivot='key' type='nominal' />
            <column-instance column='[Demand]' derivation='Sum' name='[sum:Demand:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0snhngp1rkwr1115dl6dp1qripkl].[none:Calculation_962925932752461831:nk]'>
            <groupfilter function='level-members' level='[none:Calculation_962925932752461831:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0snhngp1rkwr1115dl6dp1qripkl].[none:Category:nk]'>
            <groupfilter function='member' level='[none:Category:nk]' member='&quot;BRAND&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0snhngp1rkwr1115dl6dp1qripkl].[none:Season:nk]'>
            <groupfilter function='member' level='[none:Season:nk]' member='&quot;Spring&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0snhngp1rkwr1115dl6dp1qripkl].[none:Year:nk]'>
            <groupfilter function='level-members' level='[none:Year:nk]' />
          </filter>
          <slices>
            <column>[federated.0snhngp1rkwr1115dl6dp1qripkl].[none:Category:nk]</column>
            <column>[federated.0snhngp1rkwr1115dl6dp1qripkl].[none:Calculation_962925932752461831:nk]</column>
            <column>[federated.0snhngp1rkwr1115dl6dp1qripkl].[none:Year:nk]</column>
            <column>[federated.0snhngp1rkwr1115dl6dp1qripkl].[none:Season:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[federated.0snhngp1rkwr1115dl6dp1qripkl].[none:Calculation_962925932752461831:nk]' value='121' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.0snhngp1rkwr1115dl6dp1qripkl].[none:Year:nk]' />
              <text column='[federated.0snhngp1rkwr1115dl6dp1qripkl].[sum:Demand:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0snhngp1rkwr1115dl6dp1qripkl].[sum:Demand:qk]</rows>
        <cols>[federated.0snhngp1rkwr1115dl6dp1qripkl].[none:Calculation_962925932752461831:nk]</cols>
      </table>
      <simple-id uuid='{4E1FC878-0109-40EE-824F-94FCF797B3DA}' />
    </worksheet>
    <worksheet name='Sheet 21'>
      <table>
        <view>
          <datasources>
            <datasource caption='raw data' name='federated.0snhngp1rkwr1115dl6dp1qripkl' />
          </datasources>
          <datasource-dependencies datasource='federated.0snhngp1rkwr1115dl6dp1qripkl'>
            <column caption='Category' datatype='string' name='[Category]' role='dimension' type='nominal' />
            <column caption='Impressions' datatype='integer' name='[Impressions]' role='measure' type='quantitative' />
            <column caption='Old Month' datatype='string' name='[Month]' role='dimension' type='nominal' />
            <column caption='Orders' datatype='integer' name='[Orders]' role='measure' type='quantitative' />
            <column-instance column='[Old Month Set]' derivation='InOut' name='[io:Old Month Set:nk]' pivot='key' type='nominal' />
            <column-instance column='[Category]' derivation='None' name='[none:Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Impressions]' derivation='None' name='[none:Impressions:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Orders]' derivation='None' name='[none:Orders:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0snhngp1rkwr1115dl6dp1qripkl].[io:Old Month Set:nk]'>
            <groupfilter function='member' level='[io:Old Month Set:nk]' member='false' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0snhngp1rkwr1115dl6dp1qripkl].[none:Category:nk]'>
            <groupfilter function='level-members' level='[none:Category:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0snhngp1rkwr1115dl6dp1qripkl].[io:Old Month Set:nk]</column>
            <column>[federated.0snhngp1rkwr1115dl6dp1qripkl].[none:Category:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <trendline enable-confidence-bands='false' enable-instant-analytics='true' enabled='true' exclude-color='false' exclude-intercept='false' fit='linear' />
          </pane>
        </panes>
        <rows>[federated.0snhngp1rkwr1115dl6dp1qripkl].[none:Orders:qk]</rows>
        <cols>([federated.0snhngp1rkwr1115dl6dp1qripkl].[none:Category:nk] * [federated.0snhngp1rkwr1115dl6dp1qripkl].[none:Impressions:qk])</cols>
      </table>
      <simple-id uuid='{14432D28-44FC-4CDE-B19D-9377756AB832}' />
    </worksheet>
    <worksheet name='Sheet 22'>
      <table>
        <view>
          <datasources>
            <datasource caption='raw data' name='federated.0snhngp1rkwr1115dl6dp1qripkl' />
          </datasources>
          <datasource-dependencies datasource='federated.0snhngp1rkwr1115dl6dp1qripkl'>
            <column caption='Category' datatype='string' name='[Category]' role='dimension' type='nominal' />
            <column caption='Clicks' datatype='integer' name='[Clicks]' role='measure' type='quantitative' />
            <column caption='Old Month' datatype='string' name='[Month]' role='dimension' type='nominal' />
            <column caption='Orders' datatype='integer' name='[Orders]' role='measure' type='quantitative' />
            <column-instance column='[Old Month Set]' derivation='InOut' name='[io:Old Month Set:nk]' pivot='key' type='nominal' />
            <column-instance column='[Category]' derivation='None' name='[none:Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Clicks]' derivation='None' name='[none:Clicks:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Orders]' derivation='None' name='[none:Orders:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0snhngp1rkwr1115dl6dp1qripkl].[io:Old Month Set:nk]'>
            <groupfilter function='member' level='[io:Old Month Set:nk]' member='false' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0snhngp1rkwr1115dl6dp1qripkl].[io:Old Month Set:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <trendline enable-confidence-bands='false' enable-instant-analytics='true' enabled='true' exclude-color='false' exclude-intercept='false' fit='linear' />
          </pane>
        </panes>
        <rows>[federated.0snhngp1rkwr1115dl6dp1qripkl].[none:Orders:qk]</rows>
        <cols>([federated.0snhngp1rkwr1115dl6dp1qripkl].[none:Category:nk] * [federated.0snhngp1rkwr1115dl6dp1qripkl].[none:Clicks:qk])</cols>
      </table>
      <simple-id uuid='{AE0EDD0C-741E-41F7-B23D-0ECDBFBED406}' />
    </worksheet>
    <worksheet name='Sheet 23'>
      <table>
        <view>
          <datasources>
            <datasource caption='raw data' name='federated.0snhngp1rkwr1115dl6dp1qripkl' />
          </datasources>
          <datasource-dependencies datasource='federated.0snhngp1rkwr1115dl6dp1qripkl'>
            <column caption='Category' datatype='string' name='[Category]' role='dimension' type='nominal' />
            <column caption='Cost' datatype='real' name='[Cost]' role='measure' type='quantitative' />
            <column caption='Old Month' datatype='string' name='[Month]' role='dimension' type='nominal' />
            <column caption='Orders' datatype='integer' name='[Orders]' role='measure' type='quantitative' />
            <column-instance column='[Old Month Set]' derivation='InOut' name='[io:Old Month Set:nk]' pivot='key' type='nominal' />
            <column-instance column='[Category]' derivation='None' name='[none:Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Cost]' derivation='None' name='[none:Cost:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Orders]' derivation='None' name='[none:Orders:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0snhngp1rkwr1115dl6dp1qripkl].[io:Old Month Set:nk]'>
            <groupfilter function='member' level='[io:Old Month Set:nk]' member='false' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0snhngp1rkwr1115dl6dp1qripkl].[none:Category:nk]'>
            <groupfilter function='level-members' level='[none:Category:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0snhngp1rkwr1115dl6dp1qripkl].[io:Old Month Set:nk]</column>
            <column>[federated.0snhngp1rkwr1115dl6dp1qripkl].[none:Category:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <trendline enable-confidence-bands='false' enable-instant-analytics='true' enabled='true' exclude-color='false' exclude-intercept='false' fit='linear' />
          </pane>
        </panes>
        <rows>[federated.0snhngp1rkwr1115dl6dp1qripkl].[none:Orders:qk]</rows>
        <cols>([federated.0snhngp1rkwr1115dl6dp1qripkl].[none:Category:nk] * [federated.0snhngp1rkwr1115dl6dp1qripkl].[none:Cost:qk])</cols>
      </table>
      <simple-id uuid='{2D70D78D-0BF8-403A-A7A3-20F261616E04}' />
    </worksheet>
    <worksheet name='Sheet 24'>
      <table>
        <view>
          <datasources>
            <datasource caption='raw data' name='federated.0snhngp1rkwr1115dl6dp1qripkl' />
          </datasources>
          <datasource-dependencies datasource='federated.0snhngp1rkwr1115dl6dp1qripkl'>
            <column caption='Category' datatype='string' name='[Category]' role='dimension' type='nominal' />
            <column caption='Demand' datatype='real' name='[Demand]' role='measure' type='quantitative' />
            <column caption='Old Month' datatype='string' name='[Month]' role='dimension' type='nominal' />
            <column caption='Orders' datatype='integer' name='[Orders]' role='measure' type='quantitative' />
            <column-instance column='[Old Month Set]' derivation='InOut' name='[io:Old Month Set:nk]' pivot='key' type='nominal' />
            <column-instance column='[Category]' derivation='None' name='[none:Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Demand]' derivation='None' name='[none:Demand:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Orders]' derivation='None' name='[none:Orders:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0snhngp1rkwr1115dl6dp1qripkl].[io:Old Month Set:nk]'>
            <groupfilter function='member' level='[io:Old Month Set:nk]' member='false' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0snhngp1rkwr1115dl6dp1qripkl].[none:Category:nk]'>
            <groupfilter function='level-members' level='[none:Category:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0snhngp1rkwr1115dl6dp1qripkl].[io:Old Month Set:nk]</column>
            <column>[federated.0snhngp1rkwr1115dl6dp1qripkl].[none:Category:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <trendline enable-confidence-bands='false' enable-instant-analytics='true' enabled='true' exclude-color='false' exclude-intercept='false' fit='linear' />
          </pane>
        </panes>
        <rows>[federated.0snhngp1rkwr1115dl6dp1qripkl].[none:Demand:qk]</rows>
        <cols>([federated.0snhngp1rkwr1115dl6dp1qripkl].[none:Category:nk] * [federated.0snhngp1rkwr1115dl6dp1qripkl].[none:Orders:qk])</cols>
      </table>
      <simple-id uuid='{0F93F530-4C9B-44E0-BB57-4FFA74EB9B2F}' />
    </worksheet>
    <worksheet name='Sheet 25'>
      <table>
        <view>
          <datasources>
            <datasource caption='raw data' name='federated.0snhngp1rkwr1115dl6dp1qripkl' />
          </datasources>
          <datasource-dependencies datasource='federated.0snhngp1rkwr1115dl6dp1qripkl'>
            <column caption='Category' datatype='string' name='[Category]' role='dimension' type='nominal' />
            <column caption='Cost' datatype='real' name='[Cost]' role='measure' type='quantitative' />
            <column caption='Demand' datatype='real' name='[Demand]' role='measure' type='quantitative' />
            <column caption='Old Month' datatype='string' name='[Month]' role='dimension' type='nominal' />
            <column-instance column='[Old Month Set]' derivation='InOut' name='[io:Old Month Set:nk]' pivot='key' type='nominal' />
            <column-instance column='[Category]' derivation='None' name='[none:Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Cost]' derivation='None' name='[none:Cost:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Demand]' derivation='None' name='[none:Demand:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0snhngp1rkwr1115dl6dp1qripkl].[io:Old Month Set:nk]'>
            <groupfilter function='member' level='[io:Old Month Set:nk]' member='false' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0snhngp1rkwr1115dl6dp1qripkl].[io:Old Month Set:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <trendline enable-confidence-bands='false' enable-instant-analytics='true' enabled='true' exclude-color='false' exclude-intercept='false' fit='linear' />
          </pane>
        </panes>
        <rows>[federated.0snhngp1rkwr1115dl6dp1qripkl].[none:Demand:qk]</rows>
        <cols>([federated.0snhngp1rkwr1115dl6dp1qripkl].[none:Category:nk] * [federated.0snhngp1rkwr1115dl6dp1qripkl].[none:Cost:qk])</cols>
      </table>
      <simple-id uuid='{1549F615-5166-4081-BFE3-F852243533E3}' />
    </worksheet>
    <worksheet name='Sheet 26'>
      <table>
        <view>
          <datasources>
            <datasource caption='raw data' name='federated.0snhngp1rkwr1115dl6dp1qripkl' />
          </datasources>
          <datasource-dependencies datasource='federated.0snhngp1rkwr1115dl6dp1qripkl'>
            <column caption='Category' datatype='string' name='[Category]' role='dimension' type='nominal' />
            <column caption='Clicks' datatype='integer' name='[Clicks]' role='measure' type='quantitative' />
            <column caption='Demand' datatype='real' name='[Demand]' role='measure' type='quantitative' />
            <column caption='Old Month' datatype='string' name='[Month]' role='dimension' type='nominal' />
            <column-instance column='[Old Month Set]' derivation='InOut' name='[io:Old Month Set:nk]' pivot='key' type='nominal' />
            <column-instance column='[Category]' derivation='None' name='[none:Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Clicks]' derivation='None' name='[none:Clicks:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Demand]' derivation='None' name='[none:Demand:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0snhngp1rkwr1115dl6dp1qripkl].[io:Old Month Set:nk]'>
            <groupfilter function='member' level='[io:Old Month Set:nk]' member='false' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0snhngp1rkwr1115dl6dp1qripkl].[io:Old Month Set:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <trendline enable-confidence-bands='false' enable-instant-analytics='true' enabled='true' exclude-color='false' exclude-intercept='false' fit='linear' />
          </pane>
        </panes>
        <rows>[federated.0snhngp1rkwr1115dl6dp1qripkl].[none:Demand:qk]</rows>
        <cols>([federated.0snhngp1rkwr1115dl6dp1qripkl].[none:Category:nk] * [federated.0snhngp1rkwr1115dl6dp1qripkl].[none:Clicks:qk])</cols>
      </table>
      <simple-id uuid='{FDE98136-FCDD-4DF9-B7B1-7C507968AB02}' />
    </worksheet>
    <worksheet name='Sheet 27'>
      <table>
        <view>
          <datasources>
            <datasource caption='raw data' name='federated.0snhngp1rkwr1115dl6dp1qripkl' />
          </datasources>
          <datasource-dependencies datasource='federated.0snhngp1rkwr1115dl6dp1qripkl'>
            <column caption='Category' datatype='string' name='[Category]' role='dimension' type='nominal' />
            <column caption='Demand' datatype='real' name='[Demand]' role='measure' type='quantitative' />
            <column caption='Impressions' datatype='integer' name='[Impressions]' role='measure' type='quantitative' />
            <column caption='Old Month' datatype='string' name='[Month]' role='dimension' type='nominal' />
            <column-instance column='[Old Month Set]' derivation='InOut' name='[io:Old Month Set:nk]' pivot='key' type='nominal' />
            <column-instance column='[Category]' derivation='None' name='[none:Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Demand]' derivation='None' name='[none:Demand:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Impressions]' derivation='None' name='[none:Impressions:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0snhngp1rkwr1115dl6dp1qripkl].[io:Old Month Set:nk]'>
            <groupfilter function='member' level='[io:Old Month Set:nk]' member='false' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0snhngp1rkwr1115dl6dp1qripkl].[io:Old Month Set:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <trendline enable-confidence-bands='false' enable-instant-analytics='true' enabled='true' exclude-color='false' exclude-intercept='false' fit='linear' />
          </pane>
        </panes>
        <rows>[federated.0snhngp1rkwr1115dl6dp1qripkl].[none:Demand:qk]</rows>
        <cols>([federated.0snhngp1rkwr1115dl6dp1qripkl].[none:Category:nk] * [federated.0snhngp1rkwr1115dl6dp1qripkl].[none:Impressions:qk])</cols>
      </table>
      <simple-id uuid='{3F6282AF-1D34-4221-BEA6-0FFB1CCE4AC2}' />
    </worksheet>
    <worksheet name='Sheet 33'>
      <table>
        <view>
          <datasources>
            <datasource caption='raw data' name='federated.0snhngp1rkwr1115dl6dp1qripkl' />
          </datasources>
          <datasource-dependencies datasource='federated.0snhngp1rkwr1115dl6dp1qripkl'>
            <column caption='Category' datatype='string' name='[Category]' role='dimension' type='nominal' />
            <column caption='Cost' datatype='real' name='[Cost]' role='measure' type='quantitative' />
            <column caption='Demand' datatype='real' name='[Demand]' role='measure' type='quantitative' />
            <column-instance column='[Category]' derivation='None' name='[none:Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Cost]' derivation='None' name='[none:Cost:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Demand]' derivation='None' name='[none:Demand:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0snhngp1rkwr1115dl6dp1qripkl].[none:Category:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.0snhngp1rkwr1115dl6dp1qripkl].[none:Demand:qk]</rows>
        <cols>[federated.0snhngp1rkwr1115dl6dp1qripkl].[none:Cost:qk]</cols>
      </table>
      <simple-id uuid='{7908896D-7E87-431C-9984-63941E26D09A}' />
    </worksheet>
    <worksheet name='Single Chart'>
      <table>
        <view>
          <datasources>
            <datasource caption='raw data' name='federated.0snhngp1rkwr1115dl6dp1qripkl' />
          </datasources>
          <datasource-dependencies datasource='federated.0snhngp1rkwr1115dl6dp1qripkl'>
            <column caption='Category' datatype='string' name='[Category]' role='dimension' type='nominal' />
            <column caption='Demand' datatype='real' name='[Demand]' role='measure' type='quantitative' />
            <column aggregation='Sum' datatype='integer' name='[Period]' role='dimension' type='ordinal' />
            <column-instance column='[Category]' derivation='None' name='[none:Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Period]' derivation='None' name='[none:Period:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Demand]' derivation='Sum' name='[sum:Demand:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[federated.0snhngp1rkwr1115dl6dp1qripkl].[none:Period:ok]' value='31' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.0snhngp1rkwr1115dl6dp1qripkl].[none:Category:nk]' />
            </encodings>
            <style>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0snhngp1rkwr1115dl6dp1qripkl].[sum:Demand:qk]</rows>
        <cols>[federated.0snhngp1rkwr1115dl6dp1qripkl].[none:Period:ok]</cols>
      </table>
      <simple-id uuid='{F2F92332-B32F-4F98-ADCC-4EF7A4815DAC}' />
    </worksheet>
    <worksheet name='all of regressions'>
      <table>
        <view>
          <datasources>
            <datasource caption='raw data' name='federated.0snhngp1rkwr1115dl6dp1qripkl' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='fields' datatype='string' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;Demand&quot;'>
              <calculation class='tableau' formula='&quot;Demand&quot;' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.0snhngp1rkwr1115dl6dp1qripkl'>
            <column caption='fields_choice' datatype='real' name='[Calculation_711005830858211330]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='Case [Parameters].[Parameter 1]&#13;&#10;when &quot;Demand&quot; THEN [Demand]&#13;&#10;when &quot;Orders&quot; THEN [Orders]&#13;&#10;when &quot;Clicks&quot; THEN [Clicks]&#13;&#10;when &quot;Cost&quot; THEN [Cost]&#13;&#10;when &quot;Impressions&quot; THEN [Impressions]&#13;&#10;End' />
            </column>
            <column caption='Category' datatype='string' name='[Category]' role='dimension' type='nominal' />
            <column caption='Clicks' datatype='integer' name='[Clicks]' role='measure' type='quantitative' />
            <column caption='Cost' datatype='real' name='[Cost]' role='measure' type='quantitative' />
            <column caption='Demand' datatype='real' name='[Demand]' role='measure' type='quantitative' />
            <column caption='Impressions' datatype='integer' name='[Impressions]' role='measure' type='quantitative' />
            <column caption='Old Month' datatype='string' name='[Month]' role='dimension' type='nominal' />
            <column caption='Orders' datatype='integer' name='[Orders]' role='measure' type='quantitative' />
            <column-instance column='[Old Month Set]' derivation='InOut' name='[io:Old Month Set:nk]' pivot='key' type='nominal' />
            <column-instance column='[Category]' derivation='None' name='[none:Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Clicks]' derivation='None' name='[none:Clicks:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Cost]' derivation='None' name='[none:Cost:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Demand]' derivation='None' name='[none:Demand:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Impressions]' derivation='None' name='[none:Impressions:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Orders]' derivation='None' name='[none:Orders:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_711005830858211330]' derivation='Sum' name='[sum:Calculation_711005830858211330:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0snhngp1rkwr1115dl6dp1qripkl].[io:Old Month Set:nk]'>
            <groupfilter function='member' level='[io:Old Month Set:nk]' member='false' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0snhngp1rkwr1115dl6dp1qripkl].[none:Category:nk]'>
            <groupfilter function='member' level='[none:Category:nk]' member='&quot;NON BRAND&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0snhngp1rkwr1115dl6dp1qripkl].[io:Old Month Set:nk]</column>
            <column>[federated.0snhngp1rkwr1115dl6dp1qripkl].[none:Category:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <size column='[federated.0snhngp1rkwr1115dl6dp1qripkl].[sum:Calculation_711005830858211330:qk]' />
            </encodings>
            <trendline enable-confidence-bands='false' enable-instant-analytics='true' enabled='true' exclude-color='false' exclude-intercept='false' fit='linear' />
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' x-axis-name='[federated.0snhngp1rkwr1115dl6dp1qripkl].[none:Orders:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <size column='[federated.0snhngp1rkwr1115dl6dp1qripkl].[sum:Calculation_711005830858211330:qk]' />
            </encodings>
            <trendline enable-confidence-bands='false' enable-instant-analytics='true' enabled='true' exclude-color='false' exclude-intercept='false' fit='linear' />
            <style>
              <style-rule element='mark'>
                <format attr='size' value='0.14193369448184967' />
              </style-rule>
            </style>
          </pane>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow' x-axis-name='[federated.0snhngp1rkwr1115dl6dp1qripkl].[none:Impressions:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <size column='[federated.0snhngp1rkwr1115dl6dp1qripkl].[sum:Calculation_711005830858211330:qk]' />
            </encodings>
            <trendline enable-confidence-bands='false' enable-instant-analytics='true' enabled='true' exclude-color='false' exclude-intercept='false' fit='linear' />
            <style>
              <style-rule element='mark'>
                <format attr='size' value='0.14193369448184967' />
              </style-rule>
            </style>
          </pane>
          <pane id='4' selection-relaxation-option='selection-relaxation-allow' x-axis-name='[federated.0snhngp1rkwr1115dl6dp1qripkl].[none:Cost:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <size column='[federated.0snhngp1rkwr1115dl6dp1qripkl].[sum:Calculation_711005830858211330:qk]' />
            </encodings>
            <trendline enable-confidence-bands='false' enable-instant-analytics='true' enabled='true' exclude-color='false' exclude-intercept='false' fit='linear' />
            <style>
              <style-rule element='mark'>
                <format attr='size' value='0.14193369448184967' />
              </style-rule>
            </style>
          </pane>
          <pane id='5' selection-relaxation-option='selection-relaxation-allow' x-axis-name='[federated.0snhngp1rkwr1115dl6dp1qripkl].[none:Clicks:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <size column='[federated.0snhngp1rkwr1115dl6dp1qripkl].[sum:Calculation_711005830858211330:qk]' />
            </encodings>
            <trendline enable-confidence-bands='false' enable-instant-analytics='true' enabled='true' exclude-color='false' exclude-intercept='false' fit='linear' />
            <style>
              <style-rule element='mark'>
                <format attr='size' value='0.14193369448184967' />
              </style-rule>
            </style>
          </pane>
          <pane id='6' selection-relaxation-option='selection-relaxation-allow' x-axis-name='[federated.0snhngp1rkwr1115dl6dp1qripkl].[none:Demand:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <size column='[federated.0snhngp1rkwr1115dl6dp1qripkl].[sum:Calculation_711005830858211330:qk]' />
            </encodings>
            <trendline enable-confidence-bands='false' enable-instant-analytics='true' enabled='true' exclude-color='false' exclude-intercept='false' fit='linear' />
            <style>
              <style-rule element='mark'>
                <format attr='size' value='0.14193369448184967' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.0snhngp1rkwr1115dl6dp1qripkl].[none:Demand:qk] + ([federated.0snhngp1rkwr1115dl6dp1qripkl].[none:Orders:qk] + ([federated.0snhngp1rkwr1115dl6dp1qripkl].[none:Clicks:qk] + ([federated.0snhngp1rkwr1115dl6dp1qripkl].[none:Cost:qk] + [federated.0snhngp1rkwr1115dl6dp1qripkl].[none:Impressions:qk]))))</rows>
        <cols>([federated.0snhngp1rkwr1115dl6dp1qripkl].[none:Category:nk] * ([federated.0snhngp1rkwr1115dl6dp1qripkl].[none:Demand:qk] + ([federated.0snhngp1rkwr1115dl6dp1qripkl].[none:Orders:qk] + ([federated.0snhngp1rkwr1115dl6dp1qripkl].[none:Clicks:qk] + ([federated.0snhngp1rkwr1115dl6dp1qripkl].[none:Cost:qk] + [federated.0snhngp1rkwr1115dl6dp1qripkl].[none:Impressions:qk])))))</cols>
      </table>
      <simple-id uuid='{D714FB49-2BB1-48EE-A8B2-352609EB9227}' />
    </worksheet>
    <worksheet name='all over time'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true'>CTR Over Time</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='raw data' name='federated.0snhngp1rkwr1115dl6dp1qripkl' />
          </datasources>
          <datasource-dependencies datasource='federated.0snhngp1rkwr1115dl6dp1qripkl'>
            <column caption='Category' datatype='string' name='[Category]' role='dimension' type='nominal' />
            <column caption='Clicks' datatype='integer' name='[Clicks]' role='measure' type='quantitative' />
            <column caption='Cost' datatype='real' name='[Cost]' role='measure' type='quantitative' />
            <column caption='Demand' datatype='real' name='[Demand]' role='measure' type='quantitative' />
            <column caption='Impressions' datatype='integer' name='[Impressions]' role='measure' type='quantitative' />
            <column caption='Orders' datatype='integer' name='[Orders]' role='measure' type='quantitative' />
            <column aggregation='Sum' datatype='integer' name='[Period]' role='dimension' type='ordinal' />
            <column caption='Season' datatype='string' name='[Season]' role='dimension' type='nominal' />
            <column caption='Old Year' datatype='string' datatype-customized='true' name='[Year]' role='dimension' type='nominal' />
            <column-instance column='[Category]' derivation='None' name='[none:Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Period]' derivation='None' name='[none:Period:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Season]' derivation='None' name='[none:Season:nk]' pivot='key' type='nominal' />
            <column-instance column='[Year]' derivation='None' name='[none:Year:nk]' pivot='key' type='nominal' />
            <column-instance column='[Clicks]' derivation='Sum' name='[sum:Clicks:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Cost]' derivation='Sum' name='[sum:Cost:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Demand]' derivation='Sum' name='[sum:Demand:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Impressions]' derivation='Sum' name='[sum:Impressions:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Orders]' derivation='Sum' name='[sum:Orders:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0snhngp1rkwr1115dl6dp1qripkl].[none:Category:nk]' filter-group='5'>
            <groupfilter function='level-members' level='[none:Category:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <natural-sort column='[federated.0snhngp1rkwr1115dl6dp1qripkl].[none:Period:ok]' direction='ASC' />
          <filter class='categorical' column='[federated.0snhngp1rkwr1115dl6dp1qripkl].[none:Season:nk]' filter-group='4'>
            <groupfilter function='level-members' level='[none:Season:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <natural-sort column='[federated.0snhngp1rkwr1115dl6dp1qripkl].[none:Season:nk]' direction='DESC' />
          <slices>
            <column>[federated.0snhngp1rkwr1115dl6dp1qripkl].[none:Category:nk]</column>
            <column>[federated.0snhngp1rkwr1115dl6dp1qripkl].[none:Season:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[federated.0snhngp1rkwr1115dl6dp1qripkl].[none:Period:ok]' value='28' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='fill-above' id='refline0' value='#00000000' />
            <format attr='fill-below' id='refline0' value='#00000000' />
            <format attr='fill-above' id='refline1' value='#00000000' />
            <format attr='fill-below' id='refline1' value='#00000000' />
            <format attr='fill-above' id='refline2' value='#00000000' />
            <format attr='fill-below' id='refline2' value='#00000000' />
            <format attr='fill-above' id='refline3' value='#00000000' />
            <format attr='fill-below' id='refline3' value='#00000000' />
            <format attr='text-format' id='refline3' value='n#,##0;-#,##0' />
            <format attr='fill-above' id='refline4' value='#00000000' />
            <format attr='fill-below' id='refline4' value='#00000000' />
            <format attr='fill-above' id='refline5' value='#00000000' />
            <format attr='fill-below' id='refline5' value='#00000000' />
            <format attr='fill-above' id='refline6' value='#00000000' />
            <format attr='fill-below' id='refline6' value='#00000000' />
            <format attr='text-format' id='refline9' value='n#,##0;-#,##0' />
            <format attr='fill-above' id='refline10' value='#00000000' />
            <format attr='fill-below' id='refline10' value='#00000000' />
            <format attr='text-format' id='refline11' value='n#,##0;-#,##0' />
            <format attr='fill-above' id='refline9' value='#00000000' />
            <format attr='fill-below' id='refline9' value='#00000000' />
            <format attr='text-format' id='refline8' value='n#,##0;-#,##0' />
            <format attr='text-format' id='refline10' value='n#,##0;-#,##0' />
            <format attr='text-format' id='refline0' value='n#,##0;-#,##0' />
          </style-rule>
        </style>
        <panes>
          <pane id='10' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <style>
              <style-rule element='datalabel'>
                <format attr='color-mode' value='auto' />
                <format attr='font-size' value='8' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='size' value='1.0324862003326416' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
                <format attr='line-interpolation' value='linear' />
                <format attr='mark-markers-mode' value='all' />
                <format attr='mark-transparency' value='193' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
          <pane id='11' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0snhngp1rkwr1115dl6dp1qripkl].[sum:Impressions:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <style>
              <style-rule element='datalabel'>
                <format attr='color-mode' value='auto' />
                <format attr='font-size' value='8' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='size' value='1.0324862003326416' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
                <format attr='line-interpolation' value='linear' />
                <format attr='mark-markers-mode' value='all' />
                <format attr='mark-transparency' value='193' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
          <pane id='12' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0snhngp1rkwr1115dl6dp1qripkl].[sum:Clicks:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <style>
              <style-rule element='datalabel'>
                <format attr='color-mode' value='auto' />
                <format attr='font-size' value='8' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='size' value='1.0324862003326416' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
                <format attr='line-interpolation' value='linear' />
                <format attr='mark-markers-mode' value='all' />
                <format attr='mark-transparency' value='193' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
          <pane id='13' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0snhngp1rkwr1115dl6dp1qripkl].[sum:Orders:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <style>
              <style-rule element='datalabel'>
                <format attr='color-mode' value='auto' />
                <format attr='font-size' value='8' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='size' value='1.0324862003326416' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
                <format attr='line-interpolation' value='linear' />
                <format attr='mark-markers-mode' value='all' />
                <format attr='mark-transparency' value='193' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
          <pane id='14' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0snhngp1rkwr1115dl6dp1qripkl].[sum:Cost:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <style>
              <style-rule element='datalabel'>
                <format attr='color-mode' value='auto' />
                <format attr='font-size' value='8' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='size' value='1.0324862003326416' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
                <format attr='line-interpolation' value='linear' />
                <format attr='mark-markers-mode' value='all' />
                <format attr='mark-transparency' value='193' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
          <pane id='15' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0snhngp1rkwr1115dl6dp1qripkl].[sum:Demand:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <style>
              <style-rule element='datalabel'>
                <format attr='color-mode' value='auto' />
                <format attr='font-size' value='8' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='size' value='1.0324862003326416' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
                <format attr='line-interpolation' value='linear' />
                <format attr='mark-markers-mode' value='all' />
                <format attr='mark-transparency' value='193' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.0snhngp1rkwr1115dl6dp1qripkl].[sum:Impressions:qk] + ([federated.0snhngp1rkwr1115dl6dp1qripkl].[sum:Clicks:qk] + ([federated.0snhngp1rkwr1115dl6dp1qripkl].[sum:Orders:qk] + ([federated.0snhngp1rkwr1115dl6dp1qripkl].[sum:Cost:qk] + [federated.0snhngp1rkwr1115dl6dp1qripkl].[sum:Demand:qk]))))</rows>
        <cols>([federated.0snhngp1rkwr1115dl6dp1qripkl].[none:Category:nk] / ([federated.0snhngp1rkwr1115dl6dp1qripkl].[none:Year:nk] / ([federated.0snhngp1rkwr1115dl6dp1qripkl].[none:Season:nk] / [federated.0snhngp1rkwr1115dl6dp1qripkl].[none:Period:ok])))</cols>
      </table>
      <simple-id uuid='{91EA50B2-22E3-4B76-BC66-24FF994A6173}' />
    </worksheet>
    <worksheet name='all over time (2)'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true'>CTR Over Time</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='raw data' name='federated.0snhngp1rkwr1115dl6dp1qripkl' />
          </datasources>
          <datasource-dependencies datasource='federated.0snhngp1rkwr1115dl6dp1qripkl'>
            <column caption='Category' datatype='string' name='[Category]' role='dimension' type='nominal' />
            <column caption='Demand' datatype='real' name='[Demand]' role='measure' type='quantitative' />
            <column aggregation='Sum' datatype='integer' name='[Period]' role='dimension' type='ordinal' />
            <column caption='Season' datatype='string' name='[Season]' role='dimension' type='nominal' />
            <column caption='Old Year' datatype='string' datatype-customized='true' name='[Year]' role='dimension' type='nominal' />
            <column-instance column='[Category]' derivation='None' name='[none:Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Period]' derivation='None' name='[none:Period:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Season]' derivation='None' name='[none:Season:nk]' pivot='key' type='nominal' />
            <column-instance column='[Year]' derivation='None' name='[none:Year:nk]' pivot='key' type='nominal' />
            <column-instance column='[Demand]' derivation='Sum' name='[sum:Demand:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0snhngp1rkwr1115dl6dp1qripkl].[none:Category:nk]' filter-group='5'>
            <groupfilter function='level-members' level='[none:Category:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <natural-sort column='[federated.0snhngp1rkwr1115dl6dp1qripkl].[none:Period:ok]' direction='ASC' />
          <filter class='categorical' column='[federated.0snhngp1rkwr1115dl6dp1qripkl].[none:Season:nk]' filter-group='4'>
            <groupfilter function='level-members' level='[none:Season:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <natural-sort column='[federated.0snhngp1rkwr1115dl6dp1qripkl].[none:Season:nk]' direction='DESC' />
          <slices>
            <column>[federated.0snhngp1rkwr1115dl6dp1qripkl].[none:Category:nk]</column>
            <column>[federated.0snhngp1rkwr1115dl6dp1qripkl].[none:Season:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[federated.0snhngp1rkwr1115dl6dp1qripkl].[none:Period:ok]' value='28' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='fill-above' id='refline0' value='#00000000' />
            <format attr='fill-below' id='refline0' value='#00000000' />
            <format attr='fill-above' id='refline1' value='#00000000' />
            <format attr='fill-below' id='refline1' value='#00000000' />
            <format attr='fill-above' id='refline2' value='#00000000' />
            <format attr='fill-below' id='refline2' value='#00000000' />
            <format attr='fill-above' id='refline3' value='#00000000' />
            <format attr='fill-below' id='refline3' value='#00000000' />
            <format attr='text-format' id='refline3' value='n#,##0;-#,##0' />
            <format attr='fill-above' id='refline4' value='#00000000' />
            <format attr='fill-below' id='refline4' value='#00000000' />
            <format attr='fill-above' id='refline5' value='#00000000' />
            <format attr='fill-below' id='refline5' value='#00000000' />
            <format attr='fill-above' id='refline6' value='#00000000' />
            <format attr='fill-below' id='refline6' value='#00000000' />
            <format attr='text-format' id='refline9' value='n#,##0;-#,##0' />
            <format attr='fill-above' id='refline10' value='#00000000' />
            <format attr='fill-below' id='refline10' value='#00000000' />
            <format attr='text-format' id='refline11' value='n#,##0;-#,##0' />
            <format attr='fill-above' id='refline9' value='#00000000' />
            <format attr='fill-below' id='refline9' value='#00000000' />
            <format attr='text-format' id='refline8' value='n#,##0;-#,##0' />
            <format attr='text-format' id='refline10' value='n#,##0;-#,##0' />
            <format attr='text-format' id='refline0' value='n#,##0;-#,##0' />
          </style-rule>
        </style>
        <panes>
          <pane id='15' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.0snhngp1rkwr1115dl6dp1qripkl].[none:Category:nk]' />
            </encodings>
            <style>
              <style-rule element='datalabel'>
                <format attr='color-mode' value='auto' />
                <format attr='font-size' value='8' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='size' value='1.0324862003326416' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
                <format attr='line-interpolation' value='linear' />
                <format attr='mark-markers-mode' value='all' />
                <format attr='mark-transparency' value='193' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0snhngp1rkwr1115dl6dp1qripkl].[sum:Demand:qk]</rows>
        <cols>([federated.0snhngp1rkwr1115dl6dp1qripkl].[none:Year:nk] / ([federated.0snhngp1rkwr1115dl6dp1qripkl].[none:Season:nk] / [federated.0snhngp1rkwr1115dl6dp1qripkl].[none:Period:ok]))</cols>
      </table>
      <simple-id uuid='{6886C8B6-32E2-4902-8858-7FA62C4419AC}' />
    </worksheet>
    <worksheet name='cost 1'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Cost</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='raw data' name='federated.0snhngp1rkwr1115dl6dp1qripkl' />
          </datasources>
          <datasource-dependencies datasource='federated.0snhngp1rkwr1115dl6dp1qripkl'>
            <column caption='Year' datatype='string' datatype-customized='true' name='[Calculation_1995094673632403458]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='STR(Year([Datex]))' />
            </column>
            <column caption='Month' datatype='string' name='[Calculation_962925932752461831]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='if [Month]=&apos;August&apos; then &apos;Aug&apos;&#13;&#10;else [Month] end' />
            </column>
            <column caption='Category' datatype='string' name='[Category]' role='dimension' type='nominal' />
            <column caption='Cost' datatype='real' name='[Cost]' role='measure' type='quantitative' />
            <column datatype='date' name='[Datex]' role='dimension' type='ordinal' />
            <column caption='Old Month' datatype='string' name='[Month]' role='dimension' type='nominal' />
            <column caption='Season' datatype='string' name='[Season]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_1995094673632403458]' derivation='None' name='[none:Calculation_1995094673632403458:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_962925932752461831]' derivation='None' name='[none:Calculation_962925932752461831:nk]' pivot='key' type='nominal' />
            <column-instance column='[Category]' derivation='None' name='[none:Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Season]' derivation='None' name='[none:Season:nk]' pivot='key' type='nominal' />
            <column-instance column='[Cost]' derivation='Sum' name='[pcto:sum:Cost:qk:4]' pivot='key' type='quantitative'>
              <table-calc ordering-type='ColumnInPane' type='PctTotal' />
            </column-instance>
            <column-instance column='[Cost]' derivation='Sum' name='[sum:Cost:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0snhngp1rkwr1115dl6dp1qripkl].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0snhngp1rkwr1115dl6dp1qripkl].[sum:Cost:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0snhngp1rkwr1115dl6dp1qripkl].[pcto:sum:Cost:qk:4]&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.0snhngp1rkwr1115dl6dp1qripkl].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.0snhngp1rkwr1115dl6dp1qripkl].[sum:Cost:qk]&quot;</bucket>
              <bucket>&quot;[federated.0snhngp1rkwr1115dl6dp1qripkl].[pcto:sum:Cost:qk:4]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='categorical' column='[federated.0snhngp1rkwr1115dl6dp1qripkl].[none:Calculation_1995094673632403458:nk]'>
            <groupfilter from='&quot;2016&quot;' function='range' level='[none:Calculation_1995094673632403458:nk]' to='&quot;2018&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0snhngp1rkwr1115dl6dp1qripkl].[none:Calculation_962925932752461831:nk]'>
            <groupfilter function='level-members' level='[none:Calculation_962925932752461831:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0snhngp1rkwr1115dl6dp1qripkl].[none:Category:nk]'>
            <groupfilter function='level-members' level='[none:Category:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0snhngp1rkwr1115dl6dp1qripkl].[none:Season:nk]'>
            <groupfilter function='member' level='[none:Season:nk]' member='&quot;Fall&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0snhngp1rkwr1115dl6dp1qripkl].[none:Category:nk]</column>
            <column>[federated.0snhngp1rkwr1115dl6dp1qripkl].[none:Calculation_962925932752461831:nk]</column>
            <column>[federated.0snhngp1rkwr1115dl6dp1qripkl].[none:Season:nk]</column>
            <column>[federated.0snhngp1rkwr1115dl6dp1qripkl].[:Measure Names]</column>
            <column>[federated.0snhngp1rkwr1115dl6dp1qripkl].[none:Calculation_1995094673632403458:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[federated.0snhngp1rkwr1115dl6dp1qripkl].[:Measure Names]' value='310' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[federated.0snhngp1rkwr1115dl6dp1qripkl].[none:Category:nk]' value='124' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.0snhngp1rkwr1115dl6dp1qripkl].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.0snhngp1rkwr1115dl6dp1qripkl].[none:Calculation_1995094673632403458:nk] / [federated.0snhngp1rkwr1115dl6dp1qripkl].[none:Category:nk])</rows>
        <cols>[federated.0snhngp1rkwr1115dl6dp1qripkl].[:Measure Names]</cols>
        <subtotals>
          <column>[federated.0snhngp1rkwr1115dl6dp1qripkl].[none:Year:nk]</column>
        </subtotals>
      </table>
      <simple-id uuid='{4AD2A211-00A1-49C3-8FAA-950CB0B1B078}' />
    </worksheet>
    <worksheet name='cost 1_1'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Cost</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='raw data' name='federated.0snhngp1rkwr1115dl6dp1qripkl' />
          </datasources>
          <datasource-dependencies datasource='federated.0snhngp1rkwr1115dl6dp1qripkl'>
            <column caption='Year' datatype='string' datatype-customized='true' name='[Calculation_1995094673632403458]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='STR(Year([Datex]))' />
            </column>
            <column caption='Month' datatype='string' name='[Calculation_962925932752461831]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='if [Month]=&apos;August&apos; then &apos;Aug&apos;&#13;&#10;else [Month] end' />
            </column>
            <column caption='Category' datatype='string' name='[Category]' role='dimension' type='nominal' />
            <column caption='Cost' datatype='real' name='[Cost]' role='measure' type='quantitative' />
            <column datatype='date' name='[Datex]' role='dimension' type='ordinal' />
            <column caption='Old Month' datatype='string' name='[Month]' role='dimension' type='nominal' />
            <column caption='Season' datatype='string' name='[Season]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_1995094673632403458]' derivation='None' name='[none:Calculation_1995094673632403458:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_962925932752461831]' derivation='None' name='[none:Calculation_962925932752461831:nk]' pivot='key' type='nominal' />
            <column-instance column='[Category]' derivation='None' name='[none:Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Season]' derivation='None' name='[none:Season:nk]' pivot='key' type='nominal' />
            <column-instance column='[Cost]' derivation='Sum' name='[pcto:sum:Cost:qk:4]' pivot='key' type='quantitative'>
              <table-calc ordering-type='ColumnInPane' type='PctTotal' />
            </column-instance>
            <column-instance column='[Cost]' derivation='Sum' name='[sum:Cost:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0snhngp1rkwr1115dl6dp1qripkl].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0snhngp1rkwr1115dl6dp1qripkl].[sum:Cost:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0snhngp1rkwr1115dl6dp1qripkl].[pcto:sum:Cost:qk:4]&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.0snhngp1rkwr1115dl6dp1qripkl].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.0snhngp1rkwr1115dl6dp1qripkl].[sum:Cost:qk]&quot;</bucket>
              <bucket>&quot;[federated.0snhngp1rkwr1115dl6dp1qripkl].[pcto:sum:Cost:qk:4]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='categorical' column='[federated.0snhngp1rkwr1115dl6dp1qripkl].[none:Calculation_1995094673632403458:nk]'>
            <groupfilter function='level-members' level='[none:Calculation_1995094673632403458:nk]' />
          </filter>
          <filter class='categorical' column='[federated.0snhngp1rkwr1115dl6dp1qripkl].[none:Calculation_962925932752461831:nk]'>
            <groupfilter function='level-members' level='[none:Calculation_962925932752461831:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0snhngp1rkwr1115dl6dp1qripkl].[none:Category:nk]'>
            <groupfilter function='level-members' level='[none:Category:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0snhngp1rkwr1115dl6dp1qripkl].[none:Season:nk]'>
            <groupfilter function='member' level='[none:Season:nk]' member='&quot;Fall&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0snhngp1rkwr1115dl6dp1qripkl].[none:Category:nk]</column>
            <column>[federated.0snhngp1rkwr1115dl6dp1qripkl].[none:Calculation_962925932752461831:nk]</column>
            <column>[federated.0snhngp1rkwr1115dl6dp1qripkl].[none:Season:nk]</column>
            <column>[federated.0snhngp1rkwr1115dl6dp1qripkl].[:Measure Names]</column>
            <column>[federated.0snhngp1rkwr1115dl6dp1qripkl].[none:Calculation_1995094673632403458:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[federated.0snhngp1rkwr1115dl6dp1qripkl].[:Measure Names]' value='310' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[federated.0snhngp1rkwr1115dl6dp1qripkl].[none:Category:nk]' value='124' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.0snhngp1rkwr1115dl6dp1qripkl].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.0snhngp1rkwr1115dl6dp1qripkl].[none:Calculation_1995094673632403458:nk] / ([federated.0snhngp1rkwr1115dl6dp1qripkl].[none:Calculation_962925932752461831:nk] / [federated.0snhngp1rkwr1115dl6dp1qripkl].[none:Category:nk]))</rows>
        <cols>[federated.0snhngp1rkwr1115dl6dp1qripkl].[:Measure Names]</cols>
        <subtotals>
          <column>[federated.0snhngp1rkwr1115dl6dp1qripkl].[none:Year:nk]</column>
        </subtotals>
      </table>
      <simple-id uuid='{3333A839-0581-47A7-8F80-ACADBDAC3B6B}' />
    </worksheet>
    <worksheet name='cost 2'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Cost</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='raw data' name='federated.0snhngp1rkwr1115dl6dp1qripkl' />
          </datasources>
          <datasource-dependencies datasource='federated.0snhngp1rkwr1115dl6dp1qripkl'>
            <column caption='Year' datatype='string' datatype-customized='true' name='[Calculation_1995094673632403458]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='STR(Year([Datex]))' />
            </column>
            <column caption='Month' datatype='string' name='[Calculation_962925932752461831]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='if [Month]=&apos;August&apos; then &apos;Aug&apos;&#13;&#10;else [Month] end' />
            </column>
            <column caption='Category' datatype='string' name='[Category]' role='dimension' type='nominal' />
            <column caption='Cost' datatype='real' name='[Cost]' role='measure' type='quantitative' />
            <column datatype='date' name='[Datex]' role='dimension' type='ordinal' />
            <column caption='Old Month' datatype='string' name='[Month]' role='dimension' type='nominal' />
            <column caption='Season' datatype='string' name='[Season]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_1995094673632403458]' derivation='None' name='[none:Calculation_1995094673632403458:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_962925932752461831]' derivation='None' name='[none:Calculation_962925932752461831:nk]' pivot='key' type='nominal' />
            <column-instance column='[Category]' derivation='None' name='[none:Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Season]' derivation='None' name='[none:Season:nk]' pivot='key' type='nominal' />
            <column-instance column='[Cost]' derivation='Sum' name='[pcto:sum:Cost:qk:4]' pivot='key' type='quantitative'>
              <table-calc ordering-type='ColumnInPane' type='PctTotal' />
            </column-instance>
            <column-instance column='[Cost]' derivation='Sum' name='[sum:Cost:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0snhngp1rkwr1115dl6dp1qripkl].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0snhngp1rkwr1115dl6dp1qripkl].[sum:Cost:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0snhngp1rkwr1115dl6dp1qripkl].[pcto:sum:Cost:qk:4]&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.0snhngp1rkwr1115dl6dp1qripkl].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.0snhngp1rkwr1115dl6dp1qripkl].[sum:Cost:qk]&quot;</bucket>
              <bucket>&quot;[federated.0snhngp1rkwr1115dl6dp1qripkl].[pcto:sum:Cost:qk:4]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='categorical' column='[federated.0snhngp1rkwr1115dl6dp1qripkl].[none:Calculation_1995094673632403458:nk]'>
            <groupfilter function='level-members' level='[none:Calculation_1995094673632403458:nk]' />
          </filter>
          <filter class='categorical' column='[federated.0snhngp1rkwr1115dl6dp1qripkl].[none:Calculation_962925932752461831:nk]'>
            <groupfilter function='level-members' level='[none:Calculation_962925932752461831:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0snhngp1rkwr1115dl6dp1qripkl].[none:Category:nk]'>
            <groupfilter function='level-members' level='[none:Category:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0snhngp1rkwr1115dl6dp1qripkl].[none:Season:nk]'>
            <groupfilter function='member' level='[none:Season:nk]' member='&quot;Fall&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0snhngp1rkwr1115dl6dp1qripkl].[none:Category:nk]</column>
            <column>[federated.0snhngp1rkwr1115dl6dp1qripkl].[none:Calculation_962925932752461831:nk]</column>
            <column>[federated.0snhngp1rkwr1115dl6dp1qripkl].[none:Season:nk]</column>
            <column>[federated.0snhngp1rkwr1115dl6dp1qripkl].[:Measure Names]</column>
            <column>[federated.0snhngp1rkwr1115dl6dp1qripkl].[none:Calculation_1995094673632403458:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[federated.0snhngp1rkwr1115dl6dp1qripkl].[:Measure Names]' value='310' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[federated.0snhngp1rkwr1115dl6dp1qripkl].[none:Category:nk]' value='124' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.0snhngp1rkwr1115dl6dp1qripkl].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows total='true'>([federated.0snhngp1rkwr1115dl6dp1qripkl].[none:Category:nk] / [federated.0snhngp1rkwr1115dl6dp1qripkl].[none:Calculation_1995094673632403458:nk])</rows>
        <cols total='true'>[federated.0snhngp1rkwr1115dl6dp1qripkl].[:Measure Names]</cols>
        <subtotals>
          <column>[federated.0snhngp1rkwr1115dl6dp1qripkl].[none:Category:nk]</column>
        </subtotals>
      </table>
      <simple-id uuid='{11152F4B-F249-45D8-8DF0-AF352303B43D}' />
    </worksheet>
    <worksheet name='cost 2 (2)'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Cost</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='raw data' name='federated.0snhngp1rkwr1115dl6dp1qripkl' />
          </datasources>
          <datasource-dependencies datasource='federated.0snhngp1rkwr1115dl6dp1qripkl'>
            <column caption='Year' datatype='string' datatype-customized='true' name='[Calculation_1995094673632403458]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='STR(Year([Datex]))' />
            </column>
            <column caption='Month' datatype='string' name='[Calculation_962925932752461831]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='if [Month]=&apos;August&apos; then &apos;Aug&apos;&#13;&#10;else [Month] end' />
            </column>
            <column caption='Category' datatype='string' name='[Category]' role='dimension' type='nominal' />
            <column caption='Cost' datatype='real' name='[Cost]' role='measure' type='quantitative' />
            <column datatype='date' name='[Datex]' role='dimension' type='ordinal' />
            <column caption='Old Month' datatype='string' name='[Month]' role='dimension' type='nominal' />
            <column caption='Season' datatype='string' name='[Season]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_1995094673632403458]' derivation='None' name='[none:Calculation_1995094673632403458:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_962925932752461831]' derivation='None' name='[none:Calculation_962925932752461831:nk]' pivot='key' type='nominal' />
            <column-instance column='[Category]' derivation='None' name='[none:Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Season]' derivation='None' name='[none:Season:nk]' pivot='key' type='nominal' />
            <column-instance column='[Cost]' derivation='Sum' name='[pcto:sum:Cost:qk:3]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Columns' type='PctTotal' />
            </column-instance>
            <column-instance column='[Cost]' derivation='Sum' name='[pcto:sum:Cost:qk:4]' pivot='key' type='quantitative'>
              <table-calc ordering-type='ColumnInPane' type='PctTotal' />
            </column-instance>
            <column-instance column='[Cost]' derivation='Sum' name='[sum:Cost:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0snhngp1rkwr1115dl6dp1qripkl].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0snhngp1rkwr1115dl6dp1qripkl].[sum:Cost:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0snhngp1rkwr1115dl6dp1qripkl].[pcto:sum:Cost:qk:3]&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.0snhngp1rkwr1115dl6dp1qripkl].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.0snhngp1rkwr1115dl6dp1qripkl].[sum:Cost:qk]&quot;</bucket>
              <bucket>&quot;[federated.0snhngp1rkwr1115dl6dp1qripkl].[pcto:sum:Cost:qk:4]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='categorical' column='[federated.0snhngp1rkwr1115dl6dp1qripkl].[none:Calculation_1995094673632403458:nk]'>
            <groupfilter function='level-members' level='[none:Calculation_1995094673632403458:nk]' />
          </filter>
          <filter class='categorical' column='[federated.0snhngp1rkwr1115dl6dp1qripkl].[none:Calculation_962925932752461831:nk]'>
            <groupfilter function='level-members' level='[none:Calculation_962925932752461831:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0snhngp1rkwr1115dl6dp1qripkl].[none:Category:nk]'>
            <groupfilter function='level-members' level='[none:Category:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0snhngp1rkwr1115dl6dp1qripkl].[none:Season:nk]'>
            <groupfilter function='member' level='[none:Season:nk]' member='&quot;Spring&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0snhngp1rkwr1115dl6dp1qripkl].[none:Category:nk]</column>
            <column>[federated.0snhngp1rkwr1115dl6dp1qripkl].[none:Calculation_962925932752461831:nk]</column>
            <column>[federated.0snhngp1rkwr1115dl6dp1qripkl].[none:Season:nk]</column>
            <column>[federated.0snhngp1rkwr1115dl6dp1qripkl].[:Measure Names]</column>
            <column>[federated.0snhngp1rkwr1115dl6dp1qripkl].[none:Calculation_1995094673632403458:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[federated.0snhngp1rkwr1115dl6dp1qripkl].[:Measure Names]' value='310' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[federated.0snhngp1rkwr1115dl6dp1qripkl].[none:Category:nk]' value='124' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.0snhngp1rkwr1115dl6dp1qripkl].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows total='true'>([federated.0snhngp1rkwr1115dl6dp1qripkl].[none:Category:nk] / ([federated.0snhngp1rkwr1115dl6dp1qripkl].[none:Calculation_962925932752461831:nk] / [federated.0snhngp1rkwr1115dl6dp1qripkl].[none:Calculation_1995094673632403458:nk]))</rows>
        <cols total='true'>[federated.0snhngp1rkwr1115dl6dp1qripkl].[:Measure Names]</cols>
        <subtotals>
          <column>[federated.0snhngp1rkwr1115dl6dp1qripkl].[none:Calculation_962925932752461831:nk]</column>
          <column>[federated.0snhngp1rkwr1115dl6dp1qripkl].[none:Category:nk]</column>
        </subtotals>
      </table>
      <simple-id uuid='{59524DE3-EE33-40EB-8EDE-D306D15CCA78}' />
    </worksheet>
    <worksheet name='cost 2 (3)'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Cost</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='raw data' name='federated.0snhngp1rkwr1115dl6dp1qripkl' />
          </datasources>
          <datasource-dependencies datasource='federated.0snhngp1rkwr1115dl6dp1qripkl'>
            <column caption='Year' datatype='string' datatype-customized='true' name='[Calculation_1995094673632403458]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='STR(Year([Datex]))' />
            </column>
            <column caption='Month' datatype='string' name='[Calculation_962925932752461831]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='if [Month]=&apos;August&apos; then &apos;Aug&apos;&#13;&#10;else [Month] end' />
            </column>
            <column caption='Category' datatype='string' name='[Category]' role='dimension' type='nominal' />
            <column caption='Cost' datatype='real' name='[Cost]' role='measure' type='quantitative' />
            <column datatype='date' name='[Datex]' role='dimension' type='ordinal' />
            <column caption='Old Month' datatype='string' name='[Month]' role='dimension' type='nominal' />
            <column caption='Season' datatype='string' name='[Season]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_1995094673632403458]' derivation='None' name='[none:Calculation_1995094673632403458:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_962925932752461831]' derivation='None' name='[none:Calculation_962925932752461831:nk]' pivot='key' type='nominal' />
            <column-instance column='[Category]' derivation='None' name='[none:Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Season]' derivation='None' name='[none:Season:nk]' pivot='key' type='nominal' />
            <column-instance column='[Cost]' derivation='Sum' name='[pcto:sum:Cost:qk:3]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Columns' type='PctTotal' />
            </column-instance>
            <column-instance column='[Cost]' derivation='Sum' name='[pcto:sum:Cost:qk:4]' pivot='key' type='quantitative'>
              <table-calc ordering-type='ColumnInPane' type='PctTotal' />
            </column-instance>
            <column-instance column='[Cost]' derivation='Sum' name='[sum:Cost:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0snhngp1rkwr1115dl6dp1qripkl].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0snhngp1rkwr1115dl6dp1qripkl].[sum:Cost:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0snhngp1rkwr1115dl6dp1qripkl].[pcto:sum:Cost:qk:3]&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.0snhngp1rkwr1115dl6dp1qripkl].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.0snhngp1rkwr1115dl6dp1qripkl].[sum:Cost:qk]&quot;</bucket>
              <bucket>&quot;[federated.0snhngp1rkwr1115dl6dp1qripkl].[pcto:sum:Cost:qk:4]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='categorical' column='[federated.0snhngp1rkwr1115dl6dp1qripkl].[none:Calculation_1995094673632403458:nk]'>
            <groupfilter function='level-members' level='[none:Calculation_1995094673632403458:nk]' />
          </filter>
          <filter class='categorical' column='[federated.0snhngp1rkwr1115dl6dp1qripkl].[none:Calculation_962925932752461831:nk]'>
            <groupfilter function='level-members' level='[none:Calculation_962925932752461831:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0snhngp1rkwr1115dl6dp1qripkl].[none:Category:nk]'>
            <groupfilter function='level-members' level='[none:Category:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0snhngp1rkwr1115dl6dp1qripkl].[none:Season:nk]'>
            <groupfilter function='member' level='[none:Season:nk]' member='&quot;Fall&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0snhngp1rkwr1115dl6dp1qripkl].[none:Category:nk]</column>
            <column>[federated.0snhngp1rkwr1115dl6dp1qripkl].[none:Calculation_962925932752461831:nk]</column>
            <column>[federated.0snhngp1rkwr1115dl6dp1qripkl].[none:Season:nk]</column>
            <column>[federated.0snhngp1rkwr1115dl6dp1qripkl].[:Measure Names]</column>
            <column>[federated.0snhngp1rkwr1115dl6dp1qripkl].[none:Calculation_1995094673632403458:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[federated.0snhngp1rkwr1115dl6dp1qripkl].[:Measure Names]' value='310' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[federated.0snhngp1rkwr1115dl6dp1qripkl].[none:Category:nk]' value='124' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.0snhngp1rkwr1115dl6dp1qripkl].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows total='true'>([federated.0snhngp1rkwr1115dl6dp1qripkl].[none:Category:nk] / ([federated.0snhngp1rkwr1115dl6dp1qripkl].[none:Calculation_1995094673632403458:nk] / [federated.0snhngp1rkwr1115dl6dp1qripkl].[none:Calculation_962925932752461831:nk]))</rows>
        <cols total='true'>[federated.0snhngp1rkwr1115dl6dp1qripkl].[:Measure Names]</cols>
        <subtotals>
          <column>[federated.0snhngp1rkwr1115dl6dp1qripkl].[none:Calculation_962925932752461831:nk]</column>
          <column>[federated.0snhngp1rkwr1115dl6dp1qripkl].[none:Category:nk]</column>
        </subtotals>
      </table>
      <simple-id uuid='{130E0635-D28E-4F40-A4C2-0056A49529D8}' />
    </worksheet>
    <worksheet name='linear'>
      <table>
        <view>
          <datasources>
            <datasource caption='raw data' name='federated.0snhngp1rkwr1115dl6dp1qripkl' />
          </datasources>
          <datasource-dependencies datasource='federated.0snhngp1rkwr1115dl6dp1qripkl'>
            <column caption='Month' datatype='string' name='[Calculation_962925932752461831]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='if [Month]=&apos;August&apos; then &apos;Aug&apos;&#13;&#10;else [Month] end' />
            </column>
            <column caption='Category' datatype='string' name='[Category]' role='dimension' type='nominal' />
            <column caption='Cost' datatype='real' name='[Cost]' role='measure' type='quantitative' />
            <column caption='Demand' datatype='real' name='[Demand]' role='measure' type='quantitative' />
            <column caption='Old Month' datatype='string' name='[Month]' role='dimension' type='nominal' />
            <column caption='Season' datatype='string' name='[Season]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_962925932752461831]' derivation='None' name='[none:Calculation_962925932752461831:nk]' pivot='key' type='nominal' />
            <column-instance column='[Category]' derivation='None' name='[none:Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Cost]' derivation='None' name='[none:Cost:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Demand]' derivation='None' name='[none:Demand:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Season]' derivation='None' name='[none:Season:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0snhngp1rkwr1115dl6dp1qripkl].[none:Calculation_962925932752461831:nk]'>
            <groupfilter function='member' level='[none:Calculation_962925932752461831:nk]' member='&quot;Aug&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0snhngp1rkwr1115dl6dp1qripkl].[none:Category:nk]'>
            <groupfilter function='member' level='[none:Category:nk]' member='&quot;PLA&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0snhngp1rkwr1115dl6dp1qripkl].[none:Category:nk]</column>
            <column>[federated.0snhngp1rkwr1115dl6dp1qripkl].[none:Calculation_962925932752461831:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0snhngp1rkwr1115dl6dp1qripkl].[none:Season:nk]' />
            </encodings>
            <trendline enable-confidence-bands='false' enable-instant-analytics='true' enabled='true' exclude-color='false' exclude-intercept='false' fit='linear' />
          </pane>
        </panes>
        <rows>[federated.0snhngp1rkwr1115dl6dp1qripkl].[none:Demand:qk]</rows>
        <cols>[federated.0snhngp1rkwr1115dl6dp1qripkl].[none:Cost:qk]</cols>
      </table>
      <simple-id uuid='{DB837ADD-2687-4496-AA4E-8A20C962DBC9}' />
    </worksheet>
    <worksheet name='test'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true'>Cost Change Over Time</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='raw data' name='federated.0snhngp1rkwr1115dl6dp1qripkl' />
          </datasources>
          <datasource-dependencies datasource='federated.0snhngp1rkwr1115dl6dp1qripkl'>
            <column caption='Year' datatype='string' datatype-customized='true' name='[Calculation_1995094673632403458]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='STR(Year([Datex]))' />
            </column>
            <column caption='Month' datatype='string' name='[Calculation_962925932752461831]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='if [Month]=&apos;August&apos; then &apos;Aug&apos;&#13;&#10;else [Month] end' />
            </column>
            <column caption='Category' datatype='string' name='[Category]' role='dimension' type='nominal' />
            <column caption='Cost' datatype='real' name='[Cost]' role='measure' type='quantitative' />
            <column datatype='date' name='[Datex]' role='dimension' type='ordinal' />
            <column caption='Old Month' datatype='string' name='[Month]' role='dimension' type='nominal' />
            <column aggregation='Sum' datatype='integer' name='[Period]' role='dimension' type='ordinal' />
            <column caption='Season' datatype='string' name='[Season]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_1995094673632403458]' derivation='None' name='[none:Calculation_1995094673632403458:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_962925932752461831]' derivation='None' name='[none:Calculation_962925932752461831:nk]' pivot='key' type='nominal' />
            <column-instance column='[Category]' derivation='None' name='[none:Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Period]' derivation='None' name='[none:Period:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Season]' derivation='None' name='[none:Season:nk]' pivot='key' type='nominal' />
            <column-instance column='[Cost]' derivation='Sum' name='[pcdf:sum:Cost:qk:6]' pivot='key' type='quantitative'>
              <table-calc diff-options='Relative' ordering-type='Columns' type='PctDiff'>
                <address>
                  <value>-1</value>
                </address>
              </table-calc>
            </column-instance>
            <column-instance column='[Cost]' derivation='Sum' name='[sum:Cost:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0snhngp1rkwr1115dl6dp1qripkl].[none:Calculation_1995094673632403458:nk]'>
            <groupfilter function='level-members' level='[none:Calculation_1995094673632403458:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0snhngp1rkwr1115dl6dp1qripkl].[none:Calculation_962925932752461831:nk]'>
            <groupfilter function='level-members' level='[none:Calculation_962925932752461831:nk]' />
          </filter>
          <filter class='categorical' column='[federated.0snhngp1rkwr1115dl6dp1qripkl].[none:Category:nk]' filter-group='5'>
            <groupfilter function='level-members' level='[none:Category:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0snhngp1rkwr1115dl6dp1qripkl].[none:Period:ok]' filter-group='3'>
            <groupfilter function='level-members' level='[none:Period:ok]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0snhngp1rkwr1115dl6dp1qripkl].[none:Season:nk]' filter-group='4'>
            <groupfilter function='level-members' level='[none:Season:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0snhngp1rkwr1115dl6dp1qripkl].[none:Category:nk]</column>
            <column>[federated.0snhngp1rkwr1115dl6dp1qripkl].[none:Season:nk]</column>
            <column>[federated.0snhngp1rkwr1115dl6dp1qripkl].[none:Calculation_1995094673632403458:nk]</column>
            <column>[federated.0snhngp1rkwr1115dl6dp1qripkl].[none:Calculation_962925932752461831:nk]</column>
            <column>[federated.0snhngp1rkwr1115dl6dp1qripkl].[none:Period:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='table'>
            <format attr='omit-on-special' field='[federated.0snhngp1rkwr1115dl6dp1qripkl].[pcdf:sum:Cost:qk:6]' value='false' />
            <format attr='break-on-special' field='[federated.0snhngp1rkwr1115dl6dp1qripkl].[pcdf:sum:Cost:qk:6]' value='false' />
            <format attr='show-null-value-warning' field='[federated.0snhngp1rkwr1115dl6dp1qripkl].[pcdf:sum:Cost:qk:6]' value='false' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[federated.0snhngp1rkwr1115dl6dp1qripkl].[sum:Cost:qk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878'>Month:&#9;</run>
                <run bold='true'><![CDATA[<[federated.0snhngp1rkwr1115dl6dp1qripkl].[none:Calculation_962925932752461831:nk]>]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>% Difference in Orders from the Previous along Table (Across):	</run>
                <run>Æ&#10;</run>
                <run bold='true'><![CDATA[<Sheet name="Order sub_chart" maxwidth="300" maxheight="300" filter="<All Fields>">]]></run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' x-axis-name='[federated.0snhngp1rkwr1115dl6dp1qripkl].[pcdf:sum:Cost:qk:6]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[federated.0snhngp1rkwr1115dl6dp1qripkl].[sum:Cost:qk]' />
              <text column='[federated.0snhngp1rkwr1115dl6dp1qripkl].[pcdf:sum:Cost:qk:6]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878'>Month:&#9;</run>
                <run bold='true'><![CDATA[<[federated.0snhngp1rkwr1115dl6dp1qripkl].[none:Calculation_962925932752461831:nk]>]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>% Difference in Orders from the Previous along Table (Across):	</run>
                <run>Æ&#10;</run>
                <run bold='true'><![CDATA[<Sheet name="Order sub_chart" maxwidth="300" maxheight="300" filter="<All Fields>">]]></run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow' x-axis-name='[federated.0snhngp1rkwr1115dl6dp1qripkl].[sum:Cost:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[federated.0snhngp1rkwr1115dl6dp1qripkl].[sum:Cost:qk]' />
              <text column='[federated.0snhngp1rkwr1115dl6dp1qripkl].[sum:Cost:qk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878'>Month:&#9;</run>
                <run bold='true'><![CDATA[<[federated.0snhngp1rkwr1115dl6dp1qripkl].[none:Calculation_962925932752461831:nk]>]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>% Difference in Orders from the Previous along Table (Across):	</run>
                <run>Æ&#10;</run>
                <run bold='true'><![CDATA[<Sheet name="Order sub_chart" maxwidth="300" maxheight="300" filter="<All Fields>">]]></run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.0snhngp1rkwr1115dl6dp1qripkl].[none:Period:ok] / [federated.0snhngp1rkwr1115dl6dp1qripkl].[none:Calculation_962925932752461831:nk])</rows>
        <cols>([federated.0snhngp1rkwr1115dl6dp1qripkl].[sum:Cost:qk] + [federated.0snhngp1rkwr1115dl6dp1qripkl].[pcdf:sum:Cost:qk:6])</cols>
      </table>
      <simple-id uuid='{0F5F8EA0-7230-4504-8D64-2CE1E60050F0}' />
    </worksheet>
    <worksheet name='test (2)'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true'>Cost Change Over Time</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='raw data' name='federated.0snhngp1rkwr1115dl6dp1qripkl' />
          </datasources>
          <datasource-dependencies datasource='federated.0snhngp1rkwr1115dl6dp1qripkl'>
            <column caption='Year' datatype='string' datatype-customized='true' name='[Calculation_1995094673632403458]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='STR(Year([Datex]))' />
            </column>
            <column caption='Month' datatype='string' name='[Calculation_962925932752461831]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='if [Month]=&apos;August&apos; then &apos;Aug&apos;&#13;&#10;else [Month] end' />
            </column>
            <column caption='Category' datatype='string' name='[Category]' role='dimension' type='nominal' />
            <column caption='Cost' datatype='real' name='[Cost]' role='measure' type='quantitative' />
            <column datatype='date' name='[Datex]' role='dimension' type='ordinal' />
            <column caption='Old Month' datatype='string' name='[Month]' role='dimension' type='nominal' />
            <column caption='Season' datatype='string' name='[Season]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_1995094673632403458]' derivation='None' name='[none:Calculation_1995094673632403458:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_962925932752461831]' derivation='None' name='[none:Calculation_962925932752461831:nk]' pivot='key' type='nominal' />
            <column-instance column='[Category]' derivation='None' name='[none:Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Season]' derivation='None' name='[none:Season:nk]' pivot='key' type='nominal' />
            <column-instance column='[Cost]' derivation='Sum' name='[pcdf:sum:Cost:qk:11]' pivot='key' type='quantitative'>
              <table-calc diff-options='Relative' ordering-type='ColumnInPane' type='PctDiff'>
                <address>
                  <value>-1</value>
                </address>
              </table-calc>
            </column-instance>
            <column-instance column='[Cost]' derivation='Sum' name='[pcdf:sum:Cost:qk:9]' pivot='key' type='quantitative'>
              <table-calc diff-options='Relative' ordering-type='Pane' type='PctDiff'>
                <address>
                  <value>-1</value>
                </address>
              </table-calc>
            </column-instance>
            <column-instance column='[Cost]' derivation='Sum' name='[sum:Cost:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0snhngp1rkwr1115dl6dp1qripkl].[none:Calculation_1995094673632403458:nk]'>
            <groupfilter function='level-members' level='[none:Calculation_1995094673632403458:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0snhngp1rkwr1115dl6dp1qripkl].[none:Calculation_962925932752461831:nk]'>
            <groupfilter function='level-members' level='[none:Calculation_962925932752461831:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0snhngp1rkwr1115dl6dp1qripkl].[none:Category:nk]' filter-group='5'>
            <groupfilter function='level-members' level='[none:Category:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0snhngp1rkwr1115dl6dp1qripkl].[none:Season:nk]' filter-group='4'>
            <groupfilter function='level-members' level='[none:Season:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0snhngp1rkwr1115dl6dp1qripkl].[none:Category:nk]</column>
            <column>[federated.0snhngp1rkwr1115dl6dp1qripkl].[none:Season:nk]</column>
            <column>[federated.0snhngp1rkwr1115dl6dp1qripkl].[none:Calculation_1995094673632403458:nk]</column>
            <column>[federated.0snhngp1rkwr1115dl6dp1qripkl].[none:Calculation_962925932752461831:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='table'>
            <format attr='omit-on-special' field='[federated.0snhngp1rkwr1115dl6dp1qripkl].[pcdf:sum:Cost:qk:9]' value='false' />
            <format attr='break-on-special' field='[federated.0snhngp1rkwr1115dl6dp1qripkl].[pcdf:sum:Cost:qk:9]' value='false' />
            <format attr='show-null-value-warning' field='[federated.0snhngp1rkwr1115dl6dp1qripkl].[pcdf:sum:Cost:qk:9]' value='false' />
            <format attr='omit-on-special' field='[federated.0snhngp1rkwr1115dl6dp1qripkl].[pcdf:sum:Cost:qk:11]' value='false' />
            <format attr='break-on-special' field='[federated.0snhngp1rkwr1115dl6dp1qripkl].[pcdf:sum:Cost:qk:11]' value='false' />
            <format attr='show-null-value-warning' field='[federated.0snhngp1rkwr1115dl6dp1qripkl].[pcdf:sum:Cost:qk:11]' value='false' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[federated.0snhngp1rkwr1115dl6dp1qripkl].[sum:Cost:qk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878'>Month:&#9;</run>
                <run bold='true'><![CDATA[<[federated.0snhngp1rkwr1115dl6dp1qripkl].[none:Calculation_962925932752461831:nk]>]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>% Difference in Orders from the Previous along Table (Across):	</run>
                <run>Æ&#10;</run>
                <run bold='true'><![CDATA[<Sheet name="Order sub_chart" maxwidth="300" maxheight="300" filter="<All Fields>">]]></run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow' x-axis-name='[federated.0snhngp1rkwr1115dl6dp1qripkl].[pcdf:sum:Cost:qk:11]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[federated.0snhngp1rkwr1115dl6dp1qripkl].[sum:Cost:qk]' />
              <text column='[federated.0snhngp1rkwr1115dl6dp1qripkl].[pcdf:sum:Cost:qk:9]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878'>Month:&#9;</run>
                <run bold='true'><![CDATA[<[federated.0snhngp1rkwr1115dl6dp1qripkl].[none:Calculation_962925932752461831:nk]>]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>% Difference in Orders from the Previous along Table (Across):	</run>
                <run>Æ&#10;</run>
                <run bold='true'><![CDATA[<Sheet name="Order sub_chart" maxwidth="300" maxheight="300" filter="<All Fields>">]]></run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
          <pane id='4' selection-relaxation-option='selection-relaxation-allow' x-axis-name='[federated.0snhngp1rkwr1115dl6dp1qripkl].[sum:Cost:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <text column='[federated.0snhngp1rkwr1115dl6dp1qripkl].[sum:Cost:qk]' />
              <color column='[federated.0snhngp1rkwr1115dl6dp1qripkl].[sum:Cost:qk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878'>Month:&#9;</run>
                <run bold='true'><![CDATA[<[federated.0snhngp1rkwr1115dl6dp1qripkl].[none:Calculation_962925932752461831:nk]>]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>% Difference in Orders from the Previous along Table (Across):	</run>
                <run>Æ&#10;</run>
                <run bold='true'><![CDATA[<Sheet name="Order sub_chart" maxwidth="300" maxheight="300" filter="<All Fields>">]]></run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.0snhngp1rkwr1115dl6dp1qripkl].[none:Calculation_962925932752461831:nk] / [federated.0snhngp1rkwr1115dl6dp1qripkl].[none:Calculation_1995094673632403458:nk])</rows>
        <cols>([federated.0snhngp1rkwr1115dl6dp1qripkl].[pcdf:sum:Cost:qk:11] + [federated.0snhngp1rkwr1115dl6dp1qripkl].[sum:Cost:qk])</cols>
      </table>
      <simple-id uuid='{F3007AA9-3A37-4C62-839D-3FA8337C3CAE}' />
    </worksheet>
    <worksheet name='test (3)'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true'>Cost Change Over Time</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='raw data' name='federated.0snhngp1rkwr1115dl6dp1qripkl' />
          </datasources>
          <datasource-dependencies datasource='federated.0snhngp1rkwr1115dl6dp1qripkl'>
            <column caption='Year' datatype='string' datatype-customized='true' name='[Calculation_1995094673632403458]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='STR(Year([Datex]))' />
            </column>
            <column caption='Month' datatype='string' name='[Calculation_962925932752461831]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='if [Month]=&apos;August&apos; then &apos;Aug&apos;&#13;&#10;else [Month] end' />
            </column>
            <column caption='Category' datatype='string' name='[Category]' role='dimension' type='nominal' />
            <column caption='Cost' datatype='real' name='[Cost]' role='measure' type='quantitative' />
            <column datatype='date' name='[Datex]' role='dimension' type='ordinal' />
            <column caption='Old Month' datatype='string' name='[Month]' role='dimension' type='nominal' />
            <column aggregation='Sum' datatype='integer' name='[Period]' role='dimension' type='ordinal' />
            <column caption='Season' datatype='string' name='[Season]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_1995094673632403458]' derivation='None' name='[none:Calculation_1995094673632403458:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_962925932752461831]' derivation='None' name='[none:Calculation_962925932752461831:nk]' pivot='key' type='nominal' />
            <column-instance column='[Category]' derivation='None' name='[none:Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Period]' derivation='None' name='[none:Period:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Season]' derivation='None' name='[none:Season:nk]' pivot='key' type='nominal' />
            <column-instance column='[Cost]' derivation='Sum' name='[pcdf:sum:Cost:qk:1]' pivot='key' type='quantitative'>
              <table-calc diff-options='Relative' ordering-field='[federated.0snhngp1rkwr1115dl6dp1qripkl].[none:Period:ok]' ordering-type='Field' type='PctDiff'>
                <address>
                  <value>-1</value>
                </address>
              </table-calc>
            </column-instance>
            <column-instance column='[Cost]' derivation='Sum' name='[sum:Cost:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0snhngp1rkwr1115dl6dp1qripkl].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0snhngp1rkwr1115dl6dp1qripkl].[sum:Cost:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0snhngp1rkwr1115dl6dp1qripkl].[pcdf:sum:Cost:qk:1]&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.0snhngp1rkwr1115dl6dp1qripkl].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.0snhngp1rkwr1115dl6dp1qripkl].[sum:Cost:qk]&quot;</bucket>
              <bucket>&quot;[federated.0snhngp1rkwr1115dl6dp1qripkl].[pcdf:sum:Cost:qk:1]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='categorical' column='[federated.0snhngp1rkwr1115dl6dp1qripkl].[none:Calculation_1995094673632403458:nk]'>
            <groupfilter function='level-members' level='[none:Calculation_1995094673632403458:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0snhngp1rkwr1115dl6dp1qripkl].[none:Calculation_962925932752461831:nk]'>
            <groupfilter function='level-members' level='[none:Calculation_962925932752461831:nk]' />
          </filter>
          <filter class='categorical' column='[federated.0snhngp1rkwr1115dl6dp1qripkl].[none:Category:nk]' filter-group='5'>
            <groupfilter function='level-members' level='[none:Category:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0snhngp1rkwr1115dl6dp1qripkl].[none:Season:nk]' filter-group='4'>
            <groupfilter function='level-members' level='[none:Season:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0snhngp1rkwr1115dl6dp1qripkl].[none:Category:nk]</column>
            <column>[federated.0snhngp1rkwr1115dl6dp1qripkl].[none:Season:nk]</column>
            <column>[federated.0snhngp1rkwr1115dl6dp1qripkl].[none:Calculation_1995094673632403458:nk]</column>
            <column>[federated.0snhngp1rkwr1115dl6dp1qripkl].[none:Calculation_962925932752461831:nk]</column>
            <column>[federated.0snhngp1rkwr1115dl6dp1qripkl].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='table'>
            <format attr='omit-on-special' field='[federated.0snhngp1rkwr1115dl6dp1qripkl].[pcdf:sum:Cost:qk:1]' value='false' />
            <format attr='break-on-special' field='[federated.0snhngp1rkwr1115dl6dp1qripkl].[pcdf:sum:Cost:qk:1]' value='false' />
            <format attr='show-null-value-warning' field='[federated.0snhngp1rkwr1115dl6dp1qripkl].[pcdf:sum:Cost:qk:1]' value='false' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.0snhngp1rkwr1115dl6dp1qripkl].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0snhngp1rkwr1115dl6dp1qripkl].[none:Period:ok]</rows>
        <cols>[federated.0snhngp1rkwr1115dl6dp1qripkl].[:Measure Names]</cols>
      </table>
      <simple-id uuid='{D863DAE4-FA8D-4F33-AFAB-93A628EDDDA5}' />
    </worksheet>
    <worksheet name='test (4)'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true'>Cost Change Over Time</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='raw data' name='federated.0snhngp1rkwr1115dl6dp1qripkl' />
          </datasources>
          <datasource-dependencies datasource='federated.0snhngp1rkwr1115dl6dp1qripkl'>
            <column caption='Year' datatype='string' datatype-customized='true' name='[Calculation_1995094673632403458]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='STR(Year([Datex]))' />
            </column>
            <column caption='Month' datatype='string' name='[Calculation_962925932752461831]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='if [Month]=&apos;August&apos; then &apos;Aug&apos;&#13;&#10;else [Month] end' />
            </column>
            <column caption='Category' datatype='string' name='[Category]' role='dimension' type='nominal' />
            <column caption='Cost' datatype='real' name='[Cost]' role='measure' type='quantitative' />
            <column datatype='date' name='[Datex]' role='dimension' type='ordinal' />
            <column caption='Old Month' datatype='string' name='[Month]' role='dimension' type='nominal' />
            <column caption='Season' datatype='string' name='[Season]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_1995094673632403458]' derivation='None' name='[none:Calculation_1995094673632403458:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_962925932752461831]' derivation='None' name='[none:Calculation_962925932752461831:nk]' pivot='key' type='nominal' />
            <column-instance column='[Category]' derivation='None' name='[none:Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Season]' derivation='None' name='[none:Season:nk]' pivot='key' type='nominal' />
            <column-instance column='[Cost]' derivation='Sum' name='[pcdf:sum:Cost:qk:9]' pivot='key' type='quantitative'>
              <table-calc diff-options='Relative' ordering-type='Pane' type='PctDiff'>
                <address>
                  <value>-1</value>
                </address>
              </table-calc>
            </column-instance>
            <column-instance column='[Cost]' derivation='Sum' name='[sum:Cost:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0snhngp1rkwr1115dl6dp1qripkl].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0snhngp1rkwr1115dl6dp1qripkl].[sum:Cost:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0snhngp1rkwr1115dl6dp1qripkl].[pcdf:sum:Cost:qk:9]&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.0snhngp1rkwr1115dl6dp1qripkl].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.0snhngp1rkwr1115dl6dp1qripkl].[sum:Cost:qk]&quot;</bucket>
              <bucket>&quot;[federated.0snhngp1rkwr1115dl6dp1qripkl].[pcdf:sum:Cost:qk:9]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='categorical' column='[federated.0snhngp1rkwr1115dl6dp1qripkl].[none:Calculation_1995094673632403458:nk]'>
            <groupfilter function='level-members' level='[none:Calculation_1995094673632403458:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0snhngp1rkwr1115dl6dp1qripkl].[none:Calculation_962925932752461831:nk]'>
            <groupfilter function='level-members' level='[none:Calculation_962925932752461831:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0snhngp1rkwr1115dl6dp1qripkl].[none:Category:nk]' filter-group='5'>
            <groupfilter function='level-members' level='[none:Category:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0snhngp1rkwr1115dl6dp1qripkl].[none:Season:nk]' filter-group='4'>
            <groupfilter function='level-members' level='[none:Season:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0snhngp1rkwr1115dl6dp1qripkl].[none:Category:nk]</column>
            <column>[federated.0snhngp1rkwr1115dl6dp1qripkl].[none:Season:nk]</column>
            <column>[federated.0snhngp1rkwr1115dl6dp1qripkl].[none:Calculation_1995094673632403458:nk]</column>
            <column>[federated.0snhngp1rkwr1115dl6dp1qripkl].[none:Calculation_962925932752461831:nk]</column>
            <column>[federated.0snhngp1rkwr1115dl6dp1qripkl].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[federated.0snhngp1rkwr1115dl6dp1qripkl].[:Measure Names]' value='129' />
          </style-rule>
          <style-rule element='table'>
            <format attr='omit-on-special' field='[federated.0snhngp1rkwr1115dl6dp1qripkl].[pcdf:sum:Cost:qk:9]' value='false' />
            <format attr='break-on-special' field='[federated.0snhngp1rkwr1115dl6dp1qripkl].[pcdf:sum:Cost:qk:9]' value='false' />
            <format attr='show-null-value-warning' field='[federated.0snhngp1rkwr1115dl6dp1qripkl].[pcdf:sum:Cost:qk:9]' value='false' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.0snhngp1rkwr1115dl6dp1qripkl].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.0snhngp1rkwr1115dl6dp1qripkl].[none:Calculation_962925932752461831:nk] / [federated.0snhngp1rkwr1115dl6dp1qripkl].[none:Calculation_1995094673632403458:nk])</rows>
        <cols>[federated.0snhngp1rkwr1115dl6dp1qripkl].[:Measure Names]</cols>
      </table>
      <simple-id uuid='{94882790-F5DF-4515-9048-D4612258E3BC}' />
    </worksheet>
    <worksheet name='test (5)'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true'>Cost Change Over Time</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='raw data' name='federated.0snhngp1rkwr1115dl6dp1qripkl' />
          </datasources>
          <datasource-dependencies datasource='federated.0snhngp1rkwr1115dl6dp1qripkl'>
            <column caption='Year' datatype='string' datatype-customized='true' name='[Calculation_1995094673632403458]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='STR(Year([Datex]))' />
            </column>
            <column caption='Month' datatype='string' name='[Calculation_962925932752461831]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='if [Month]=&apos;August&apos; then &apos;Aug&apos;&#13;&#10;else [Month] end' />
            </column>
            <column caption='Category' datatype='string' name='[Category]' role='dimension' type='nominal' />
            <column caption='Cost' datatype='real' name='[Cost]' role='measure' type='quantitative' />
            <column datatype='date' name='[Datex]' role='dimension' type='ordinal' />
            <column caption='Old Month' datatype='string' name='[Month]' role='dimension' type='nominal' />
            <column aggregation='Sum' datatype='integer' name='[Period]' role='dimension' type='ordinal' />
            <column caption='Season' datatype='string' name='[Season]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_1995094673632403458]' derivation='None' name='[none:Calculation_1995094673632403458:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_962925932752461831]' derivation='None' name='[none:Calculation_962925932752461831:nk]' pivot='key' type='nominal' />
            <column-instance column='[Category]' derivation='None' name='[none:Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Period]' derivation='None' name='[none:Period:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Season]' derivation='None' name='[none:Season:nk]' pivot='key' type='nominal' />
            <column-instance column='[Cost]' derivation='Sum' name='[pcdf:sum:Cost:qk]' pivot='key' type='quantitative'>
              <table-calc diff-options='Relative' ordering-type='Rows' type='PctDiff'>
                <address>
                  <value>-1</value>
                </address>
              </table-calc>
            </column-instance>
            <column-instance column='[Cost]' derivation='Sum' name='[sum:Cost:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0snhngp1rkwr1115dl6dp1qripkl].[none:Calculation_1995094673632403458:nk]'>
            <groupfilter function='level-members' level='[none:Calculation_1995094673632403458:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0snhngp1rkwr1115dl6dp1qripkl].[none:Calculation_962925932752461831:nk]'>
            <groupfilter function='level-members' level='[none:Calculation_962925932752461831:nk]' />
          </filter>
          <filter class='categorical' column='[federated.0snhngp1rkwr1115dl6dp1qripkl].[none:Category:nk]' filter-group='5'>
            <groupfilter function='level-members' level='[none:Category:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0snhngp1rkwr1115dl6dp1qripkl].[none:Period:ok]' filter-group='3'>
            <groupfilter function='level-members' level='[none:Period:ok]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0snhngp1rkwr1115dl6dp1qripkl].[none:Season:nk]' filter-group='4'>
            <groupfilter function='level-members' level='[none:Season:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0snhngp1rkwr1115dl6dp1qripkl].[none:Category:nk]</column>
            <column>[federated.0snhngp1rkwr1115dl6dp1qripkl].[none:Season:nk]</column>
            <column>[federated.0snhngp1rkwr1115dl6dp1qripkl].[none:Calculation_1995094673632403458:nk]</column>
            <column>[federated.0snhngp1rkwr1115dl6dp1qripkl].[none:Calculation_962925932752461831:nk]</column>
            <column>[federated.0snhngp1rkwr1115dl6dp1qripkl].[none:Period:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='table'>
            <format attr='omit-on-special' field='[federated.0snhngp1rkwr1115dl6dp1qripkl].[pcdf:sum:Cost:qk]' value='false' />
            <format attr='break-on-special' field='[federated.0snhngp1rkwr1115dl6dp1qripkl].[pcdf:sum:Cost:qk]' value='false' />
            <format attr='show-null-value-warning' field='[federated.0snhngp1rkwr1115dl6dp1qripkl].[pcdf:sum:Cost:qk]' value='false' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.0snhngp1rkwr1115dl6dp1qripkl].[sum:Cost:qk]' />
              <text column='[federated.0snhngp1rkwr1115dl6dp1qripkl].[pcdf:sum:Cost:qk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878'>Month:&#9;</run>
                <run bold='true'><![CDATA[<[federated.0snhngp1rkwr1115dl6dp1qripkl].[none:Calculation_962925932752461831:nk]>]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>% Difference in Orders from the Previous along Table (Across):	</run>
                <run>Æ&#10;</run>
                <run bold='true'><![CDATA[<Sheet name="Order sub_chart" maxwidth="300" maxheight="300" filter="<All Fields>">]]></run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0snhngp1rkwr1115dl6dp1qripkl].[pcdf:sum:Cost:qk]</rows>
        <cols>[federated.0snhngp1rkwr1115dl6dp1qripkl].[none:Period:ok]</cols>
      </table>
      <simple-id uuid='{CACB3FBC-B2B8-4B0C-B229-E09FB40349CA}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard name='Dashboard 4'>
      <style />
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <zones>
        <zone h='100000' id='4' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='98000' id='7' param='horz' type-v2='layout-flow' w='98400' x='800' y='1000'>
            <zone h='98000' id='5' type-v2='layout-basic' w='82400' x='800' y='1000'>
              <zone h='98000' id='3' name='Single Chart' show-title='false' w='82400' x='800' y='1000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
            <zone fixed-size='160' h='98000' id='6' is-fixed='true' param='vert' type-v2='layout-flow' w='16000' x='83200' y='1000'>
              <zone h='11625' id='8' name='Single Chart' pane-specification-id='0' param='[federated.0snhngp1rkwr1115dl6dp1qripkl].[none:Category:nk]' type-v2='color' w='16000' x='83200' y='1000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='700' minheight='700' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='20' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='84000' id='19' param='vert' type-v2='layout-flow' w='84000' x='8000' y='8000'>
                <zone fixed-size='280' h='98000' id='3' is-fixed='true' name='Single Chart' show-title='false' w='82400' x='800' y='1000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='11625' id='8' name='Single Chart' pane-specification-id='0' param='[federated.0snhngp1rkwr1115dl6dp1qripkl].[none:Category:nk]' type-v2='color' w='16000' x='83200' y='1000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{63F029F8-925E-47D5-9BA3-37ACF96A0F1A}' />
    </dashboard>
    <dashboard name='Exploring Data'>
      <style>
        <style-rule element='dash-text'>
          <format attr='text-align' id='dash-text_1' value='auto' />
          <format attr='vertical-align' id='dash-text_10' value='top' />
          <format attr='vertical-align' id='dash-text_28' value='top' />
          <format attr='vertical-align' id='dash-text_35' value='top' />
          <format attr='vertical-align' id='dash-text_30' value='top' />
        </style-rule>
      </style>
      <size maxheight='768' maxwidth='1850' minheight='768' minwidth='1850' sizing-mode='fixed' />
      <datasources>
        <datasource caption='raw data' name='federated.0snhngp1rkwr1115dl6dp1qripkl' />
      </datasources>
      <datasource-dependencies datasource='federated.0snhngp1rkwr1115dl6dp1qripkl'>
        <column caption='Year' datatype='string' datatype-customized='true' name='[Calculation_1995094673632403458]' role='dimension' type='nominal'>
          <calculation class='tableau' formula='STR(Year([Datex]))' />
        </column>
        <column caption='Category' datatype='string' name='[Category]' role='dimension' type='nominal' />
        <column caption='Season' datatype='string' name='[Season]' role='dimension' type='nominal' />
        <column-instance column='[Calculation_1995094673632403458]' derivation='None' name='[none:Calculation_1995094673632403458:nk]' pivot='key' type='nominal' />
        <column-instance column='[Category]' derivation='None' name='[none:Category:nk]' pivot='key' type='nominal' />
        <column-instance column='[Season]' derivation='None' name='[none:Season:nk]' pivot='key' type='nominal' />
      </datasource-dependencies>
      <zones>
        <zone h='100000' id='31' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='100000' id='38' param='horz' type-v2='layout-flow' w='100000' x='0' y='0'>
            <zone h='100000' id='36' type-v2='layout-basic' w='91351' x='0' y='0'>
              <zone h='13411' id='33' type-v2='empty' w='45676' x='0' y='0'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='13411' id='34' type-v2='empty' w='45675' x='45676' y='0'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='43295' id='35' name='CTR' show-title='false' w='45676' x='0' y='13411'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='43295' id='42' name='Conversion' show-title='false' w='45675' x='45676' y='13411'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='43294' id='45' name='Order' show-title='false' w='45676' x='0' y='56706'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='43294' id='49' name='Cumulative_Demand' show-title='false' w='45675' x='45676' y='56706'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
            <zone fixed-size='160' h='100000' id='51' is-fixed='true' type-v2='layout-basic' w='8649' x='91351' y='0'>
              <zone h='13411' id='37' param='vert' type-v2='layout-flow' w='8649' x='91351' y='0'>
                <zone h='13411' id='50' type-v2='empty' w='8649' x='91351' y='0'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
              </zone>
              <zone h='69401' id='56' is-fixed='true' type-v2='layout-basic' w='8649' x='91351' y='30599'>
                <zone h='69401' id='57' param='vert' type-v2='layout-flow' w='8649' x='91351' y='30599'>
                  <zone fixed-size='120' h='16667' id='53' is-fixed='true' name='CTR' param='[federated.0snhngp1rkwr1115dl6dp1qripkl].[none:Season:nk]' type-v2='filter' values='relevant' w='8649' x='91351' y='30599'>
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                  <zone fixed-size='226' h='30469' id='43' is-fixed='true' name='Conversion' param='[federated.0snhngp1rkwr1115dl6dp1qripkl].[none:Category:nk]' type-v2='filter' values='relevant' w='8649' x='91351' y='47266'>
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                  <zone h='22265' id='55' type-v2='empty' w='8649' x='91351' y='77735'>
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                </zone>
              </zone>
              <zone h='17188' id='58' name='Conversion' param='[federated.0snhngp1rkwr1115dl6dp1qripkl].[none:Calculation_1995094673632403458:nk]' type-v2='filter' values='database' w='8649' x='91351' y='13411'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
        </zone>
        <zone forceUpdate='true' h='7813' id='1' type-v2='text' w='100000' x='0' y='0'>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='background-color' value='#ffffff' />
          </zone-style>
        </zone>
        <zone forceUpdate='true' h='6120' id='29' type-v2='text' w='100000' x='0' y='7422'>
          <formatted-text>
            <run bold='true' fontcolor='#000000' fontsize='14'> Exploring Data </run>
          </formatted-text>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='background-color' value='#e6ecf0' />
          </zone-style>
        </zone>
        <zone h='7422' id='6' is-scaled='1' param='C:/Users/yuehang/Desktop/New folder/final files/Data explore/Data Exploration.twb Files/Image/Capture.JPG' type-v2='bitmap' w='12973' x='-1081' y='0' />
      </zones>
      <simple-id uuid='{23C2D1EE-69A9-44F9-9BA1-024B952AA028}' />
    </dashboard>
    <dashboard name='Exploring Data 2'>
      <style>
        <style-rule element='dash-text'>
          <format attr='text-align' id='dash-text_1' value='auto' />
          <format attr='vertical-align' id='dash-text_10' value='top' />
          <format attr='vertical-align' id='dash-text_28' value='top' />
          <format attr='vertical-align' id='dash-text_35' value='top' />
          <format attr='vertical-align' id='dash-text_30' value='top' />
        </style-rule>
      </style>
      <size maxheight='768' maxwidth='1850' minheight='768' minwidth='1850' sizing-mode='fixed' />
      <datasources>
        <datasource caption='raw data' name='federated.0snhngp1rkwr1115dl6dp1qripkl' />
      </datasources>
      <datasource-dependencies datasource='federated.0snhngp1rkwr1115dl6dp1qripkl'>
        <column caption='Year' datatype='string' datatype-customized='true' name='[Calculation_1995094673632403458]' role='dimension' type='nominal'>
          <calculation class='tableau' formula='STR(Year([Datex]))' />
        </column>
        <column caption='Category' datatype='string' name='[Category]' role='dimension' type='nominal' />
        <column caption='Season' datatype='string' name='[Season]' role='dimension' type='nominal' />
        <column-instance column='[Calculation_1995094673632403458]' derivation='None' name='[none:Calculation_1995094673632403458:nk]' pivot='key' type='nominal' />
        <column-instance column='[Category]' derivation='None' name='[none:Category:nk]' pivot='key' type='nominal' />
        <column-instance column='[Season]' derivation='None' name='[none:Season:nk]' pivot='key' type='nominal' />
      </datasource-dependencies>
      <zones>
        <zone h='100000' id='31' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='100000' id='38' param='horz' type-v2='layout-flow' w='100000' x='0' y='0'>
            <zone h='100000' id='36' type-v2='layout-basic' w='91351' x='0' y='0'>
              <zone h='13672' id='33' type-v2='empty' w='45676' x='0' y='0'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='13411' id='34' type-v2='empty' w='45675' x='45676' y='0'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='86328' id='57' name='CPC' show-title='false' w='45676' x='0' y='13672'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='86589' id='60' name='ROAS' show-title='false' w='45675' x='45676' y='13411'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
            <zone fixed-size='160' h='100000' id='51' is-fixed='true' type-v2='layout-basic' w='8649' x='91351' y='0'>
              <zone h='13411' id='37' param='vert' type-v2='layout-flow' w='8649' x='91351' y='0'>
                <zone h='13411' id='50' type-v2='empty' w='8649' x='91351' y='0'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
              </zone>
              <zone h='66667' id='56' is-fixed='true' type-v2='layout-basic' w='8649' x='91351' y='33333'>
                <zone h='66667' id='52' param='vert' type-v2='layout-flow' w='8649' x='91351' y='33333'>
                  <zone fixed-size='120' h='16667' id='61' is-fixed='true' name='CPC' param='[federated.0snhngp1rkwr1115dl6dp1qripkl].[none:Season:nk]' type-v2='filter' values='relevant' w='8649' x='91351' y='33333'>
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                  <zone fixed-size='140' h='19271' id='59' is-fixed='true' name='CPC' param='[federated.0snhngp1rkwr1115dl6dp1qripkl].[none:Category:nk]' type-v2='filter' values='relevant' w='8649' x='91351' y='50000'>
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                </zone>
              </zone>
              <zone h='19922' id='62' name='ROAS' param='[federated.0snhngp1rkwr1115dl6dp1qripkl].[none:Calculation_1995094673632403458:nk]' type-v2='filter' values='database' w='8649' x='91351' y='13411'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
        </zone>
        <zone forceUpdate='true' h='7813' id='1' type-v2='text' w='100000' x='0' y='0'>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='background-color' value='#ffffff' />
          </zone-style>
        </zone>
        <zone forceUpdate='true' h='6120' id='29' type-v2='text' w='100000' x='0' y='7422'>
          <formatted-text>
            <run bold='true' fontcolor='#000000' fontsize='14'> Exploring Data </run>
          </formatted-text>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='background-color' value='#e6ecf0' />
          </zone-style>
        </zone>
        <zone h='7422' id='6' is-scaled='1' param='C:/Users/yuehang/Desktop/New folder/final files/Data explore/Data Exploration.twb Files/Image/Capture.JPG' type-v2='bitmap' w='12973' x='-1081' y='0' />
      </zones>
      <simple-id uuid='{2946535F-10E2-4C4D-9850-020013124EBA}' />
    </dashboard>
    <dashboard name='Information'>
      <style>
        <style-rule element='dash-text'>
          <format attr='text-align' id='dash-text_1' value='auto' />
          <format attr='vertical-align' id='dash-text_10' value='top' />
          <format attr='vertical-align' id='dash-text_28' value='top' />
          <format attr='vertical-align' id='dash-text_35' value='top' />
          <format attr='vertical-align' id='dash-text_30' value='top' />
        </style-rule>
      </style>
      <size maxheight='768' maxwidth='1850' minheight='768' minwidth='1850' sizing-mode='fixed' />
      <zones>
        <zone forceUpdate='true' h='7813' id='1' type-v2='text' w='89514' x='0' y='0'>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='background-color' value='#ffffff' />
          </zone-style>
        </zone>
        <zone forceUpdate='true' h='85286' id='10' type-v2='text' w='62865' x='216' y='14323'>
          <formatted-text>
            <run bold='true' fontsize='12' underline='true'>Purpose of the Project</run>
            <run>Æ&#10;&#10;</run>
            <run fontsize='12'>In order to forecast monthly demand by category based on a total budget in a season, this project is developed to explore  the trendency of some marketing and advertise data and key metrics over time. </run>
            <run>Æ&#10;&#10;</run>
            <run bold='true' fontsize='12' underline='true'>Data Description</run>
            <run>Æ&#10;&#10;</run>
            <run fontsize='12'>The project includes some marketing and advertise data, one record per month,  from 2016 Spring to 2018 Spring, totally around 95 records. These fields are Category, Date, Impressions, Clicks, Cost (i.e. Budget), Orders,  and Demand (i.e. Revenue).</run>
            <run>Æ&#10;&#10;</run>
            <run fontsize='12'>The values of Category are Brand, Non-Brand, Product Listing Ads (PLA). Date involves Specific Dates, Year, Month, Season, and Period Number.</run>
            <run>Æ&#10;&#10;</run>
            <run bold='true' fontsize='12' underline='true'>Calculated Fields </run>
            <run>Æ&#10;&#10;</run>
            <run fontsize='12'>The data source includes some calculated fields, they are Return On Ad Spend (ROAS), Click-Through Rate (CTR), Cost Per Click (CPC), Conversion. Considering the data aggregation data would be dynamically calculated based on the filter choices and table calculations,  these calculated fields from the original data source will not be used. These fields are re-calculated using the following formula:</run>
            <run>Æ&#10;</run>
            <run fontsize='12'>               ROAS=Demand/Cost</run>
            <run>Æ&#10;</run>
            <run fontsize='12'>               CTR=Clicks/Impression</run>
            <run>Æ&#10;</run>
            <run fontsize='12'>               CPC=Cost/Clicks</run>
            <run>Æ&#10;</run>
            <run fontsize='12'>               Conversion=Order/Clicks</run>
            <run>Æ&#10;</run>
          </formatted-text>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='background-color' value='#f6f6f6' />
          </zone-style>
        </zone>
        <zone forceUpdate='true' h='63932' id='28' type-v2='text' w='25514' x='63730' y='14323'>
          <formatted-text>
            <run bold='true' fontsize='12' underline='true'>Method</run>
            <run>Æ&#10;&#10;</run>
            <run fontsize='12'>Data drilling is applied to the key metrics or critical data points over Category and Time filter. </run>
            <run>Æ&#10;&#10;</run>
            <run fontsize='12'>The project covers a few charts and tables, the charts are CTR over Time, Conversation over Time, Order Change over Time with a sub-chart of Order in different years, Cumulative Demand over Time with a sub-chart of Demand and Cost in different years;</run>
            <run>Æ&#10;&#10;</run>
            <run fontsize='12'>The data tables are CPC with Cost and Clicks, and ROAS with Cost and Demand. </run>
            <run>Æ&#10;&#10;</run>
            <run fontsize='12'>A prediction model of demand is developed based on the inputting cost and time information. </run>
          </formatted-text>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='background-color' value='#f6f6f6' />
          </zone-style>
        </zone>
        <zone forceUpdate='true' h='5599' id='29' type-v2='text' w='89459' x='0' y='7422'>
          <formatted-text>
            <run bold='true' fontcolor='#000000' fontsize='14'>    Information</run>
          </formatted-text>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='background-color' value='#e6ecf0' />
          </zone-style>
        </zone>
        <zone h='7422' id='6' is-scaled='1' param='C:/Users/yuehang/Desktop/New folder/final files/Data explore/Data Exploration.twb Files/Image/Capture.JPG' type-v2='bitmap' w='12973' x='-1081' y='0' />
        <zone forceUpdate='true' h='8854' id='35' type-v2='text' w='25514' x='63730' y='79167'>
          <formatted-text>
            <run bold='true' fontsize='12' underline='true'>Developer: </run>
            <run>Æ&#10;</run>
            <run fontsize='12'>                        Hang Yue</run>
          </formatted-text>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='background-color' value='#f6f6f6' />
          </zone-style>
        </zone>
        <zone forceUpdate='true' h='9375' id='36' type-v2='text' w='25243' x='63730' y='89453'>
          <formatted-text>
            <run fontalignment='2'>Æ&#10;</run>
            <run fontalignment='2' fontsize='12'>Date: May 1st, 2021</run>
          </formatted-text>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='background-color' value='#f6f6f6' />
          </zone-style>
        </zone>
      </zones>
      <simple-id uuid='{DEDF05FB-4E3B-4F0A-8DC9-F037B2C456C8}' />
    </dashboard>
  </dashboards>
  <windows saved-dpi-scale-factor='1.25' source-height='37'>
    <window class='worksheet' name='all over time' tab-color='#a65200'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.0snhngp1rkwr1115dl6dp1qripkl].[none:Season:nk]' type='filter' />
            <card param='[federated.0snhngp1rkwr1115dl6dp1qripkl].[none:Category:nk]' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0snhngp1rkwr1115dl6dp1qripkl].[Old Month Set]</field>
            <field>[federated.0snhngp1rkwr1115dl6dp1qripkl].[none:Category:nk]</field>
            <field>[federated.0snhngp1rkwr1115dl6dp1qripkl].[none:Month:nk]</field>
            <field>[federated.0snhngp1rkwr1115dl6dp1qripkl].[none:Period:ok]</field>
            <field>[federated.0snhngp1rkwr1115dl6dp1qripkl].[none:Season:nk]</field>
            <field>[federated.0snhngp1rkwr1115dl6dp1qripkl].[none:Year:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{A1BF0B32-1157-4638-95E7-02BCA407947A}' />
    </window>
    <window class='worksheet' maximized='true' name='all over time (2)' tab-color='#a65200'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.0snhngp1rkwr1115dl6dp1qripkl].[none:Season:nk]' type='filter' />
            <card mode='radiolist' param='[federated.0snhngp1rkwr1115dl6dp1qripkl].[none:Category:nk]' type='filter' />
            <card pane-specification-id='15' param='[federated.0snhngp1rkwr1115dl6dp1qripkl].[none:Category:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0snhngp1rkwr1115dl6dp1qripkl].[Old Month Set]</field>
            <field>[federated.0snhngp1rkwr1115dl6dp1qripkl].[none:Category:nk]</field>
            <field>[federated.0snhngp1rkwr1115dl6dp1qripkl].[none:Month:nk]</field>
            <field>[federated.0snhngp1rkwr1115dl6dp1qripkl].[none:Period:ok]</field>
            <field>[federated.0snhngp1rkwr1115dl6dp1qripkl].[none:Season:nk]</field>
            <field>[federated.0snhngp1rkwr1115dl6dp1qripkl].[none:Year:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{0D7E74A3-F593-4CB0-9B5B-10EFACFA37B3}' />
    </window>
    <window class='worksheet' name='Single Chart' tab-color='#a65200'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0snhngp1rkwr1115dl6dp1qripkl].[none:Category:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0snhngp1rkwr1115dl6dp1qripkl].[none:Category:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{8873A03D-2DBE-4AC8-A567-81162A548D6D}' />
    </window>
    <window class='worksheet' name='Cost' tab-color='#a65200'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0snhngp1rkwr1115dl6dp1qripkl].[none:Calculation_1995094673632403458:nk]</field>
            <field>[federated.0snhngp1rkwr1115dl6dp1qripkl].[none:Category:nk]</field>
            <field>[federated.0snhngp1rkwr1115dl6dp1qripkl].[none:Season:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{BB674A63-3309-4270-89F6-EF4168D1F305}' />
    </window>
    <window class='worksheet' name='cost 2' tab-color='#a65200'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.0snhngp1rkwr1115dl6dp1qripkl].[none:Calculation_1995094673632403458:nk]' type='filter' />
            <card param='[federated.0snhngp1rkwr1115dl6dp1qripkl].[none:Season:nk]' type='filter' values='relevant' />
            <card param='[federated.0snhngp1rkwr1115dl6dp1qripkl].[none:Calculation_962925932752461831:nk]' type='filter' values='relevant' />
            <card param='[federated.0snhngp1rkwr1115dl6dp1qripkl].[none:Category:nk]' type='filter' values='relevant' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0snhngp1rkwr1115dl6dp1qripkl].[:Measure Names]</field>
            <field>[federated.0snhngp1rkwr1115dl6dp1qripkl].[none:Calculation_1995094673632403458:nk]</field>
            <field>[federated.0snhngp1rkwr1115dl6dp1qripkl].[none:Calculation_962925932752461831:nk]</field>
            <field>[federated.0snhngp1rkwr1115dl6dp1qripkl].[none:Category:nk]</field>
            <field>[federated.0snhngp1rkwr1115dl6dp1qripkl].[none:Period:ok]</field>
            <field>[federated.0snhngp1rkwr1115dl6dp1qripkl].[none:Year:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{A22EC2D3-690E-43AC-8107-6A9B4CC463C1}' />
    </window>
    <window class='worksheet' name='Cumlative all over time '>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.0snhngp1rkwr1115dl6dp1qripkl].[none:Season:nk]' type='filter' />
            <card param='[federated.0snhngp1rkwr1115dl6dp1qripkl].[none:Category:nk]' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0snhngp1rkwr1115dl6dp1qripkl].[Old Month Set]</field>
            <field>[federated.0snhngp1rkwr1115dl6dp1qripkl].[none:Category:nk]</field>
            <field>[federated.0snhngp1rkwr1115dl6dp1qripkl].[none:Month:nk]</field>
            <field>[federated.0snhngp1rkwr1115dl6dp1qripkl].[none:Period:ok]</field>
            <field>[federated.0snhngp1rkwr1115dl6dp1qripkl].[none:Season:nk]</field>
            <field>[federated.0snhngp1rkwr1115dl6dp1qripkl].[none:Year:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{AF140539-598F-4F15-B649-FE76DE395609}' />
    </window>
    <window class='worksheet' name='Percent difference all over time'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.0snhngp1rkwr1115dl6dp1qripkl].[none:Season:nk]' type='filter' />
            <card param='[federated.0snhngp1rkwr1115dl6dp1qripkl].[none:Category:nk]' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0snhngp1rkwr1115dl6dp1qripkl].[Old Month Set]</field>
            <field>[federated.0snhngp1rkwr1115dl6dp1qripkl].[none:Category:nk]</field>
            <field>[federated.0snhngp1rkwr1115dl6dp1qripkl].[none:Month:nk]</field>
            <field>[federated.0snhngp1rkwr1115dl6dp1qripkl].[none:Period:ok]</field>
            <field>[federated.0snhngp1rkwr1115dl6dp1qripkl].[none:Season:nk]</field>
            <field>[federated.0snhngp1rkwr1115dl6dp1qripkl].[none:Year:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{00E7BB4E-F433-4DAD-9D48-9F36F18D978D}' />
    </window>
    <window class='dashboard' name='Information' tab-color='#17927d'>
      <viewpoints />
      <active id='10' />
      <simple-id uuid='{F30A2C22-B2DB-449C-B2E8-B49ABB44AEDE}' />
    </window>
    <window class='dashboard' name='Exploring Data' tab-color='#17927d'>
      <viewpoints>
        <viewpoint name='CTR'>
          <zoom type='entire-view' />
          <highlight field='[federated.0snhngp1rkwr1115dl6dp1qripkl].[:Measure Names]'>
            <bucket-selection />
          </highlight>
        </viewpoint>
        <viewpoint name='Conversion'>
          <zoom type='entire-view' />
          <selection-collection>
            <node-selection select-tuples='false'>
              <oriented-node-reference orientation='vertical'>
                <node-reference>
                  <axis>[federated.0snhngp1rkwr1115dl6dp1qripkl].[Multiple Values]</axis>
                </node-reference>
                <page-reference />
              </oriented-node-reference>
            </node-selection>
          </selection-collection>
        </viewpoint>
        <viewpoint name='Cumulative_Demand'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Order'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='6' />
      <simple-id uuid='{7E3E8B05-D103-460B-840D-0F9FBC0424F6}' />
    </window>
    <window class='dashboard' name='Exploring Data 2' tab-color='#17927d'>
      <viewpoints>
        <viewpoint name='CPC' />
        <viewpoint name='ROAS' />
      </viewpoints>
      <active id='6' />
      <simple-id uuid='{E9ABC368-C035-4BDE-AED2-8F0970ABC1E1}' />
    </window>
    <window class='worksheet' name='test' tab-color='#4f779a'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.0snhngp1rkwr1115dl6dp1qripkl].[none:Period:ok]' type='filter' values='relevant' />
            <card param='[federated.0snhngp1rkwr1115dl6dp1qripkl].[none:Calculation_1995094673632403458:nk]' type='filter' />
            <card param='[federated.0snhngp1rkwr1115dl6dp1qripkl].[none:Season:nk]' type='filter' />
            <card param='[federated.0snhngp1rkwr1115dl6dp1qripkl].[none:Category:nk]' type='filter' />
            <card pane-specification-id='3' param='[federated.0snhngp1rkwr1115dl6dp1qripkl].[sum:Cost:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0snhngp1rkwr1115dl6dp1qripkl].[none:Calculation_1995094673632403458:nk]</field>
            <field>[federated.0snhngp1rkwr1115dl6dp1qripkl].[none:Calculation_962925932752461831:nk]</field>
            <field>[federated.0snhngp1rkwr1115dl6dp1qripkl].[none:Period:ok]</field>
            <field>[federated.0snhngp1rkwr1115dl6dp1qripkl].[none:Year:nk]</field>
            <field>[federated.0snhngp1rkwr1115dl6dp1qripkl].[yr:Datex:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{FAC940E5-41C9-41CE-9749-591CFE980055}' />
    </window>
    <window class='worksheet' name='test (5)' tab-color='#4f779a'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.0snhngp1rkwr1115dl6dp1qripkl].[none:Calculation_1995094673632403458:nk]' type='filter' />
            <card param='[federated.0snhngp1rkwr1115dl6dp1qripkl].[none:Season:nk]' type='filter' />
            <card param='[federated.0snhngp1rkwr1115dl6dp1qripkl].[none:Category:nk]' type='filter' />
            <card pane-specification-id='2' param='[federated.0snhngp1rkwr1115dl6dp1qripkl].[sum:Cost:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0snhngp1rkwr1115dl6dp1qripkl].[none:Calculation_1995094673632403458:nk]</field>
            <field>[federated.0snhngp1rkwr1115dl6dp1qripkl].[none:Calculation_962925932752461831:nk]</field>
            <field>[federated.0snhngp1rkwr1115dl6dp1qripkl].[none:Period:ok]</field>
            <field>[federated.0snhngp1rkwr1115dl6dp1qripkl].[none:Year:nk]</field>
            <field>[federated.0snhngp1rkwr1115dl6dp1qripkl].[yr:Datex:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{66B0A4A7-F19E-4DB3-A576-5444B4D7059A}' />
    </window>
    <window class='worksheet' name='test (3)' tab-color='#4f779a'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.0snhngp1rkwr1115dl6dp1qripkl].[none:Calculation_1995094673632403458:nk]' type='filter' />
            <card param='[federated.0snhngp1rkwr1115dl6dp1qripkl].[none:Season:nk]' type='filter' />
            <card param='[federated.0snhngp1rkwr1115dl6dp1qripkl].[none:Category:nk]' type='filter' />
          </strip>
        </edge>
        <edge name='bottom'>
          <strip size='92'>
            <card type='caption' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0snhngp1rkwr1115dl6dp1qripkl].[none:Calculation_1995094673632403458:nk]</field>
            <field>[federated.0snhngp1rkwr1115dl6dp1qripkl].[none:Calculation_962925932752461831:nk]</field>
            <field>[federated.0snhngp1rkwr1115dl6dp1qripkl].[none:Period:ok]</field>
            <field>[federated.0snhngp1rkwr1115dl6dp1qripkl].[none:Year:nk]</field>
            <field>[federated.0snhngp1rkwr1115dl6dp1qripkl].[yr:Datex:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{4955C023-00B6-4F7E-87DF-4240DC27A174}' />
    </window>
    <window class='worksheet' name='test (2)' tab-color='#4f779a'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.0snhngp1rkwr1115dl6dp1qripkl].[none:Calculation_962925932752461831:nk]' type='filter' />
            <card param='[federated.0snhngp1rkwr1115dl6dp1qripkl].[none:Calculation_1995094673632403458:nk]' type='filter' />
            <card param='[federated.0snhngp1rkwr1115dl6dp1qripkl].[none:Season:nk]' type='filter' />
            <card param='[federated.0snhngp1rkwr1115dl6dp1qripkl].[none:Category:nk]' type='filter' />
            <card pane-specification-id='3' param='[federated.0snhngp1rkwr1115dl6dp1qripkl].[sum:Cost:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0snhngp1rkwr1115dl6dp1qripkl].[none:Calculation_1995094673632403458:nk]</field>
            <field>[federated.0snhngp1rkwr1115dl6dp1qripkl].[none:Calculation_962925932752461831:nk]</field>
            <field>[federated.0snhngp1rkwr1115dl6dp1qripkl].[none:Period:ok]</field>
            <field>[federated.0snhngp1rkwr1115dl6dp1qripkl].[none:Year:nk]</field>
            <field>[federated.0snhngp1rkwr1115dl6dp1qripkl].[yr:Datex:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{5BDD619D-3679-42C6-8BEE-DCD79544C9DF}' />
    </window>
    <window class='worksheet' name='ROAS'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.0snhngp1rkwr1115dl6dp1qripkl].[none:Calculation_1995094673632403458:nk]' type='filter' />
            <card param='[federated.0snhngp1rkwr1115dl6dp1qripkl].[none:Season:nk]' type='filter' />
            <card param='[federated.0snhngp1rkwr1115dl6dp1qripkl].[none:Category:nk]' type='filter' />
            <card pane-specification-id='0' param='[federated.0snhngp1rkwr1115dl6dp1qripkl].[usr:Calculation_1661828300553678848:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0snhngp1rkwr1115dl6dp1qripkl].[none:Calculation_1995094673632403458:nk]</field>
            <field>[federated.0snhngp1rkwr1115dl6dp1qripkl].[none:Calculation_962925932752461831:nk]</field>
            <field>[federated.0snhngp1rkwr1115dl6dp1qripkl].[none:Category:nk]</field>
            <field>[federated.0snhngp1rkwr1115dl6dp1qripkl].[none:Season:nk]</field>
            <field>[federated.0snhngp1rkwr1115dl6dp1qripkl].[none:Year:nk]</field>
            <field>[federated.0snhngp1rkwr1115dl6dp1qripkl].[usr:Calculation_1661828300553678848:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{F0F0EEED-7CC8-4B81-A38D-7E4DD06CADA0}' />
    </window>
    <window class='worksheet' name='Sheet 10'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.0snhngp1rkwr1115dl6dp1qripkl].[none:Season:nk]' type='filter' />
            <card param='[federated.0snhngp1rkwr1115dl6dp1qripkl].[none:Year:nk]' type='filter' values='relevant' />
            <card param='[federated.0snhngp1rkwr1115dl6dp1qripkl].[none:Calculation_962925932752461831:nk]' type='filter' values='relevant' />
            <card param='[federated.0snhngp1rkwr1115dl6dp1qripkl].[none:Category:nk]' type='filter' />
            <card pane-specification-id='0' param='[federated.0snhngp1rkwr1115dl6dp1qripkl].[none:Year:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0snhngp1rkwr1115dl6dp1qripkl].[none:Calculation_962925932752461831:nk]</field>
            <field>[federated.0snhngp1rkwr1115dl6dp1qripkl].[none:Category:nk]</field>
            <field>[federated.0snhngp1rkwr1115dl6dp1qripkl].[none:Period:ok]</field>
            <field>[federated.0snhngp1rkwr1115dl6dp1qripkl].[none:Year:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{E22A6FAD-B04C-49CC-B6C0-FB5580DF9C09}' />
    </window>
    <window class='worksheet' name='all of regressions'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.0snhngp1rkwr1115dl6dp1qripkl].[none:Category:nk]' type='filter' />
            <card pane-specification-id='6' param='[federated.0snhngp1rkwr1115dl6dp1qripkl].[sum:Calculation_711005830858211330:qk]' type='size' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0snhngp1rkwr1115dl6dp1qripkl].[Old Month Set]</field>
            <field>[federated.0snhngp1rkwr1115dl6dp1qripkl].[none:Category:nk]</field>
            <field>[federated.0snhngp1rkwr1115dl6dp1qripkl].[none:Cost:qk]</field>
            <field>[federated.0snhngp1rkwr1115dl6dp1qripkl].[none:Impressions:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{FD960097-1181-4EE5-8761-9674C1A90AE9}' />
    </window>
    <window class='worksheet' name='CTR'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.0snhngp1rkwr1115dl6dp1qripkl].[none:Calculation_1995094673632403458:nk]' type='filter' />
            <card param='[federated.0snhngp1rkwr1115dl6dp1qripkl].[none:Season:nk]' type='filter' />
            <card param='[federated.0snhngp1rkwr1115dl6dp1qripkl].[none:Category:nk]' type='filter' />
            <card pane-specification-id='10' param='[federated.0snhngp1rkwr1115dl6dp1qripkl].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0snhngp1rkwr1115dl6dp1qripkl].[none:Category:nk]</field>
            <field>[federated.0snhngp1rkwr1115dl6dp1qripkl].[none:Month:nk]</field>
            <field>[federated.0snhngp1rkwr1115dl6dp1qripkl].[none:Period:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{9841FF31-CCC6-4B28-834B-8699252288DA}' />
    </window>
    <window class='worksheet' name='Conversion'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.0snhngp1rkwr1115dl6dp1qripkl].[none:Calculation_1995094673632403458:nk]' type='filter' />
            <card param='[federated.0snhngp1rkwr1115dl6dp1qripkl].[none:Season:nk]' type='filter' />
            <card param='[federated.0snhngp1rkwr1115dl6dp1qripkl].[none:Category:nk]' type='filter' />
            <card pane-specification-id='14' param='[federated.0snhngp1rkwr1115dl6dp1qripkl].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0snhngp1rkwr1115dl6dp1qripkl].[:Measure Names]</field>
            <field>[federated.0snhngp1rkwr1115dl6dp1qripkl].[none:Calculation_1995094673632403458:nk]</field>
            <field>[federated.0snhngp1rkwr1115dl6dp1qripkl].[none:Calculation_962925932752461831:nk]</field>
            <field>[federated.0snhngp1rkwr1115dl6dp1qripkl].[none:Category:nk]</field>
            <field>[federated.0snhngp1rkwr1115dl6dp1qripkl].[none:Period:ok]</field>
            <field>[federated.0snhngp1rkwr1115dl6dp1qripkl].[none:Year:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{D1E3FC22-A4B3-4261-92EC-DD864CAC867E}' />
    </window>
    <window class='worksheet' name='Order' tab-color='#4f779a'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.0snhngp1rkwr1115dl6dp1qripkl].[none:Calculation_1995094673632403458:nk]' type='filter' />
            <card param='[federated.0snhngp1rkwr1115dl6dp1qripkl].[none:Season:nk]' type='filter' />
            <card param='[federated.0snhngp1rkwr1115dl6dp1qripkl].[none:Category:nk]' type='filter' />
            <card pane-specification-id='0' param='[federated.0snhngp1rkwr1115dl6dp1qripkl].[pcdf:sum:Orders:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0snhngp1rkwr1115dl6dp1qripkl].[none:Calculation_1995094673632403458:nk]</field>
            <field>[federated.0snhngp1rkwr1115dl6dp1qripkl].[none:Calculation_962925932752461831:nk]</field>
            <field>[federated.0snhngp1rkwr1115dl6dp1qripkl].[none:Period:ok]</field>
            <field>[federated.0snhngp1rkwr1115dl6dp1qripkl].[none:Year:nk]</field>
            <field>[federated.0snhngp1rkwr1115dl6dp1qripkl].[yr:Datex:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{ED04255D-3EB0-430D-BB4E-28BEF88914D8}' />
    </window>
    <window class='worksheet' name='CPC'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.0snhngp1rkwr1115dl6dp1qripkl].[none:Calculation_1995094673632403458:nk]' type='filter' />
            <card param='[federated.0snhngp1rkwr1115dl6dp1qripkl].[none:Season:nk]' type='filter' />
            <card param='[federated.0snhngp1rkwr1115dl6dp1qripkl].[none:Category:nk]' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0snhngp1rkwr1115dl6dp1qripkl].[none:Calculation_1995094673632403458:nk]</field>
            <field>[federated.0snhngp1rkwr1115dl6dp1qripkl].[none:Calculation_962925932752461831:nk]</field>
            <field>[federated.0snhngp1rkwr1115dl6dp1qripkl].[none:Category:nk]</field>
            <field>[federated.0snhngp1rkwr1115dl6dp1qripkl].[none:Season:nk]</field>
            <field>[federated.0snhngp1rkwr1115dl6dp1qripkl].[none:Year:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{336104D3-F565-4222-A7CE-90DF11667DCA}' />
    </window>
    <window class='worksheet' name='Cumulative_Demand' tab-color='#dec77b'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.0snhngp1rkwr1115dl6dp1qripkl].[io:Old Month Set:nk]' type='filter' />
            <card param='[federated.0snhngp1rkwr1115dl6dp1qripkl].[none:Calculation_1995094673632403458:nk]' type='filter' />
            <card param='[federated.0snhngp1rkwr1115dl6dp1qripkl].[none:Season:nk]' type='filter' />
            <card param='[federated.0snhngp1rkwr1115dl6dp1qripkl].[none:Category:nk]' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0snhngp1rkwr1115dl6dp1qripkl].[:Measure Names]</field>
            <field>[federated.0snhngp1rkwr1115dl6dp1qripkl].[none:Calculation_1995094673632403458:nk]</field>
            <field>[federated.0snhngp1rkwr1115dl6dp1qripkl].[none:Calculation_962925932752461831:nk]</field>
            <field>[federated.0snhngp1rkwr1115dl6dp1qripkl].[none:Category:nk]</field>
            <field>[federated.0snhngp1rkwr1115dl6dp1qripkl].[none:Period:ok]</field>
            <field>[federated.0snhngp1rkwr1115dl6dp1qripkl].[none:Season:nk]</field>
            <field>[federated.0snhngp1rkwr1115dl6dp1qripkl].[none:Year:nk]</field>
            <field>[federated.0snhngp1rkwr1115dl6dp1qripkl].[sum:Cost:ok]</field>
            <field>[federated.0snhngp1rkwr1115dl6dp1qripkl].[sum:Demand:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{E27DF0E6-CA1A-4650-9093-C640DB46697F}' />
    </window>
    <window class='worksheet' name='Demand Sub_chart' tab-color='#dec77b'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.0snhngp1rkwr1115dl6dp1qripkl].[none:Calculation_1995094673632403458:nk]' type='filter' />
            <card param='[federated.0snhngp1rkwr1115dl6dp1qripkl].[none:Season:nk]' type='filter' />
            <card param='[federated.0snhngp1rkwr1115dl6dp1qripkl].[none:Category:nk]' type='filter' />
            <card pane-specification-id='4' param='[federated.0snhngp1rkwr1115dl6dp1qripkl].[sum:Cost:qk]' type='color' />
            <card pane-specification-id='2' param='[federated.0snhngp1rkwr1115dl6dp1qripkl].[sum:Demand:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0snhngp1rkwr1115dl6dp1qripkl].[:Measure Names]</field>
            <field>[federated.0snhngp1rkwr1115dl6dp1qripkl].[none:Calculation_1995094673632403458:nk]</field>
            <field>[federated.0snhngp1rkwr1115dl6dp1qripkl].[none:Calculation_962925932752461831:nk]</field>
            <field>[federated.0snhngp1rkwr1115dl6dp1qripkl].[none:Category:nk]</field>
            <field>[federated.0snhngp1rkwr1115dl6dp1qripkl].[none:Period:ok]</field>
            <field>[federated.0snhngp1rkwr1115dl6dp1qripkl].[none:Season:nk]</field>
            <field>[federated.0snhngp1rkwr1115dl6dp1qripkl].[none:Year:nk]</field>
            <field>[federated.0snhngp1rkwr1115dl6dp1qripkl].[sum:Cost:ok]</field>
            <field>[federated.0snhngp1rkwr1115dl6dp1qripkl].[sum:Demand:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{6C7AAA79-E196-4D92-98A2-F42A77C191EB}' />
    </window>
    <window class='worksheet' name='Order sub_chart' tab-color='#4f779a'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.0snhngp1rkwr1115dl6dp1qripkl].[none:Season:nk]' type='filter' />
            <card param='[federated.0snhngp1rkwr1115dl6dp1qripkl].[none:Category:nk]' type='filter' />
            <card pane-specification-id='0' param='[federated.0snhngp1rkwr1115dl6dp1qripkl].[none:Calculation_1995094673632403458:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0snhngp1rkwr1115dl6dp1qripkl].[none:Calculation_1995094673632403458:nk]</field>
            <field>[federated.0snhngp1rkwr1115dl6dp1qripkl].[none:Calculation_962925932752461831:nk]</field>
            <field>[federated.0snhngp1rkwr1115dl6dp1qripkl].[none:Category:nk]</field>
            <field>[federated.0snhngp1rkwr1115dl6dp1qripkl].[none:Month:nk]</field>
            <field>[federated.0snhngp1rkwr1115dl6dp1qripkl].[none:Year:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{742444BD-2208-4A1C-9FA3-82AC7D3F71B0}' />
    </window>
    <window class='worksheet' name='Sheet 33'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0snhngp1rkwr1115dl6dp1qripkl].[none:Category:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0snhngp1rkwr1115dl6dp1qripkl].[none:Category:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{4C6484B9-A19F-4F76-B9CD-88E6CD7E8FD6}' />
    </window>
    <window class='worksheet' name='cost 1'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.0snhngp1rkwr1115dl6dp1qripkl].[none:Calculation_1995094673632403458:nk]' type='filter' />
            <card param='[federated.0snhngp1rkwr1115dl6dp1qripkl].[none:Season:nk]' type='filter' values='relevant' />
            <card param='[federated.0snhngp1rkwr1115dl6dp1qripkl].[none:Calculation_962925932752461831:nk]' type='filter' values='relevant' />
            <card param='[federated.0snhngp1rkwr1115dl6dp1qripkl].[none:Category:nk]' type='filter' values='relevant' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0snhngp1rkwr1115dl6dp1qripkl].[:Measure Names]</field>
            <field>[federated.0snhngp1rkwr1115dl6dp1qripkl].[none:Calculation_1995094673632403458:nk]</field>
            <field>[federated.0snhngp1rkwr1115dl6dp1qripkl].[none:Calculation_962925932752461831:nk]</field>
            <field>[federated.0snhngp1rkwr1115dl6dp1qripkl].[none:Category:nk]</field>
            <field>[federated.0snhngp1rkwr1115dl6dp1qripkl].[none:Period:ok]</field>
            <field>[federated.0snhngp1rkwr1115dl6dp1qripkl].[none:Year:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{404D7A4E-AD60-461F-BEC3-AC28890C35C6}' />
    </window>
    <window class='worksheet' name='test (4)' tab-color='#4f779a'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.0snhngp1rkwr1115dl6dp1qripkl].[none:Calculation_962925932752461831:nk]' type='filter' />
            <card param='[federated.0snhngp1rkwr1115dl6dp1qripkl].[none:Calculation_1995094673632403458:nk]' type='filter' />
            <card param='[federated.0snhngp1rkwr1115dl6dp1qripkl].[none:Season:nk]' type='filter' />
            <card param='[federated.0snhngp1rkwr1115dl6dp1qripkl].[none:Category:nk]' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0snhngp1rkwr1115dl6dp1qripkl].[none:Calculation_1995094673632403458:nk]</field>
            <field>[federated.0snhngp1rkwr1115dl6dp1qripkl].[none:Calculation_962925932752461831:nk]</field>
            <field>[federated.0snhngp1rkwr1115dl6dp1qripkl].[none:Period:ok]</field>
            <field>[federated.0snhngp1rkwr1115dl6dp1qripkl].[none:Year:nk]</field>
            <field>[federated.0snhngp1rkwr1115dl6dp1qripkl].[yr:Datex:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{26C45BEC-C3C2-436B-A6D0-183681EE3527}' />
    </window>
    <window class='worksheet' name='cost 1_1'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.0snhngp1rkwr1115dl6dp1qripkl].[none:Calculation_1995094673632403458:nk]' type='filter' />
            <card param='[federated.0snhngp1rkwr1115dl6dp1qripkl].[none:Season:nk]' type='filter' values='relevant' />
            <card param='[federated.0snhngp1rkwr1115dl6dp1qripkl].[none:Calculation_962925932752461831:nk]' type='filter' values='relevant' />
            <card param='[federated.0snhngp1rkwr1115dl6dp1qripkl].[none:Category:nk]' type='filter' values='relevant' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0snhngp1rkwr1115dl6dp1qripkl].[:Measure Names]</field>
            <field>[federated.0snhngp1rkwr1115dl6dp1qripkl].[none:Calculation_1995094673632403458:nk]</field>
            <field>[federated.0snhngp1rkwr1115dl6dp1qripkl].[none:Calculation_962925932752461831:nk]</field>
            <field>[federated.0snhngp1rkwr1115dl6dp1qripkl].[none:Category:nk]</field>
            <field>[federated.0snhngp1rkwr1115dl6dp1qripkl].[none:Period:ok]</field>
            <field>[federated.0snhngp1rkwr1115dl6dp1qripkl].[none:Year:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{9E537547-152D-4400-8487-DF99790BA5F8}' />
    </window>
    <window class='worksheet' name='cost 2 (2)'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.0snhngp1rkwr1115dl6dp1qripkl].[none:Calculation_1995094673632403458:nk]' type='filter' />
            <card param='[federated.0snhngp1rkwr1115dl6dp1qripkl].[none:Season:nk]' type='filter' values='relevant' />
            <card param='[federated.0snhngp1rkwr1115dl6dp1qripkl].[none:Calculation_962925932752461831:nk]' type='filter' values='relevant' />
            <card param='[federated.0snhngp1rkwr1115dl6dp1qripkl].[none:Category:nk]' type='filter' values='relevant' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0snhngp1rkwr1115dl6dp1qripkl].[:Measure Names]</field>
            <field>[federated.0snhngp1rkwr1115dl6dp1qripkl].[none:Calculation_1995094673632403458:nk]</field>
            <field>[federated.0snhngp1rkwr1115dl6dp1qripkl].[none:Calculation_962925932752461831:nk]</field>
            <field>[federated.0snhngp1rkwr1115dl6dp1qripkl].[none:Category:nk]</field>
            <field>[federated.0snhngp1rkwr1115dl6dp1qripkl].[none:Period:ok]</field>
            <field>[federated.0snhngp1rkwr1115dl6dp1qripkl].[none:Year:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{030FD021-877E-4690-9252-EE74A30694EB}' />
    </window>
    <window class='worksheet' name='cost 2 (3)'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.0snhngp1rkwr1115dl6dp1qripkl].[none:Calculation_1995094673632403458:nk]' type='filter' />
            <card param='[federated.0snhngp1rkwr1115dl6dp1qripkl].[none:Season:nk]' type='filter' values='relevant' />
            <card param='[federated.0snhngp1rkwr1115dl6dp1qripkl].[none:Calculation_962925932752461831:nk]' type='filter' values='relevant' />
            <card param='[federated.0snhngp1rkwr1115dl6dp1qripkl].[none:Category:nk]' type='filter' values='relevant' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0snhngp1rkwr1115dl6dp1qripkl].[:Measure Names]</field>
            <field>[federated.0snhngp1rkwr1115dl6dp1qripkl].[none:Calculation_1995094673632403458:nk]</field>
            <field>[federated.0snhngp1rkwr1115dl6dp1qripkl].[none:Calculation_962925932752461831:nk]</field>
            <field>[federated.0snhngp1rkwr1115dl6dp1qripkl].[none:Category:nk]</field>
            <field>[federated.0snhngp1rkwr1115dl6dp1qripkl].[none:Period:ok]</field>
            <field>[federated.0snhngp1rkwr1115dl6dp1qripkl].[none:Year:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{39646D04-DC44-42A1-8323-B361FB871FE9}' />
    </window>
    <window class='worksheet' name='linear'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.0snhngp1rkwr1115dl6dp1qripkl].[none:Calculation_962925932752461831:nk]' type='filter' />
            <card param='[federated.0snhngp1rkwr1115dl6dp1qripkl].[none:Category:nk]' type='filter' />
            <card pane-specification-id='0' param='[federated.0snhngp1rkwr1115dl6dp1qripkl].[none:Season:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0snhngp1rkwr1115dl6dp1qripkl].[none:Calculation_962925932752461831:nk]</field>
            <field>[federated.0snhngp1rkwr1115dl6dp1qripkl].[none:Period:ok]</field>
            <field>[federated.0snhngp1rkwr1115dl6dp1qripkl].[none:Season:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{322F9315-6DB3-47DC-8B3D-E04D8599F9CF}' />
    </window>
    <window class='worksheet' name='Sheet 21'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.0snhngp1rkwr1115dl6dp1qripkl].[none:Category:nk]' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0snhngp1rkwr1115dl6dp1qripkl].[Old Month Set]</field>
            <field>[federated.0snhngp1rkwr1115dl6dp1qripkl].[none:Category:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{881E14C7-F780-44C5-9D59-CB926134F338}' />
    </window>
    <window class='worksheet' name='Sheet 22'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0snhngp1rkwr1115dl6dp1qripkl].[Old Month Set]</field>
            <field>[federated.0snhngp1rkwr1115dl6dp1qripkl].[none:Category:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{9F0F2F3E-8517-40C0-97ED-39C996ABD37B}' />
    </window>
    <window class='worksheet' name='Sheet 23'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.0snhngp1rkwr1115dl6dp1qripkl].[none:Category:nk]' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0snhngp1rkwr1115dl6dp1qripkl].[Old Month Set]</field>
            <field>[federated.0snhngp1rkwr1115dl6dp1qripkl].[none:Category:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{C76DFBCC-F9A8-4008-92AE-32E0B1B43B5A}' />
    </window>
    <window class='worksheet' name='Sheet 24'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.0snhngp1rkwr1115dl6dp1qripkl].[none:Category:nk]' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0snhngp1rkwr1115dl6dp1qripkl].[Old Month Set]</field>
            <field>[federated.0snhngp1rkwr1115dl6dp1qripkl].[none:Category:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{3491BC81-6F50-4D6C-8F78-155A29F63111}' />
    </window>
    <window class='worksheet' name='Sheet 25'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0snhngp1rkwr1115dl6dp1qripkl].[Old Month Set]</field>
            <field>[federated.0snhngp1rkwr1115dl6dp1qripkl].[none:Category:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{5A1DC54C-6D7C-4C46-A054-9BBBF574EF2B}' />
    </window>
    <window class='worksheet' name='Sheet 26'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0snhngp1rkwr1115dl6dp1qripkl].[Old Month Set]</field>
            <field>[federated.0snhngp1rkwr1115dl6dp1qripkl].[none:Category:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{4257DEE1-F0A7-4CA0-8591-78B07ACF4047}' />
    </window>
    <window class='worksheet' name='Sheet 27'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0snhngp1rkwr1115dl6dp1qripkl].[Old Month Set]</field>
            <field>[federated.0snhngp1rkwr1115dl6dp1qripkl].[none:Category:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{43E942CF-AEFD-4BA4-9B4F-91059DAED82A}' />
    </window>
    <window class='dashboard' name='Dashboard 4'>
      <viewpoints>
        <viewpoint name='Single Chart'>
          <zoom type='fit-width' />
          <highlight>
            <color-one-way>
              <field>[federated.0snhngp1rkwr1115dl6dp1qripkl].[none:Category:nk]</field>
            </color-one-way>
          </highlight>
        </viewpoint>
      </viewpoints>
      <active id='-1' />
      <simple-id uuid='{567E7F6B-8A51-4AA9-AC61-903247592FD4}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='CPC' width='192'>
      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
      BBwMkgjNxYoAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='CTR' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Conversion' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Cost' width='192'>
      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
      /H/gDWu6zPFriQAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Cumlative all over time ' width='192'>
      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
      RU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Cumulative_Demand' width='192'>
      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
      RK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Dashboard 4' width='192'>
      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
      /f8DUgUw3DmsMwYAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Demand Sub_chart' width='192'>
      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
      c3Px+XxcvHiRWCy2ahvoQCBAf38/mzdvZnZ2Nq09V1WkV1cauq6nCUh9fT2SJJGTk0Nvb+9C
      H14pvyUtUO6VcLlNm1Ivcnl1uiNSri9dVdna2srFixcpKytDuS61h2EYvPXWW8zOzhIMBjly
      5Ah5eQtr7Z07d6LrOiUlJcs2Zu3atYv29nYcDgfbtm1bVt033niDmZkZVFVFCEUp13UsPg8k
      1y/I3+JxU+rLpaioiB/96Efs3r17yXVjsRjPPfccmqbx8ssv8973vjf9BTcMLDNBNJcDw7W8
      Q267urpoa2vD6VzdgP09e/bQ399Pd3c3H/jAB9LKrtosamtrGRwczJitrrrNXJ0prrd831Y1
      qCzLRKNR3nzzTfr6+jJexr6+PiwWC9u2bSMUCs0LwBvjEwwEQ2nfFYQJfmbLpiXdd3x8nFgs
      xpkzZ9A0bVkzQH5+PqOjo0iShEvWEKw2LF43JEM3r7xG2HO8RAfHmJmZYceOHRk2kampKU6d
      OoUkSTz00ENpL6SiKGzalOq3ubm5jBdCSCrUfPIPiW+pYex3/+uS26TrOi6Xi7y8PB577LFb
      fMJ0jh49ypNPPomqqvz0pz/lyJEj82XJZJJQKERHRwfV1dWpVCfXzAAXLlxAEGvrq8wAABvu
      SURBVAR6e3vZvn17xmx2WwXA5XLhdDrZsWNHxtQrCAJ79+6lp6eHQCCQZqyaSyQZvS4n5nJW
      ly6XC1VVkWV52UHekiTR2tpKT08PzIWwFuYhrJMN4CqG24Gqa/T29lJWVoaqqmk/+htvvMHh
      w4c5deoUp0+f5vDhw/NlPp+PnTt3IklSKjXgdb+DbdSPGI0jysoNE/xez1UvzAsXLiDLMvff
      f/+K9ijZaGlp4eTJk+i6zs6d6SeR2mw2Ghoa2L9///xAdS1DQ0MEg0Eef/xx2tvbqa+vTyu/
      rQIQDoeJxWJ897vfzZi2DcPg3LlzPPHEE7S3tzM4OJjR2JVis9lQVRWbzbbsHyUYDNLV1UVT
      UxNv/vMLVG9pXpU23Qrugny0qQDVVVVYbbYMjdauXbs4duwYLS0taelNumZneXV0PON6TzbW
      U+h0gmFQ8N0Xie3cjKNnCDEahyWqfCVJoqmpiYqKCuLx1Y1YGxwcnJ+tBgYG5g13oaTMRDQK
      efn4NR1LaRk9cwEqvR5cV/ZEDQ0N+Hw+XC5X1ii322oIu6rBcbvdbN68Oa1MEASam5s5evQo
      4XCYmpqbq96WSl9fH3v37sXhcDA9Pb2suiUlJbS2tmKz2ThQuxlHecmqtWulCF4Xs5EQOT4f
      4+PjGT7wV0fhnp6e1Mx1BUXTiShKxj9NT430zs5+nO29THzmI2g+D86Oy0tu01UtkGEYJJNJ
      hoaGVudhSc0u+/fv5+DBg2kOeuPRKD8cGMz4N3vNdwYHBxkZGeHYsWOEw5m2k9s6A3i9Xt75
      zndy9uxZYrFY2trUMAy6urpwu91MTU0xPT1NScnqvGx79qTCEktLS5mZyZ6UajG6urqw2+0k
      k0mMS720HNh580prjN3nQUwozExN4/V6M5Yxubm5RCIRotHokvc7hq5T8J3vM/f4YbTCXKJ7
      m/C8dh4ePXzzyqRe0u9+97sUFBSQl5c3r25cDe6///75/6+srFxW3bq6OjZv3oxhGFlnptvu
      CyQIArt27eLixYvY7fY0VZnT6UxllpOkVTOinJ2cxB+NIU0HEIMRlIZKrLEYR65xqJqZmcHp
      dCJJEhaLJW2ZVFZWNj9b/ej3/wZnxfrPAPbcHHYLHh647yD+UICJiYk0H5lYLEZVVRU7duxY
      snp08ujrGIPjBH4t5XEb3dNM8Vf/EWGJB3OLokhDQwObNm3i3/7t39i+ffuSn8cwDL7//e8j
      iiKqqvLkk0/Ob1b/rbuHuWS6W3ax08W7GpdmQxoZGaGzs5NDhw7R1dWVJkxwmwVgenqakydP
      YrfbGR4eTjNLC4Iwv7uPx+P09fUtKz1fIpFYMCRdk2HNH43RFwiQ99+/hvViH1P/+EVs13hR
      aprG8ePHsdlslJWVUVlZmeYcdlVTpUbjDE/6sZQszw9pLdAdVqaUBD987vu4y0t48MEH08pV
      VaWxsZFXX32VTZs2UVFRceMLGgZdX/4ms08+iJbrBSDeVI+YTOK4PAItS/OejUajnD9/nvLy
      8mWpQjVNw+PxoGnavMLiquAquo6spVvO5UUs6dlwOBzcd999vPzyy1n3f7dVAHJzc6mrq6O5
      uZm33norrcwwDNrb2wkEAoyOjvL4448v+bq6rvP9738fu91OY2MjTqczferXdMTZEEIsiaVv
      FLYvqE9FUaSmpoatW7fy7//+7xlB1a+88grxeJzN3gK2llRgX6JfzFqiqCrnE3MccTrmXSuu
      XQbt2bOH3NxcHnjggSX5TY3/4DixET/R3/jE/GeG3UZsxxbKXjsH7374ptfQNA1RFEkkEuTl
      5ZFIJHC5Fgaac+fOMTg4yOHDh+np6UnbkFosFqqrqxkaGqKmpmbJs9ZSuBr99+ijj2Ytv60C
      YBgGZWVl88au6wkGg1gsFvLy8nC7l/6iCYJAVVUVLS0tPPvsszzwwANp5bZz3UhTc0Q//A68
      z/w70T/9XFp5Q0MDiURifq14Laqq8uCDD/LTb/0jAY8VcZWWZreC2+ViV+MWCESpbW3OGNmS
      ySSqqiJJEpFIhIKCgsWtubJC/598h+2f/SjdHhdcs6GO7m1GfvFVDN1AEG+seJYkidLSUqqr
      q5mdnc1YwsbjcQ4fPszJkyczjKCqqnLu3DlycnJ46623qK6uXrGv1rX8Q1cXYSX94PIKj4fH
      6ha0i7dVCxQKhXjuuefo7+9nfDxdHScIAvv27UMURfLy8pblq2MYBvn5+Zw9exav13udu7SB
      8/kTxB47SPRnHkYam8Lx6vm0+s8++yx9fX1cvnw5w8Gsra2N1157jfGuHiorK2/6ItwOZEXh
      8rSfKoeH9vb2DOe6119/nePHj3Pq1ClKS0tv6MrgOnoaV1Km9iPvyiiL7dxCYHCMSN/wTduk
      aRqXL1/mlVdeYWhoiFgs/WyIpqYmwuEwXq83IyhFkiRyc3MxDCOrjWilGEtIXHNbBSAnJ4fa
      2lq2b9+eEZhuGAYvvPACExMT9PX14fdnOWtXURHDmYduGIbBqVOnmJ2dpbq6Ok3TI07OYX+z
      i/g77sPwuYl85FHc3/4B+jWbu3e+853k5+dTW1ub4R9/7tw5tm7dSrBnkG7P+r/8AFarlbya
      Si60t5Ofn5/xwlRWVnLkyBGam5tv6DYiJJL4/unHbPn8zyM5M2c2LddLrLEa/49eu2mbJEmi
      traWBx54gJGRkYwRvK+vj+PHj9PV1ZXRXkVR6OvrIy8vj9ra2tualPe2CsD58+epqqri5Zdf
      TtNPX+WqlXb37t2Zo5ZhUPjH36H8538XIZIuBJIk8Y53vANRFNF1PU0j4nz+BHJTPVp1Krgj
      /o79yEmZoX98EUiNXBcuXKCzsxNFUQiF0l0cmpubOX/+PBW6lcbapSVdWmt0XSeqyvjcHnw+
      X8asNTk5Ob/pKyxcPHjH9ePXMSwSrkfvX/Q7sd3bGH/xlRvGUciahj8Wo7ihgTDwtiefJKjr
      xK9p186dO3n00UfJz8/PSGtjGAabN2+mrq6O1157bVF38bXgtgrAtm3bsFqtWX0yIPXiP/DA
      A4iimDZyCfEk+X/299jP9SBoOrbekbR6uq7zyiuv8MgjjxAOh+ejgrSkTOQ/jhJ/8hpdtsNO
      5CPvpPOLz6DGU5ojh8NBbW0txcXFeL3etGvLsozP62VyZppLU5lW1PVA13VyJBuhCz2cPn06
      4+WUJIlDhw7x5ptvMjqaPYucEInh+8cfEfrIOzGsi6+3XUf2M3emAyW4+Ewym4jzw8G+jH/j
      kQXD08mTJzl27Bi9vb309fWl1bfZbBw8eJD8/Hy2bt267ICnW2GFAmAw2NfD+fYuQnNTnD9/
      gUAkzqWL7fQNjTE1NUksOMX0NWeETcdjjMsJIqe7GP7CM9Q1t9AXnEO/5sf7wQ9+QHd3N93d
      3fNGi0jfMPpnv4x1cJyJP/lVgh98hLy/+h6CurBZEwSByspKXn31VZLJ5LwT3cT/fpWwAMld
      6TmEtCN7cVYU0/fMvyCKIgcPHqS5uZmioiL6+9PP9TIMA1EzKAjKFNeuTobnW8VqtXL/w0fY
      UlrBz/7sz2ZoTQ4dOoTVauXgwYPZM6UZBp4fvIqW6yV+cMcN7+WqKsXTWI3/R6+SSCR47rnn
      ePHFF7lw4cKy2rxnzx7Ky8spKyvL6uJy9uzZ+d9+qdk+bhnDWLkWqLK6ltDFLiamAjQ3NXKp
      qxtXbjVqfJrJYJiEaqVtVyoiTNM0LkfD9ATnsL10Ass//4TBU+eRP/oOyv7zh7DaU96M73rX
      u7BarSnfbk3H//LrvPnJPyDQtoXJX3wPhtNB+D0P4f7JG3h++BrqngWr7K5du4CUv9GlS5fY
      tnUrfX/1ryQePQj29BdEsEps/o1f4Oyn/oDKpx7l5dOn6O/vp6qqire//e0LUUOGQX5hIW7F
      wB+Vedt734WsKIiCcIOIMG3xiDBjiRFhWVcbqUinsWiE8zNT6LqMMDLO6LQfpv3sKy4j/8qL
      c/LkyflNqK7rlJeXz/+/GIrifvFVfN9+nrnPfAgs0nybsyIKFD6wh4mXTsGBJrxeL8PDw/OR
      eQCalv15tOsiAffs2UNraytnzpyhtbV1fq2vqipTU1O0t7dTUVEx76iX6rMsnXEl6ivtNzCM
      +VSVmrZ4BKIxX1fH3Tu08pDI3u5uGrZuY2Kgl0gkimB1kExE0RQFpycHayxGTNZw26QrUVCp
      xsm//H7kj7wDy6sXsH37BY5/60WqPvFuxh7eCd4remNdR/z7HxP9xvdoefq/0v3ATvyzqRw8
      hsNO4BPvovDP/gH9M5/AluvFMAzOnz+P3+9HlmUefPBBYpdHmHurE+9vfpzrJ28BgbKHD9C3
      tY7er/wdibZK8vLyKCsrIx6Pz88gPxkeYCIWQTzbjSPPy/eG+3DZbLynYQuimN2pThRT1uSs
      EWFCSud9o4iwVN1spQIWiwUNCMpJLG471rkQcTmVu8e4cm1IvWiqqpKTk8Pw8DCJwXHGf3iC
      6R+/Rtmp82jF+ajlRcjbatPanPWugkDlkw9x8qO/RcuXfoXZvLz5yKqrdSQp+/NIV54HUrG5
      w8PDDA4Osn//fqxWa1pYY1NTEw888ABjY2M4HI6FwJWrnaGqgAAWCTQNZTqAenkQ+4UurCOT
      OI+/ydyv/V+olcVIknjD57FYLFhjCeq+8t2VHpJnYLFIDPYN0NhQx9DwGJs2bWZmfBhrcS12
      ycDpsBOJJcB2nT5fFCDPi/r4QdS372NP9xR9f/4PhL7yt6gfOIK+ZyuWfzmKcOEym/7maWof
      uo+egXTHqvj+VpKNJ7j4B99gx5dSOv2xsbH5XDaKojD8/3+Pinc9xHRpIWSxOQiCQNN//795
      9YO/ykMf+zqOyhICgUCmEcYwEM9cQnM5VuWEl9XC8LggFE0b+QD6A7Ooc2Hi332RvvFpghe6
      OTc0TkFbE+KBVvw/9zhqaWHqWZaobcnb3Yxos3Dhey9i3dGIruucOXNmWX7/oVAIv9+PrusZ
      dgld1zl27BgVFRU4HI75NDbXfIH8X/kTpPEZDLsVIRjhJasV3W4l12VHdzuxXh7B981nmf3N
      T9y0LYauo375myRL8lcoAIJEw+aFdXVDfUo7UlKRvkb2eW9yeauFivc+TNHjh3nu355H+tYP
      sHzjPzC21SD/+edhW0N2HbYkMvdf3svw5/6Uuo+/m5zmRlpaWpiZmaGoqAi3IDHyvZc48J0/
      5Ea+n/ltTZQ8fIC//JXfZs9nf46BgQGefPJJPB4PuqrB+R6s33ke6fhZjFwPaDqsnpHyljB8
      boglYDqI6J9l9EdnGe7oY+TNDvSZACQVjIoi9I++g6IH9nBox3YuTE2jDo/c/OLXIQgCxQ/u
      JXaqg9lSL83NzczNLS8r3lUL/ZtvvpmxxhcEgbq6Ompra3n22WfnnRevYnvrEpaBMeJvP0Dy
      /p3kV5byn3a10peI82O/HwQBaWyKgv/xDfL/32/DX/3PG7Zl4G+/z+DxMwz8/qfujMRYgkVC
      370FvbUey7dfRDvQDMU39kNXq8uo/tBjtD/9Ne77hy/z1ltv8ZGPfITXX3+d01//W5xlRRTs
      a4X+gRteZ+vnf46uhz/O3tIaWlpacEgWhv7pRfq/+e8EO3oxnjhI8qu/ilGUm5p+7xCEwQmY
      nMP51H8Hl4Pwrm0U726GA1tQ6srAaQerBG4nuG7dfaPs8Qd46dNfwPrgVmKxWFqC2nkMI5X6
      Ioux8I033gCgoqKCEydOpDmlCYLAoUOHADhy5EjaElGcCZDzpW8T/qX3EX9XSpunu1zYC/MQ
      Z1lY95cXMf2Hn6Lg6b9g5DNfovQvns76HLGeQdqf/iqu3/s0SuFKj0ldK2xW1P+caZFcjG2/
      /vP8+OBHGH/+OHX1dbz88ssYmo7yg9fY+skPL+kanoYqjP3b+Kdf/z3im8oofvEshXn51P/C
      +5D/6JNM3Vk9NI++tQbtHQdQPvQIRkMlW6tqKXF76O3rBnVpHpzLoej+NhRZZmdNPU6nk56e
      noyYDrFnGOfv/jWJzz6Ftjc93DU/P5++vj5EUcxwaTYMg2984xs0NjbS2dk5ryXS4kncT3+D
      uX3NxB9f3FZxFT3fx8zv/zKu//EMb/zi0+i/+lRqELhKLIHxO39O/c+/j+hDe6Fn8O7JDJcN
      W56Ppt/6RTp+7xuQVMjLy2NuaJSJKT9ljy3Njx0g/8Hd+E514znVTdsffZ4jx79Fwy99AMm3
      /mkBF8OoKUX+nU9gNCzPP36lWDwutty/D/HVi1RXVyNJUpo2SzrThev/eQYhGMX5pe8gnU03
      dFZXV3Pfffexb9++DD8wURR56qmnePjhh/nwhz+M1WpNOUf+7teJRGKEf/lnss4q2dB9Hlq+
      80XkuSCW3/56apkIoOu4//J75OTlsO03fmF+5rhDx7elU/3Uo/R/6z84/j+/ws888yXaf/CX
      VL//7dhyvDetqxsGqq7zyM99mNGCMkqO7MdWkLvkzr7XKPtPBzn+V3+Hv62Gbdu2oes6RlLG
      /5W/x/WX/0TyE48jP34Q2/dP4PqtrxP2h9E/9VFEi0R7ezsjIyMUFRWlubkE5QT9oSv7iZmU
      7Wd41o/lh28w+h8/IfnHn112dgpbrpf7/vZLvPgzn4WnnyH0hf+C7cQ57D89i/6t30W0LWzk
      7noBEG1WWn/v00Q+/Hksg5PkvtnHnj/4jSXVDckJjo0NpP7YX0d7dBKik2wvKKXOt37pD+9U
      LPc1M/Xr/XxgUxMvv3mGQ3VbeOszf0gkHCH6/30GfWsqjFX+2UfQmmrp+8I3iZ2+yO6v/ja7
      du2iqakJu92edshhXFUYDAfS7mP0jsDvfJV9/+u/8dP6MljBOQW2/BxiX/ok4uf+hJzPfwVp
      cILI5z6EsyzdNeSuXgIBRJQkr5Va0Q61cvypX0VtquFla4ze4PJCH01uTnlDHfbN1fzrn3wd
      35k+XnnyUxQe3Mmu5782//JfRWttZOtz/wtBFHjpwY9z8kdHORuY5JR/mPbILOems7uVGKEo
      xm/+BY2/9AHKHn8w63eWiuF1Efryp7H0jqCVFiA/2Jbxnbt+BgBAEBA/+Da0F07C1pp1Obzu
      XmB2dpbSTXWc/u6zTOXl8+GvfYGSRw7gj2d66ALY83zs++bvcfyPnmHil76I+IlHER/Zg1BZ
      hMeaeb6DoWoYX/xbKCuk4Jc/sCqpFQ2XneAffTplN8lyvY0hAADbahA/9X6EB9c/aH2j4nK5
      GFcTBOJR3v2dP6b0kZuftSZaLFg//ihSYyna576K/jfPI2yrIVZSQHt9HUpRDoYrZRw1fvIm
      tPchfPO/rZ7KWRBQmxdPr7NhBECwWhA+kT3szWR1cLvdfPJv/oz4qB9XddnNK1yDuGcrPP1z
      GFMBBJcDYTqIEooQ7OjBGJ0A/ywEIgi//TGEwtt3+s6GEQCTtWUgPEtP8MrhExIwGsYhWTlc
      tvTkZeLDC8nQnFYbuyoamIiFOTkxDAkZXu+E/U03uMLqYwqAyZK53i9zKSGHS0EQhJTleh2W
      r3e9FsjE5FYwBcDknsYUAJN7GsG4EnJz9fCAtSAajWJ1OFCzREI5JAkESKiZEVZWUUQSBGRd
      R7murgC4LBYQBJJaZvSPVZQQSWURu/6+giDglKQl1dWv6xNBALsooRkQTMoZdb02K1ZRICSr
      GfeVBIEcuxXFMAglMh3WfA4rVkFgLhxHvS6U0WqRyPU40UkFoV+P/crRSkldy4gok0QBqyCi
      GQbJLHWdFisCBjFVy3gHLKKIXRLRAdVIryuQuq4BGWeLXW2TCChGZj+KwkJdOUt0nU1MPU9C
      0zLqSkKqTRqQzBL55bRY5ute/0ZLgoBNFFENg7iqLQjAWhIKhbKe0QoLIW+LGT2uz3q2WnVv
      VGbWXf/r3q66t30JFJrzMzqxEPV/9fwwADkepqvzIpOzC6lJ5h/CMBju7+VSTx+akVkXwD98
      mUBMzawLDPR20dM3yJVM4Gllmhynq7OTYDSZUVdXZXoudXK2vXNe4K6tGwlM09FxkXBczqiL
      odHXc4nh8amMsmholqExP5ocp/NiB8FIcr7cMHS6u7vRdIPA1Djj04G0uuG5aUYmpkhEg3R2
      XmTmSsYGURQxdJVL3T2AweDlS3RfHky56F+pG5yZYGwq5Xw2OthHOK7M19U1hUs9qYPE+7ov
      0jswnHbf2clR/LMh1ESUrp7LaLoxXxaPBBgYGScanKWzs5PLAyMLdQ2dy73dyKrO2FA/XT19
      6IaR0RfJWIiLHR3zv4MoimhyjK7OTsan5pgYGeTy4Eham/yjg1y81IuiyFzqWUjnLooiSiJC
      V2cn/pkgIwO9XLo8kNYXY8P9t18ARItIaDb78UKS1UFNdQWzs9n9ePILC1HiYRQtc9JSE2Em
      xsYIxbP4whsaU9NzWK22rFGNfb09qIaRdQkoWmw0btqM05ZdYzw5NY3X42BqOjOVRzI0jeEq
      YC5LOhVDsBIJzTIxPEJl42Ymxhayr+mKTEJOol2Jdgxdn9deshAOzmGxuaiuLGVmeiE6S1MU
      Ylecx/ILi4mHgly7wBAEkVAoSDI6x8TkNNFrlmKqohC/UndqehqbzZa2hBAxCIaj9PT0YOjp
      SlAdiVg4gDsnn7qKQiTbQnJcXVVQFBlZ05mdC6FEw8j6Qm1DTPXF6MgYdZsaGeq/Jm2KaKO2
      torAzATBqIaUiHKta1xeURl2PUkkkSSeTE9/Llrs1NZUMjczQ3F5FXo0wrULpsKS8tsvAB6v
      Z1FXHSUeYWB0hk31tRllVxY7CAKoWbIQjA6PoGoqU1OZQZAGIjt37yURnsrINAygGwL1jY2M
      jWQ/1GHOP0JecUXWpZau6/OZLK7H5i1EiM8SiGTmpfd4vQhC6gVPCd7CtSWbA/eVTBYerzdD
      aD2eVN1kLMiwP0hD3UJMgMXuxGFPCasgiEhoXLu9ulp3dGQMRY4zNbMgPDaHC7tNAnTa9h4k
      OuXn2uHE603FRxiIFLklZsILz+X2eBFEwDAYGp+hqmwhw55oteN22MDQMAQJm0TaIHa1TRWV
      FQz09qIaC6+locbp7R+jcVPDQsTZQinjwwN4S6rI9XqxW9PdJ9RklMtDfhob6xjqv0xpXf01
      Ea0Go4P9t98QNtw/TDyRJC6rGaNqLBFHVxNMzgQoK8p0R56a9GNxenFaM+W2ZtM2yivKiAtZ
      glgMg9GhPqyufGxZMhg0NDbQ09tLRXV2q6Zh81Ccm/3E++LiIkYnpqm47oRMAAHjStaz69OL
      G4wNDZCIJahobGSsr5fy6oV898loiHAkztj4BCSCRKMySbWK1HttMDrUTzwaZS7oQJMTzMyF
      KC5IuQ/EwwESsQTD436UcBCbLw+buHDf4eEhYuE421p2Ul4ZQpMWRupocJZELMGof5pkcA5H
      XiELLms6Q8NjxBI6m+rrGB6bpLF8oe7EyCCJWIJQLEFBUQnSNYOFEo8wF4ySFKfJz3URToBr
      /jdc6ItIQgFBZPPmhb5IxGIYhoZ/KkSu10pUdbAQHWAgywox/wRWkiRiCcb8M5RfSWGfiMUx
      dIXJ6WnkpMLk2Di+LQ1IV55HlhX+D0LiBntknprsAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Exploring Data' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Exploring Data 2' width='192'>
      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
      AAQFzf8HcCC3e37nPAUAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Information' width='192'>
      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
      AQndZ8SB8VwhAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Order' width='192'>
      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
      SUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Order sub_chart' width='192'>
      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
      7s9/pKoqU1NT3L17F5/PdzRMvFgsUiwWicVivPTSS63b/gT5xiiQoVao48HvauPsom/Argfo
      Ht1nPQr0jZZJLj+tTeR9cjRMg618riVZ0zQQxdYXs2kYiC20+ZAliajXTq8+a7Q1FUKzJDyo
      lFWDudlpPrt5l/ffvsrq6hrbOwneef87TbVGzNVq/Md7t5643adJv8/Pn199i9u3b+Pz+Zid
      nUVVVT788EMmJyfZ2triueeeY3Fxkddff51wONxpk58J2rIAHG4voYAHTXKjVRVmIi4U5MOo
      kuhgemoCS3I1PSCjmzl//jz379/Hsiw+/fRTHA4HhUKBYrFIOBymt7cXp9PZaTOfGdqyAKqZ
      PZb3ssxMjqOrJTb2TcYnPMTjcYKhfqxantjIZDtM6SiWZXHjxg3i8Th+v59IJEIymaS3t5dg
      MMj169fRdd1Ox2gjbUmFsEwT3TAQBBFJFDAsC/FBI1pBEBFF4ViOTiqXJaO3FjP9vDViq7Qq
      75QcTPT0Hjllx3XkbSf4yei2UyHaKG+nQhyPjrRGPNjbJlOoMDl7Hp9LAsuiWq/jO0GJoKHV
      WVnbwNsT+cKUyDEWlta4dPEC6f1dsjWj6daIy5tx/vf/PN+SLWcwnP7EZY8jHwp4+Ms/eZvd
      3V3q9Tpzc3Mkk0lSqRTnzp3j5s2bvPTSS+zv7zc1VuqsvwG+8qlOtlDnufMzLK2uIRgqXr+f
      xeUNrr75Fj2+1tqGC5KT6alJVjd3UESJfr+TTKGKYZlAg9W1LcKDI02nQmgNg7X46Uyxt/ky
      A70almUhyzILCwvMzMxw69YtVFVlY2MD0zTJ5/NsbGw8FXPVvrK0BEzLxDQN0CvgGWB0dISx
      sXGC3hNEJgyF5fUdZmensczDnHuHy43LcajeGwwTtOoU7VSIM8O9e/c4d+4cjUbjaCsiSRJD
      Q0Pk83kURUFtsSz1LPGVN4DEYH8PK+s7TJ2/Qnpvg3Tehd8F5ZpGsMU3gFKrY1kGiYMs/WE/
      2YrGsFmnXquzE88xNBAkXzcZbDIO6nY6eGE62pIt9h7o6wn5D+e0jY+PU6vVWF5e5pVXXqFU
      KjE6OsrW1hbhcJh6vU69Xu/6YSJd2xXCToXoDt1d5gM8KSxq1SoOpxsJE1U38XrcaJqGU3ZQ
      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
      jr0Fsnmm+f8BQNag5bt6iCQAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Percent difference all over time' width='192'>
      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
      Zf8PSRX1XhRSFisAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='ROAS' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAABJ0AAASdAHeZh94
      AAAgAElEQVR4nOy913ckWXav90VEeoOESXhfcGVQqEJ50z1txnK8uSTFpRetJWot6U/Rux60
      tCTdJYocXl5qSF5yTA/HtClvgAIK3iMzkd57FxFHD6jurhoOqqt7sgy64nsDMhFnZyB/cSL2
      2ft3JCGEwMDgNUV+2QEYGLxMDAEYvNYYAjBoCLquk8vlXnYYnxtDAAYNQQhBvV5/2WF8bgwB
      GLzWGAIweK0xBGDwWmMIwOC1xhCAwWuNIQCD1xrT4z9ks1mq1erLisXgEKPrOuVyGU3TXnYo
      nwvJqAUyaASappHJZGhra3vZoXwuDrwFKmUj/OZXv2RmZRddCBKBNd5773ekSioAtWKKhZVt
      dAC9zuK9a/z2ozuUanrDgqsV09y7c5vlzQDaU3Qa3wvS6HlLVDLcvHmTmzdvEs1Wnngtm0xS
      f07XjXRkl5s3b3L/wRLlukY+HuDmzZvMLqxT1/fHLOdibAfiCEArZ1nbCQJQyUTIViC8u8qt
      W7fY2otjXN6ezgECqDP/YJXpy28w/4v/ynrYx0//+QOmJ/v5z//3Tylng/z0b/8f/uHn19AR
      3PvNP+Grt3HmxBGE3qgpsM7tWw8YnzxFs0NBUzWK+SyJRJKapqPVq1RrVXL5Es7mZswIquUS
      6WSSQrmKEIJSYf/95eoXWKHMhym7hjl37hxet5VauUAimULVBOFdH4l0iky+SKMn0GQqxejx
      acY6zdxd3CYd38M7PMVAC8wsbIIQ+Lc3WN3YQNMF9VyYleUVIvk6+dAq4QL4QlEmp06hJTZZ
      3I01NL7DhhCCjdg2/+uv/zfKtQpCCP6P63/LP8/9kgeBhYMEYOby22+jJrdJ4MSWD6C0jNLR
      cwRHNULR3suPf/BNXAog6iwsrpENrvGL996nUG/UDKDg9ZiZf7iIbGtC1mrcvHmdSGiX2zPL
      ZH2r/P7mXSKpPAuzs1Spc/P99wmEgty/P08xE+bO/QVCe2vMzPm+wPiCiH+T5eVlsvkCi4tL
      hPd2mF3aArVEMBRh/s4tooVagz7vPnqtzMbaCivbUbrbWwEJs8WM1WbDbJIRQiVdsXDMayJa
      3J+Nh49O4Ftd5ZMzL8lYrDbGT02TDwcaGt9hpM3ZysneY4CgXK+g6zo9ni6Odo4dJADB1r33
      +McPt/gf/+e/psVpQxIa+/OpjCw9/l4Jxerkja99m4tDJj6a2W5Q2BLHzl1l+tgwazO3SJTq
      dPQOcuLkGSxaAR0YPnaa8cFOPg7H097PyZNTtLkk8okQg1OXOX78CLL2RUQp0drZy9DQELKa
      YnsrSDKdRyDA5OTo8WOcO9pJNF357EN9nlHNVvoGBhnsbyeTyqLXK9z78Bf8/MYWJ8aHqSa3
      WdvaYzcY4OHyLgCK1YPXXiOSKT9xLKHX0cXrneiTJIlWZzOStP8tsZmt/PmZ79Lu9vLLxd8+
      mQX6BL3I3/z0N3z1r/4K3/oqwyMjWAt/x0cfqMg9k1iLUR4srhKPBVnZinDhzAQf/P732ItJ
      jrzR3qDQVdYXlhFWG5gsKBKkYyFWRR1hb0WmitVqPvCv7c1eVpdmKXtq1PhiMTlcTTQ3N6NV
      FNram+js7sbqbEKNpdleXycTSnD84sQX/YB/FKHVSSbiWPUsutSObLZx/q3vIEcXWdr0oaSi
      fP8vfkSLWXDr2nXqoh2QGBod4Vc/u8foOOjVIpsbG5QzcfrGTzU0vsNOuVZBR9Dd1MGM0A/I
      Aukq4WCQUk0FZLoHBpAqWSLJAl29fci1HMFoEiHA4vDQ19lCLBxEM7vobm9Fkv7jwJ8fQaWY
      J50r4nA34zQJ7s3OMnRkgvYOL5JaRVMsWBSZcrGI1emgWq5is9uolssokkoolkEvR4iUurg8
      3f/5RlerlDQFp9X0WCwlmlraMFMjlc5hdXlodjka9Hn3qRSzpLJFZMVCm7cV1ApCsWFWoFAo
      gizjdjofvbeIyWJCxYTNrFDIJDG72lCLKbLFCs6mFpqc9obGdxCvahZI03Wub97Bl9qjye7m
      8vBZlsPrZCt5zg+eOjxpUF1TSWdztLW2PtP7tXqZpbk5ynITZ86cwPwCvgSvM6+qAD6LQyOA
      F0G1WiWbzb7wcXVdR9cblz5+GQghqFQq2O32lx3K58IQwCtArVZDVdWXHcafhKZp5PN5mpub
      X3Yon4s//hBsgMgG+Nf7Ub7z7jkUUef2735L9/SbDHldz3Xc4OZDNkI5TLLM8LGTmHO7PNzN
      YLeaGZ88TXuTjVRojdWwzOUzY9SzIa6vxHn78ikKwWXyTcfJbd4kUdCxODxMTR3Hblaea8yv
      OuV6iUBmhxaHF6+jA4BYMYzL0mQUwx1IvYCmVYhmqlSLafKlCpWaSibq49pHH7EVSiIqGQLR
      OEuLqzRq+aOqSZw+d4nzJwbY3YtSq1YYO3WRc1Nj+H27CCEIh7PoaoaarqPXipipsB3KUSuk
      KNagWJe4cOkKxwdcLK683usAutAJZHdotreylVilVC9SrBe4H7hBvBgxBPA0Orp6SETDJIMB
      vH0DgEAXCt09PazOzFArp7g9u0LvkRHMDTqTWiXHvTs3uT6zSn9PJ0JXCQd8+PxB3J42hFai
      hIMTHVZ2Evt5/7a+MXKhDZ6oQpHA3d4PlWRjAjukyJLMuPcETosLWZYxySbW44tMtE8iIRm3
      QE/D5mmjHt0gKAkGmi1kdI1tn4+2nn4cEtSAofETNDsOXo/4vCi2Js5fPIZDTzG7FqLXLiHr
      ZdZ9Kb7+zZPk/HPsxTJUi4KySTA06kBSLPS3O9naDtPa8emxtFISzdTUsNgOK/FilJ3UOie7
      zhLO77GX9WFWwsiSbAjgQBQLNrMFj0cnqvZisRSwmk1UJRW/z0dZl5EVC3ZLY0+holeZvXcL
      Rah0jZzErNbp651g6kiK+fkVLAK+8613sEiC5bl56ooFKxLerhHWFuexKGDSy9y5dRNZsXHq
      7OmGxnfY0HSN5egDxrwnKNRy9HmGGGgeZi/rRxeakQV6FTCyQM8PXejsZX3UtComSaHPM4RJ
      MVNV9wvjDAE8hq7rL+WLWK/XD70AhBAUCgXcbvfLDuVzYdwCPYaqqhSLxZcdxqHk48W8w7ag
      ZwjgMSwWCxaL5ZOfhdDRdIGiKLyoSgpd09B0HZAwmZT9GDQdJAmToiBJEkLX0QXIigyPYjQp
      CkLXEJKC0FV0XSDLCrIsv7BaIICWlpbnP1gDMQTwFKI783wwn+InP3gXs/xiJLDx8Ab+jIRV
      VHD3n6C1tM5cVMJjUukcOcmxwXb8q7e475P50bcuUYut84/XfPzkh9+guH6NZMfbJOd+gWpp
      Ra2pHD93ke5mxwuJ/VVECMHD8BKBTJB2Zxvn+qcJ56JsJ3d448hlQwAHIgThWJnJIQ/JUp3W
      epSP5neQ1BrDk+ew5wP400Vae8YZ63u2Ar1nQbE1ce7iJHp8nY1CDclsY+rsNH2OCnNrAcSA
      l1hO4UibRL6uYwUmxvtYXQ/wcb2r4mzl3PmrmLQ0N2c26b4y1bD4DiPDrYOc7D7O7zc+IlPO
      kigmyZSzCCGMhbCDEHqBaLpCW5PM6loQoVboGD7Ju2+fJ7y7Rz6TpGXwBKO9jZ3ytXKW2zc+
      YnE3QVuTC71eYebm+/zu+gz9Q6No5RjpgsDrqLO0vb/I5WjtxVQKk60+2Y6qWNyYGt4tfbiQ
      JImqWuWfH/4bIGhxNHOy+zhWkxUwfIEOJLW5gtnbSbpqo5oOsP/VEpSyGWSrDYvNSVuz+5NO
      o0ah2D1cuvoVLk2PEgpGkc02ps9fpMWqoOoaofUtnO0e8nIrhcgm+yk8hZGhbra2g58cRwhB
      ZHsFa1tvQ+M7jLS7vPxg8jtISCQKT66MG7dAB1CydvDWuSFMErQ37VJR6+wsz1Jo83Lq1CS1
      jB3rc6gxa3LamLtzHZPVweTJKUzlOLrLzdDlC2zvhpE9PVweHkYGWpy76A4n7cKC093H8MgY
      LQ6wNju5feM67b3DTI11Nz7IQ4Sqq7y/cY2KWkHVNRRZ4b3V37IR38KsmIx1gGelltkjWGtm
      uOP5VoMeVoyGmC8BL6sh5svAx85wzkftmocFQwCvAEYpxMvDeAg+AFHJsrAR2H/IFDr+9RVS
      xcZ6AP0xsrEA9+/fZ35xjXJdo5AMcf/+fRZWtj5xhqvkE/hCyX1nuEqOLX94//e5GLkqxAIb
      3L8/w24oaTjDfQbGQ/BBFEI8XArT299Lk8izOD/HEVc3bpNGvlDC5mrCjI5stiCjUVUFNsuf
      XhadTKUYGD2GpRTiwcouA5Yknt6jtGhR5ld2OHd8mL3dLbZTEr1drai5KKurQdyt7cjhdVLe
      DrKhKBMnpoltL7FSFxwf9DbghBxOhBAks/NUa2mE0Ohsu0g4cQNZNmGzeI0Z4Gl09XYRjcTJ
      JYJ4OvYbYlKRPQLBIHfvPiAVXGMtlCUf2WEjmGrImHq9wu7ONluBBO3eZkDCYrVhszswKxJC
      qGQqZibaFOKPfFoHR8fwb6zz8cVekhSsNjujJ6fIR/YaEtdhptUzSU/725hNLmr1HDZLG91t
      b1Kr5wwBPI2mtnbyiSiBaJH+bhcIQTqZIJVKEd8L4xwaJxvcJpzI0dfVmOyHZLLQ2dVNT1cr
      +UwBXa3y4Mav+fe720yMDFJL+9jYCeIPB1la2293VGxNtNlqxP7AxFfoKsJwhkPoGpHkDZz2
      XmzWdmr1LOHkNWyWVkMAT0MyOXEpGfK6C7sECJ1MqUZvbzdWRUbINnpsZXwlOx57g+4mdZVs
      JkOuUETTBbLJyvTVb3Bu2M3azh4bmzH+7Eff482vf4+mWhRVAEgMDA+x59sXhF4rsbuzw/zs
      It0jw42J65AihE4iO0ebZwqXo59SJYzD3kOP922KlbCRBToIoVYo6xbMeokaVqySiipbENU8
      6XwVl9OJs8lFameOhGmYY/2eLzzW41mgT53hzLR52xD1Cpgec4aTZNyuP+4Ml88ksbjaUItJ
      ssXqC3eGexWzQLrQiCSuIxAosoU2zyky+TXqaoEm1xFDAH8KajHFwk6SUydGkf+Eb5mRBn15
      GAJ4jJe1ECaEaPg+Ay8aYyHM4LXmsJZCGOsAT6OWZ3Y9wunJAzdSaDh763Os7qUxKQqjJ6ax
      5LaZ2UrhsFo4duosHR4byeAKyyGZN85NUM/u8eFinK++MU0+sEjeM0lu4xqRnIbN2cL09ORr
      7QwnhKBQSZApRfA4OnHb2j/5ub1p2MgCPRWtTiyRppgKkyqpqIUEoXSFSDjA4sxtHq770Rs8
      gVY0OHvpTS6fHGLLH6JSKXP0zBUunh5nZ2cbIQTBYAatltp3hqsWUESJzWCOWj5BoQa5Glx5
      400mB53MLX2R3XG+TAjKtTxumxdfYo5CNUWyEMBpbWEjcssQwLOQj/tJFFTUfAR/osTO+go9
      E9NouRCVemMFoJWz3L7+Ee/fWWawrxuhqYQCPnb9ezQ1tyG0IkXsTHXa2IrvO8O1Dxwls7f6
      hDOcJEk0dQ5CKdHQ+A4bkiTjcXZRrKYwK1bsliYGvdOAhN3SZNwCPQ1dCMxWC9IfdFVZ3S00
      O62ErdaGj6nYPVx6YxKHluDeSpB+B4hanmV/mm9/9zS53Rn84RTVvKBkFhyZ2HeGG2p3srEV
      pK3r02MZznD7SEgosgUhdFStSiS/Tl0tM9x+1hDAQeyuPGAjEGdk6iJuJcnczHWCUpGWo/1Y
      bDYArFZrw3Psslbh7s1rmKjTPXYac73KUO9xzowlmJ1ZxCoEP/z+N7BKgof3Z6jJFqwmmfae
      MZbmZzArYNZKXL/2EYpi5cyFc40N8JCh6xrJvA+bxY0udPLlBMm8j0HvNOVa1sgCGTSGVzUL
      JIQgV46SryRosnVgtzQRzW0hhMBmdhoCeBxd1z/xtzH4fOi6TjabNXyBDjOqqlIoFF7KuIfN
      Ue0P+Xgh7LB9DmMGeBpCoAuBJMtPOMPpuo4kSQ1zhHi8FGLf9W3/XyLLMiDQdQFIyPL+mELo
      CAGSLMOjVWRZlhFCB+RHrwskSX4UZ0PCfCqHtRTCmAGeRiXNv9/Z5BtvX3hCADdu3uTKlaso
      z+GLtblwm0BWYBFVPP3H8ZQ2WYhAk1ml88gk4/1t7K3d40FA4rtfO08tvsm/3Pbzg++8S3Hz
      JinvG6QW3qNu9qDVdY5Nn6PTc7g2rmskQggKtSJ3/DO8deQKZsWMLnRu7t5luHXQEMCzkPQv
      UXaN0aXvsV5+vt1Vis3NmbFjiNQWm/kaLSYrk2dO0WuvsLAZRPS1ksjLDLZKFFUdMzB2pIeN
      zSA9j45hcrQwfeYiJi3D3fkdOi8cf64xv+pE8jGy5RyarmFWzASzIWKFBO0uoyPsM5EkiXq5
      QEXV0eslCpXnW7W5v0XSLZZ9CVqbnOhqlfm71/jwzjw9A8NolQSZskS7U2NlNw2Ao6UHpRQh
      X33y/luxuAxnOElizHuEVsf+rVlNrbGZ2GWy6xgSRlP8gaiqSqmQw+Z0oUgSqqqSTmee+7j7
      WyRd5vzUCJFwHMlk5eT0WTwWGV3oRDZ3sDU7yQo3xejW/h9JCsMDXez4Qp8eSAhivg0sLV1/
      fKDXFH8mSKqU5rb/PvcDc8Yt0EFEdpbZTdSYPn0KmyiwPTOL2tRET6cN3dL33B4s3Q4rCzO3
      MVnsHDt+AqWSQDhdDJw/w64/iuzu4uLQ4L4znN+PbnfQJsw43D0MDA7TbAerx869O7dp6x7g
      xMjrLQBd6Nzxz7AcXaNcr3B1+CI/mfoeOykfmm5skfRKYDTEvDyMGeAxXlZDjKZph34BTghB
      pVIx1gEMXk9e1VKIz8KYAQ7Av7FAJL1fbtzaPcRof8dn/AWASjyWw9vR+sK2VDL40zAEcABd
      A6MIbZmM3EV/ZytqvUqhWMbhcqPXQty4EeXC5RM47Sby+QKKxY7LobO2vEObIYCXQr1eZ3Fx
      ESEE09PTn6zU67rOw4cPKRQKTE9P4/P5qFQq5PN5QwAHYbHasVmtWBU7FkXn/u3byHYXhbJg
      dMBELBYhmuyl3aGytZckE89y8evnX3bYrzW6rtPR0UEoFHri97FYDIfDQT6fx+l0cuzYMdbW
      1vB6jYWwZ0KtFNHsLZw5c4YOewW7t4++3iOMDnZTzGbIZDJkogEylc8+lsHzw2q1YnvUq/Ex
      qqri9/vp6ur6ZBtXVVVJJpN0dXUZAngWTFYHlDKsr68TL5pwWW1UCmGC0RTxVI6e/j6aHBbD
      ifkVo1gsUqvVaGlpIRQKkc/nKZVKhMNhWltbMZvNRhboadSrZTTJjM1iolYuEEtkaOnowmk1
      kU1GqWCj1WkimsjgcjpxeJqoFSs43Y7X7hngVcgCZTIZ/H4/1WqVrq4uIpEIx48fx+l0omka
      29vbjI2Nsb29TU9PDzabzRCAQWN4FQTwOB8vzHk8nqeWrT8hgGw2S7X6ehdPvQx0Xf9SOMNV
      KhUcjsO1KbcxA7wCGKUQL48D0qA6aw9usrARQre18L1vvcXSzd+wGcowcu6rnB9rZ+nuByzE
      zPz5d68yf/13bEWyxENBLn3/v+fMcHsDQhNEfeus7oZR7C1cOHMSi+mPP7NHfX48gwPY/uir
      X3D03B7/7foKzQ4z46cu0dPy6dGD29u0DQ1jkxt/px/aWmA9mMWsKAwfO4k5t8v8bhq71cLE
      5Gm8bivp8AZrEYmLp0dRc2FurMb5ysUpCsFVCk1HyW/fIpbTsLpamJo8iu01doYDqKpl4gU/
      LmsrHruXYjVDtpKkyz10UBZIx9U2xA9+/GPqmw9YC65yazXPj370HW78/GfksnHixRKb6zsI
      SeHMm9/gP/3kB6ilPN3tjWqKrrO6GeHS1a9wbmocWWhsr85z4/pNksU6lUyCWDLG8roPXVEw
      oRHZ8zFz+wYbgThCaPjXF7h2/TbB+Beo76nmaRme5u2336a72UoiuMn1m3fIVTTy6RSLc3d4
      sLKD1mhnOBVOn7vE+eP97AQiVCtlxqYucnZyBN/uDkIIQuE09WqKuq6jVQvIWomdcJ5aYd8Z
      Ll+FC5cuc7THxsLa671DjBA64dw2VpMTf3qJQjXNRnwGEGwl5w4SgIme3nZu//s/ke88Ro+a
      RXJ3YLW6sIo8VVsXZ46PYHrsAhhb+C360Ft0uxq1tmbh6BEv7//+d6xsh9HUGuF0iYsXppi/
      d59SIsD9ZT9Dw/0Etrepo7G6tMHE9Dkye1ukQhuEak1cPNvP7kb0C4wvWJ+/wwcffEA4lmB+
      NUBXm53rt2ZAq9E7Po2nEmI7UWrQ591nvyHmJtfur9Lf04nQNWLhPfaCYVxNrQitREnYmeyw
      sZPcX3jw9o+TDa5Tf7wOzXCGA/ad4YZaT+C2tiBLCsVqlq6mI/R6xqip5YMEIPjdf/k/SbiP
      89d/9V0cnhao5NGFhios2P5wLzhR459/fo8fffdKA0MXdAwd55tfexc5FSBaqOJyu1HMTuwW
      ECgcnZzEYf70IzS1duC0WrHZFGrlIt6uHmRF+YIpSYnxUxd5++23abZWUVUFxeLm9OQYKHbc
      DjNtLS4q1cZWP+43xFzhjUsnCQVCgEAtZ1jeTjHU304+uEEgGmcpEMe/ubkfqWKh3+vAH32y
      YUcrp9AUd0PjO4xkyjE2ErOMes9gViyPvSId8Ayg5bi3GuGIeYV//tkWb37jqxxx3eNv/+Zv
      OHLl22jRdX71m2skY2F+c/0Bbx6xIA1fYMDdyMoKlYd37pCuqGiyjRG7hYXNJZKREN1jZzCR
      xPyoK91qsyEhYbXtfziLxYanq4eVG79nz6YjzCOff3jFjO2RuOyudprtK+z4/HT0W3DbBfc+
      +pC6buHNNxvrhy9rFWbu3sJEnc4jJzGrVQZ6jnJqJMnc/ApWXeM7f/YuVkmwOPuAumzGokh4
      B0ZYXZjDrICilbhz6yayYmXqzOmGxnfY0HWN7eQ8gy0nqGll3NZWliI3EEJgUayHJwukVsos
      bW5xanLymd5fL6VZWN5Gq+dxdk9xfKj1OUf4xTGyQM8P/dEzQF2roEgmuptGKKsFsuU43U2H
      aIskIQSqqmI2P9tevELXKBYK6JIJl8vJsyRsPq4VedHUarVD3xCj6/onC0+HiUMjgBdBrVZ7
      Kc5wXwZ0XadYLOJ2H65nDkMAB/DJaZEkJCEe24T6+Vb5fNa/Y98Z7tPYPq7A+/T3EvD4MV6c
      M9yrVArxrBj9AAeRWOF//42f/+Evv4lNlPnXv/97Rt75CZN9z/ced/3BR+ykdCyiSuvwKZqL
      a8wGdTxmld6JaY4OeAms3OSuT+bH37pELbbGf73m489/9A0Kax+S7Hib5Nx/o6I0o6s6Jy9c
      pus1d4bbTvhYjqzhdbVxbuA0D/YWCGejnOieMARwIJLEQJ+XSDxPuzmN29uHSRaEtpZYD8Sx
      NXdzccTN3c0kQpc4Oz2JuQHF5Yrdw8Urk4jEBmu5Cq1mG9MXp+lzVJhbCyD624jlFI60QaGu
      YwEmxnpYXd+j7+NjONt44/xVTFqam7ObdF0++acHdkgRCCwmC986/lU+2rxFspiix9PFmb6T
      /NvCr41+gKfh7egiGYsQCUTpGdj31zFbbSiyRGBtnbJaIV6SOT99oiFffni0RdKNj3i4HcXb
      3IRerzBz833evzFL3+DII2c4mS63YGknBYCztR+5ECL3H5zh3JjE692lI0syvc1dbCV2AEG7
      q40Ol5dbO/cZ6zhiCOBpKI5mlFqSWNVMmwXQVdZ3Ipy/dBGvw4wGdHZ3ozSwJkixe7h09Stc
      OTtBeC+CbLYxfe4CbouMQCe0toG5yUai7iQf3ti/25cURoa62NoJfnIcIQTR3TWsrT0HjvU6
      IIRgfm+JQrXIu+NvIkkSH2zcYLCtnxPdR41boAOxt9GlWHCZO0jjxW4u0Wp24ur2cP/+QzqG
      hrHYmun2NLIEb98Z7sGd65gsNo6fPIWpHEd3NTF06Tybu2EUdzdvjuxfudp2dtDtTrw2C66m
      fgaGhmm1g8Vj5/aN67R1D3JyrLuh8R02VF3lzu4sXU3tJAopjnaOsRbdpFwvE0gHjSyQQWMw
      skBfAqrVKrlc7mWHcSjRdZ1SqWQ4wx1mXtap+DKUQhzWlWBjBniMP1zkqpWzBGNlhga7nmuT
      ++PbLeUSQbb34pisLkZHh9EKcTZ8ESyOZsZHBzHJEpVCinge+rpb0St5/IkSw32dVPMJahYv
      lcQ2wXie1q5++jtbX8hC2OOf5TBhCOBABJHddR76S3T3dmCVdCrVGnVNx+l0IrQ6utDRhYLN
      +mz1Sc9CIhGno+8I1nKYB6s++k0JbN4xmrUY86u7nD02RHBng82URHfnedRchKWlIO6WNgit
      kvK+QTYQZOToFAnfKmv1UY72H6778kaiC53fLt8ilI2h6zp/ef7b/Gz215RrVS4MnzQEcBBC
      QDhd5/ywh710mX5CvL8Yx2utY2obxVPYYqdkZmLiBP0djROArtYIh/ZQqjnaukehkMTucOLG
      jalURQiVdMXMRJsgUVZpBobGRtld32DwUT+6JJtwuty0Tp3izt1VeI0FICHxztELmGQT/zL3
      OzZjPoba+nhj9Az/cP+XhgAOpBJhZXWXcr+T7J5E/0kHA6PHOdGrcPuOD+xmTkyfb2AH3D6S
      bKLF04pFlYnnS9i0Kg9u/BphbuFbX71MLbPL+vYepRaderWVq/2g2Dy0VuLEc1VMj21hJoSG
      EK/3Uo8kSWi6zj/N/opj3SOYFROtTg+yLGNWzIYADmJ7aZOv/eV/R59T5t71jyjrDhKRPVaT
      JezePpRKGYv5OZw+sW8vIrQqqmpFNluZvvoNiCyx4QujpKL82Y+/T4tZcPfWbTS8gMTgkSF+
      +29zDB8BvV5mL+CnmIzQdeT13iBPFzrvLV7jnYmLdDS1kSykub4xw2Bbj7FDzNPI5/O43G4k
      oFLMoxYiPNirM9zTTnenF7VSQrE5OcCo4nPxeBaonE8TT+eRTVY6OtqhXkaY7Y5+bY4AAB7W
      SURBVFgUyOXySLJM06OS43KhgMlqQhVm7BaFXCqGpamDej5OOl/B1dxGi9vxWu8TXNdU/v7O
      z5EkCZvZyrdPfoVZ3zK+VIivHrtsCOBZUUtpMpodr7uxK7/w5UiDvqoC+CwMATzGy9oi6cvg
      DCeEoFwuG85wBq8nRinElwyR2+OXszG+9dYZZFHn3ofv0zl1lcG2xrpA/CHBjXlWAinMJjNj
      k6cxZbeZ3Upit9o4cXoar9tGKrTGSljiyplx1GyQj5bjvHPlNIW9ZfKe4+Q2rhPJqtjcbZw+
      dRz7a+4MV6mXCGb9NNtbaXW0E84FKNeL9HgGjXLoA6nlqVSLRHM1asUMmWyBcrVONubn+kcf
      sRvJkI5FKdU1RK1IKNGYGqKyKjh76U0unxxkfSdIpVxiYvoKF6dG2NraRghBMJiiVk4+cobL
      g1pgK1SgmouRr0K2Krj8xpsc67Uyv+xvSFyHFV3o7KQ2sJpsrETnyVbSlGpFLIqN+/7rhgCe
      Rmd3H4lwkHg4QHvfICAoVeHclatE1hdR5BJLm2Gi/h0a5Y/1cUPM9QebDPV2AiDUGrFEgiZP
      K3o1hz+eo0XLshLOA9AxeJTs3ipl9dMgJEmiuWsIUUo2JrBDiizJTHScxGlx47I0YTc7GPEe
      RZYkzIrFEMDTsDW3oxfC+FIyfR4T6CpbvgBoVfLJHJJ3GGd+m/WURn97U0PG/Lgh5urZMXy7
      +3tdCaETC8dxuJ0ElhfoODKKu2+U+OYiApAUK8dHu1heD3xyHCEEwY1F7N7ehsR1WBFCsBZd
      IF1KcKr3AlbTfhav1dlBpV4yngEOxNFOr8WKy95HhlacphKyyU1Lv5f7s0sMTx7HCvT0tFHM
      tT7hk/qn0OxyMHf3Omari1OnppBLCXSni+FLl9n1B5G8A5wbGEAC3FYrwumgU1hxuHoZP3YC
      jxMcbW5u37xB18AoJ4e6GhPYIUXTVbaTazTZmokXIoy0H2MpPLt//mzNRhboT0Etprgzv8H0
      hQs4GqWAQ8phzQIZAniMl7UOAC+vF6FRGOsABl8YYyX45WE8BD8NtYI/FONFXiHSkV1u3LjB
      vdlFSnWNfDzAjRs3mHm4Rl3fj6ScjbHl349LK2dZ3d7fBKOSiZCpQHhnhZs3b7EZiBlbt34G
      hgCeRr3E8vou9WqJqqqj1yuUqhrlcpFUPEoqW2z4FyydzXN8+iIn+p3MLu+QTUboPXqO0U4L
      c0tbIAR7vh12dnfRdEE9H2Nna4tIrkYhukmsCMF4mjPnzmHK+VnajTU2wEOGEDq+5Ayr4d+z
      FHyPulbBl5zlge+f0IVuCOBZSOwu4EvVqCU2eejP8uD2hwTjKebnZqmqjW0C16sFlh7O8XAj
      RE/n/gOlJEnIigmL2YQQKpmqmfE2E9Hi/m1T/+gYe5sbPLYKgCQrDB0/SSkWamh8hw1Jkhls
      O8tIx1XMJge60Ohwj+CydQBGKcRTEYBiMgH1J35v87Rz4tgxVrQH6A2eAWSLg5HeYcyVGDvx
      DJ3SfkOMKjfzvW9dpZLcZMsXptIsqJaaeGMQFKubdkecaLqM9fGGGK2GzutdBgFQrKbwJ2cx
      m+yYZAuS8mlFrzEDHEA0sMXs3BLejk5sNjuBjSXmV7ae+7i6WiW0t0c4nkJWZGTTfkPM5fFm
      ltd9bGwn+LMffoc3v/YdPGocdd8ajr7hYUL+/YUwrVpgfW2N2ZlFekeHn3vMrzJC6EhIHO1+
      F5NsoVRLP/G6kQU6gHIhS6kOzZ4mZDQy6QwmixWzzYGk17FYbNTrVUxmC/Kf2HHyeBaoVimS
      K5SRFRNNTU2g1RCKFZMsKJcrIEk47PZH762gmBQ0FCwmmVIhi8nuQavkKJbr2JwunDbra90Q
      I4ROOLtCvhLHbWvH6xpmN3GPmlbCYWkxBPAqYKRBXx6GAB7jZS2ECSGMhbCXhCEAg4ZwWEsh
      jCzQ06jmubca5Oypo09kCxYWFzhxfBK5gbboH+NfnWEtmMMkSxw5MY01t8Xsdga7xcTR0+fp
      braTCCyxGJR46+Jx6pkAv52P8q23z5HzzZNrPkV27QPiRYHJ1sTZs6dxWl7zTJAQaJUgsq0b
      SVLQKyH0ehrFOW5kgZ6KXieZzlFI7JEsqqj5GHupMplM9rmtDteEwrnLb3J5ahhfMEqtVuPY
      2atcOXeCwM42QugEwzlkPUtV09FrRZzmOmuBDPVimlIdiprC1Tfe4ux4K/OLO88p0sOBEAKt
      sIKaugG6il6NoVeCSIoLLTtjCOBZKCSD+wIoxNhLlp/rWB83xHx4b4X+nk6EVse3tc765g6e
      tg6EWqSEk5OddrZiJQBa+8cphNaebMqRwNnWh1RJPdd4X3UkSUJxH0d2DAAgtDKSuQXZ3ouu
      5gwBHIQQAl3Xsdis+/suihdTsflxQ8w7b0wT9AVBknFYYDuQYaC3jYxvlUA0xrwvjm9jDQBJ
      tjDU6WYn+Fj3l4B6IY5uOVxuzc8b2d6HUHOo6Tug141ngIPwr82xEUgyduoiTXKKhzPXicgV
      WicGqLucz80t2iRq3Lt1DUWo9E1MY61r9LZOMDXcwdyDZawo/PB7X8MCLD2YpabYsEsy7b1j
      rC7MYTWBVVS5cf0jFLODs+fPPKdIDwdCCEQthqgl0StBZGsnkqkJJBOypc3IAhk0hlc1CySE
      QFRDCK0KkoRs7UbUk4CEZO0yBPA4mqYd+gWpl4WmaeRyOVpaWl52KJ8L4xboMXR935jW4POj
      6zrlchlZPlyPlcYMcAC1ahlV2z81ismC1fIs1wqBWtdQzKbnuqPMq4imaUSj0UNXCmHMAAcQ
      8W+yvr5BQW5hcvIEo/0dj72aZ3U5y9HjfX/wV2Vu31jhyttnXzsBvAoIIQiFQqiqysDAAJIk
      oes6e3t7lMtlbDYb7e3t7O3toWkauq4bAjiIgbGTWE0SaaWH0T4Pqw9uE0qXcHoH6LLFuHHD
      T1lcZKgN5lZ3UYWDt985+bLDfq2pVCqUSiWKxSIDA/t5f0mS6OzsxGKxMDMzQ1dXF+Pj44RC
      IYrForEO8Cyo5Txp4eDdd9/BVQ3TNDDO+NgU0yeGMZutWBSFwt42idrLjvT1xm634/V6n9io
      T5IkarUa8/Pz2O12LBYLmqYRDAbp7+83BPAsyCYT9VKRaq1GrqRhURTqagVd11lb3WLy/EX6
      2h1oRgLplcTtdjM5OUm1WqVUKpHNZrHZbFitVuMW6Gm4WjoxSXZks42psR7u3bnH0ImzOMwu
      Brt0Hq75GZsYZv7+LO394zSZzQwO9xj3/y+JbDZLIBAgl8sRDodJpVL09PQQjUaRJAmz2YzV
      asXn8zE4OLi/Pa2RBTJoBK9aFkhVVaLRKD09PU/du/gJAWSzWarV6gsJ0ODLha7rFAoF7I/a
      NQ8Lxgxg0BBe1VKIz+LAh+BSJsx7//av3FvaRheCuG+Fn//i1yRL+0961UKS+aUtdKBeSvP+
      ez/n9sPNhtqE1Iop7ty8weK6D+0pOo0F9mj0vCUqaa5du8a1a9cIZ55cHc4kEtSf03UjHd7m
      2rVr3JlZoFTTyMX8XLt2jXvzq584w5WyUTZ90UfOcBlWtvbdIMrpMJkKhLaXuH79Oht+wxnu
      szhAAHUezq9z8Z2vsfir/4+10C4//ZdrXD47yn/+v/6WUjbI3//d3/CPv7yOjsa//vRvaD12
      mfzC77i50Sgnsjq3bs1x4sx5vE0WNFWjkEsTi8aoqjparUqlWiGTLeBqbcGMoFIqkozHyJWq
      CCEo5tJEo3FK1S+Qn8xHUFvHuXLlCp0eK9VSnmgsQV0TRHx+Ysk4qWyh4SXSyUyWY6cvcLzX
      xr3FLTKJID0TZxlpNzGzsAFCENjeYmNra98ZLhdhfW2dcK5OIbxGpAD+aJLpc+eRMtss7EQb
      Gt9hQwidreh95nz/zszOLyjVcsz7f8MD33ushA7cIcbMpbfeohJeJS65sBf2MLWO0NoxiLMW
      o2Tv5cc/+CYuBUBiaKiP+TvX8Regu6VRe2gpdDRbuH9/FmF2IWs1bt++RTIe4s7sEln/Kr+/
      dY9ErsTCzCxV6tz64EPC8RizM/MUMyHuPlghEdtids73BcYX7G2tMDc3RypbYGl5hWQswOzS
      JqglorEkS/dvEyk0NvmvVYssLz5kYSP8yBlOQlYUzGYzZtO+M1y6auaY10TkkTPc0MQEvrWV
      J5zhTCYzoydPU4gEDhjpdUFiqH2aUwNfx2FpQkZmqv9rjHacR9fVgwQg2Lj9C3523cf/9L/8
      Na1OG5Ku7XeFIKM8/lCt6+z6QxybOkOvG4IN2isLJI6evcL5qQk2Zm+TKNVp7xng6IlTWLQi
      OjByfJrR/o5P0o6e9j5OHJ+kzSWRT4QZPHmRiYkhZO2LXKUlOnqHGR8fx6yl2N4IEEtk9zMK
      JifjRyc4M9FJLN3Y4jnZbOfIyBgjQ52kEhn0eoV7H/6Cn9/c4sTEEJXEFmvbQXaCeyws7bc7
      KtYmOhwq4fST3WpCr6GL1zvTLUkSml5jce992puGsJqdRLKbrEdu47K1HrAOoBf4f//hd7zz
      53/BxuICoxMj2Ep/x+9/V8HUN4W5EGFmfoloJMDihg+7zUp0b5d8UaP1mYrGngWVtYdLaGYL
      umLBJEMqsseSVgFHGzIVLE8Zy97SzsrCPQqeOjU6v1AENocTt9uNVoW29ia8HR3Y3W60eIrN
      lRWy0QQnLh79oh/wjyLUKuFQEKueA3MXsmLj/FvfQYkts7i2i5KJ8YM//yHNZsGta9epi3ZA
      YnDkCL/62R1GJ/b9RddWV6nkUvRPnGpofIcNIXS2YzOMdJ7DYWmirlVpdnTR0TTMA997B2SB
      dJVoJEKlrgEyHT09SNU88XSR9u5u5FqBSDyNAMx2N50tDqLROIq9iY5WT4OcyATVUoFsvoTN
      5cGh6Nyfm+PIyAStba1Iag1dMWNWZCqlMhaHjVqlhtVmpVapIFMnFM2gVSLEyt1cOv2HhWuf
      MbpWpayacFiVT2MplHF7WjFRI5MtYHG4aXLaG+q8Vi3lyeRLSIqZlpZmUKtgsmGSBaViGWQJ
      5yPvnWq5hGI2oQkTVrNMMZfG7GxBLWXIl6rYXR7cDtsLc4Z7FbNAmq6yHPwIXWiYFQtD3tP4
      kwvUtArdnrHDkwbVNZV0Lk/bMzZc6GqF5YfzlOUmTp86htlYnn2uvKoC+CwOjQBeBC/LGU7X
      dXS9sTbrLxohBJVKxVgIM/j8GN6gL4/XO0XwFETWz7/cjfC9r11AETVu/fY3dJ95i2Gv67mO
      G9yYZyOcwyTLDB09iSW/y/xuFrvFxPjkaTo8dpLBVVbDMlfOjlPPBvloKc67V0+T31ui0HSC
      7OYNEkWB2ebm1OlJHObX2xmuVCuym96izdlOh7OLaCFMtpJhpG3MKIc+kHoRIWpEM1WqhTTF
      cp1qTSUd2eXaRx+xuZdAVDL4wzEWF1epN+gOpqrLnD53mfPHB/GHYtSqVcZPXeT8qQkCft++
      3XckB1qWmq6j10rYlBpbwSz1YppiHUqqzMXLV5g64mFxxd+YwA4putDZy/rocHWxnVzHn9kh
      mPVjM9mZC903BPA0Orp6iEfDJIN7ePv6AYFAoaOzk9XZGWrlFHfn1ugfGcHcoDOpVXLcu3OT
      67Nr9HZ3IHSVPd82O7t+mpq9CK1EGQcnOqzsxPfz/q29o+TDm9T+QISGMxzIksx4+3GsJhuS
      JKPqKq0OL72efnKVrCGAp2HztKHmEgQLgp4mE+gaWzt+7E4XLkWmBgyOH8djNzdsTMXWxPmL
      V/jK5ZOE/WFAwiqrbAWy9Pe0kQtssBdLsBhIEtjaAEBSLAx0OPFFntz9RC0m0UxNDYvtMCKE
      IFaIsBSd53T3OYZajpCtpJnZu0VdrxnPAAeiWLFbLHiaBVGtF7O1gNVipiZr7OxsUxYKimLB
      YW3sKVREjdl7t1CESvfoFJa6Sm/vOCeH08w/XMGKxHf/7G3MwMr8PHXFglWS8XaPsL60gNUE
      ZlHhzq2byCY7p8+83gthutBZiDxg3HuMTCVNs72FZnsrpVqRFrvhDPdKYGSBnh+60AnlAtS0
      Goqk0NPUR7wYBSS63D2GAB5H13Xq9fpnv7HB1Ot1NE174eM2ko8bYpqaDtctl3EL9BiaplEu
      P1/78y8rH19HD9v11JgBnoLQNVRNYHqBTm+aWqeuaiDJWCxm0DVqdRXp0c/7Zk8amg4mkwK6
      Rl0TWMwmdE1FyCaEWkPVdBSTGZOivNa1QJ+FMQM8hejuQz54mOIn338X83PYDumPsblwm2Be
      waKXcPQeo628ycOYgsdUwzt0guNDHQRWbnPfL/Ojb12iFt/gH6/7+PEPvkFp/TrJjrdJzr+H
      sHmpVapMnLlAb8N6NA4fQghWIpushjdpdTbz5tgF1iJbrEQ2OdE9bgjgQIQgHCtzcshDslSn
      tRbhw/kdZLXG0OR57Hk/vnQRb+8EY32tDRtWsbmZnphEi62xWawjmaxMTk/T56gwtxZACC+x
      vMJIm0S+rmMFJsb6WV3zM/BIo4qjhenzlzDrGW7c36L3ylTD4jtsCATN9ia+f+rrvL92i2Am
      wnbCzw9OfxNVUw0BHITQ84RTJabGLCyv7nF1UKNrZIrJHplb9wJ4TSnaj5xjxNvYq+vHWyQ5
      rWa6hjvRUxVmbvyeFZuVsxevopViJHMaR7s0FrYSnGsFR2svIrJKVn7yQVo2uzDxetvVyZJM
      V1M7D4OrSBLU1DqBVIh/mv0lNrPNWAg7iOTGCo6uPoq6GzWzh8b+dFrMpJHsNiw2Jy1Nrqd6
      znwRPt4i6eLpI4SDMWSzjekLl/HaFWpqneD6Ns09XqrWTsrRzUeb9cmMDPewtbP3yXGEEIS2
      lrF5exoa32FDCMG93Xl0ofHVo2/gtrkY6xzmL859D10Y5rgHUrF38cbEICYJ2lw2KmqNneVZ
      it52Tp2apJZx0LDmt8fwOO3M3b2Oyepk6uQUcjmOcLoYvnSRbV8IuaWPi0ODSIDHbkd3OOgQ
      FhzuPkbGjtLsAHuLi9s3b9DRd4Sp0e7GB3mIUDWVGf8C7e42Qpko70xcoVgt81/u/Ss9nk4j
      C/Ss1DJBQjUPQx3Ptxr0sHJYs0CGAB7jZTXEfBn4eIcYp/NwZZwMAbwCGKUQLw/jIfgARCXD
      /Jpv/yFT6OyuLpEsPH/f1EzUz507d5h9uEK5rpFPBLlz5w7zSxufOMOVc3F29hKPnOFybPhC
      AFSyUbJViPjWuHP3LjvBhOEM9xkYAjiIQpil1W1SZR21kmN5cYF4rky9UiIei1Gs1KlVKqi6
      QOgq5WpjaohSmQwjx04x2mFhdnmXbCKEd3iS/haZ+eVtEILg7jab29v7znD5KBtrG8QKdQqR
      DaIFCEQSnJicQqR3WPbFGxLXYUUXOg9Cs/xu67f8+8Z7VNUqda3GPy78A5vJDUMAT6Orp5NY
      JE4uEaS5Y78hJhULEY3FuXfvAZnwOmvBDLnwDpuh9Gce71nQayU211dZ243S2b7vgGEymbFY
      rZhNyifOcONtJmKPfFoHxkbxr69/4gwnSTJmi4UjJ05SjAYbEtdhRUJiqmuKd498FZfVTV2v
      s5ZYY6B5EFmSjTTo03C3tZNPhqlSpb/LRVEIUvEY8XyNRCiL4+o3yd9dIuyA/rHhhowpm2z0
      dQxirsXZS+ewiCoPbvwaTWnmO9+4SjW1xeZuiEqLoFr28MbAvjOc1x4nlqlg8X56LKHX0Xm9
      +4ElSaKuqdwN3GC49Qg1tUq+msdja6ZcLxszwNOQTE7cpgwF4cYmAUInW67R3dWJ1SQjZBs9
      jgr+kp0me2OuJbpWJ5GIkcrkEIBssjJ99RtcGGlidSvAxlacb//wu7z5te/SVI+hCgCJ/iPD
      BP37/b9arcj21iZzM0v0jDRGmIcVXejMhR9wunuafk8/AoFJNrGb3iGQ9RtZoIMQapWKMGPS
      ytQlKxZJRZPMiFqRbLGG02HH7nSQ2JknbTnC0b4vXgf/eBaoWsqTzhWRTZb/4AxXLJaQZPlT
      Z7hSCcXyx5zh0uRLtRfuDPcqZoE0XeO67xq60LAoVs72nsNmspEqJdGFMATwp6CW0iztpjh5
      fORPmkqNNOjLwxDAY7yshTAhxKFrJPlDdF2nUqngeDQ7HRYMARg0hMNaCmFkgZ5GNc/Mepjp
      k+MvLFsQWH/AaiCDWZEZOTGNJbfN7HYKu8XCsdNn6fTYSe4tsxSSefP8UeqZPd5fiPL1r5wl
      718g13yS7PqHxPICi8PDmTNTr70zXLFWZCPx/7d3bk9NZVkc/s4lObkSQgiXoASwxJYZQTFq
      29pd0zM18zA1/TB/6rxN9ZRVXbbTikrEVhuVW0JA0CQnCcnJ5dz2PGBVy3SBVE0QGM/3fmqv
      h7Nq7fXbe//WMgORJFEtylJxCYEgqkU9FehAXItiuYpRfoNu2NiNIpuVFlubeZ49vs/TV3nc
      LhfQjiORufk1N6fHWS1s0em0+WL2FjdnvyC/tooQLptvagirgum4uGYDv9xhaaOG2ShjmNCw
      ZG7d/oaZiR6ePs91Nb7ThitcVkorDESSvNj+BcuxGI2PMhAZJF9Z9xLgMNRLBUqGjV1/S6HU
      IrfymjMXZ3HrW7St7iaA06rx4N5dfpj7hfTIMMKx2MitspJbpyeeRNhNDEJcGgyw/N4Zrv/s
      BXY2X9H50BlOgmhyFFrlrsZ32pAlmenUNBF/BEWSCfvDJEIJSkaJmdS0lwAH4QqBX/P/5kG8
      FuklFtLwa1rX11SCMb68/Q3ffn2FjfwmSBIKbV6t6YydSVJbf8n69jt+Xi+Sf/0S2HWGSw+E
      yW3ttUG0jTKO73TZlBwFWztbPC485kb6BpqqYTom9fYO/aF+rwfYj9ziE5YKRc7PfElU1nma
      vccmTfounsVn73rga4Hua+yK2+HhTz+iYpGavILfMhk9c5HZczrZ7HM04O/f/Rm/JHg2n8VU
      NDRkkiPnWfz5CX4F/G6Lez/eRVEDXL2e6W6ApwzbtXlUeMT08DTVVg1N1VgurTCeGEeWZU8F
      8ugOJ1UFcoXLmr5Gx+qgKCoTfeM0Og1iwRiy5CXAHlzXPfUHUseF67rUajXihxxhdVLwtkAf
      4DgOhmF88nVt2z711ohCCFqt1qk70PMqwEEIgeO6yIqypxF2HGd3/9ilBuDDqxCuY2M7LkjS
      +8HYLrbtIEkyqqogSRLCdXAEKIoCwsVxBKqqIFwHISkIx34ft4oiy5/1XaCP4VWAg2hX+Nfc
      Mn/5w/U9CfDT/ft89dWtvQPDu8Tqi4ds7Mhook04dYHe1govijI9qkV/eooLo/1svH7Mkw2J
      v/3pGmZxhX88WOe7v/6R5sp99P7b6M++x9X6sE2LyZmrDPWerusJ3UQIQbGR5209R9gfYywx
      TaGyyE67xFjCk0EPRTn/nLxuYpZWeFbYOdK1ZC3K5dkMF8aG6FgWsqoxNZPhRuYKzVoJIQSl
      usJYn0zD3hX+z58bYWnlV08gNRTn6rXr3L75e9ZerR1pvKcBTQ0zNXQb27XQjTe0bYPJgRsU
      9BdeAnwMSZKw2gYd28W1Whjto22Sd0ck3WexoNMXDePaHZ7O3eWHBwuMpMdxWiUqhktfwGZx
      bVf3D/YOozbfstPZOyNJ9oVRpc/bGU6SJHoCCd7Vc8CuVWJfcBhNDSJJspcA+2HbNka9RiAc
      QZEkbNtG17vz7PEgdkck3eTapXG2t4rIqsal2QzxgILlOGwtrxJJ9tJU4zTfre5+JCmMp4fI
      vX8cD4AQvM29RusbOvKYTzJCCArVlzjC5nzyGn4lSMuqI4SLKxyvB9iP7bVF8mWT2cszBESD
      tfknuLEYI31BXO3skTWWPeEAz7IPUP0hpqZ+h9Iu4YajpDNXyRW2kWIpMulRZCAWLOCGQvQL
      H6FIivT4OXqDEOgN8ejhHP3DaaYmPu8EcIXDRmWRiBan3i4z0T9LXn9OySiQik16KtBJwHsQ
      c3x4FeADjutBjOM4/xfnAO12G9ft0sDkT4RXATy6wkm9CvExvAqwD/lXT3mjNwFIpCaYTA8e
      4iubd9s1kkOJTzZSyeN/w1OB9mFk4iJnEkEiyXHGR/qxzTblcpmO5dBs5Pn+n3NUdwwc20Qv
      l9gxWoDJ65c5vJJ6PFiWRTabZX5+fs/Qvmw2y8LCAktLS9i2zerqKnfu3MG2bS8B9kP1+fH7
      VHx+P6pkk300R6FQ4MFclmq1RqVSRq81MCrvWN98w/y/H2J4f/6xIoRgaGhoTx8ihMAwDCKR
      CMPDw8iyTDweR1V3Nz9eAhwCu93EDcaZuTzDQKhDIJEiNTzGxNlB6lUdvaxTeVug2j7uSD9v
      /H4/2n89UpIkiUwmQzKZZGFhgU6nQyTy64wHLwEOgRoIQbPC4uIiRcNHRAvQamxS2CpRrtQZ
      Sg0TDfk8J+YTRqPRwDRNLMsiGo3i8/l+o1J5KtAB2GYbBxXNr2K1DUr6DrFEkpCmUq8U6aAR
      C6mU9B1CoSChaBSz2SEUCX52TfBJUIGq1Srr6+uYpsng4CDb29tMTU1RqVSo1Wr09vaSTCZZ
      Xl7GMAx6enr4D0RV5Zd9kWMVAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Sheet 10' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Sheet 21' width='192'>
      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
      SUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Sheet 22' width='192'>
      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
      AAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Sheet 23' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAABJ0AAASdAHeZh94
      AAAd+UlEQVR4nO2d2XNc153fP/fe3tGNfSd2kAQXUBJFirJpWbKkoT2alCcz46kZeyoPk0rl
      JZWqpCpV+TfykJe4UvFUKpPUTJx4y1iekiXLm0ayTXEFSKzEvjWA7kbvt++WBywGSTQINPre
      vmSfzwvZQPfv/tDn/u75fc85v3Mky7IsBIIqRa60AwJBJbEtAEzTJJPJ2GVeICgLtvYApmna
      aV7wwmNx9+anPJic2ftJMr6JqpfvvvKUzZJAUGa25u6wKbfz9uk+Jh/cZWopjrk5Q82Za4QL
      cRIq9JxqZmr8Eb0DXaytRGlrb2NsYpZAwM/1q0PMb/l4+XRH0WsIDSBwLbLHi1ZQMQyVyYlp
      Hj2aoqm1ndMDnfzu5l0Uj4egksFnqdx9OMMXL5/m9q27RNoHuH6pi7/97s/o7Wo59BqiBxC4
      lsipi/TG7zA9H6W3r5eW3tOc72tnamWDr954k62Ch4JmMbea4Ot/+kfcHp/lvfdukDP9ROr9
      tLaMU+c//BaX7BoG3RXBkUjEDvOCE6CqKn6/v9JulIWN6Co5Q6G74/En/VYsihSoozZ0+N8p
      UqB95DIpVlZXKegGsY0osUQKC8imUxgWZDNpDNNCVVUyqS2iGzGex2kUVVUr7UJRtEKOfEHf
      8dFicz1KTtXIZ9NohrXnezqZYGU1Sm19Ax508gVt++epFFgmiq+G2oCCqumsr62SyuQOvJ5I
      gfaxurxCuD7CxOQsej5FKODB6x9ifvweNZ3D5DamCDZ2k0ttYmk6Tc0NTM1mOdPfVWnXXxg2
      oqtE4wV8XouIT8YM1rMwNkYoICH76tHUFOfPnWdlZZWG+iA3P52ibaCPzalphnqa+M3tGd66
      /hI3f3eT1189y2wS8mub1ATWMM8MU+dXHrue6AH2YWgqK6vrBIIBMslNYikNj5EmmjRYXpjG
      H27EyMTRLVA8XlraT2Fq2Uq7/WIhKTTUeIil8qRVne72FsJeD5avBkXPUNgZAdXyWVbW4oRq
      fMw/miIQrmd6ep6AlGVlM0VXTw8Ls/MABGvC9J5qJJ58uucTAbAPn9+PoigossSpvjN0tURY
      Wd3gtS+9QXdbE16fn57uDjLZApKlMfbwAQ0txYfYBMfH6/PTdqobs5Cjq62JeyOjaB4/Yb+f
      vv4eUsntyVX/Tlv5/EFeeuUVjHwaf10z1994AyObIlgToSYUwO/1koyvMbmcoas59NT19kSw
      qqplzWctyyKbzVJTU1M2m4LykE6nCYfDlXbDFexpAEmSymbUsixM09z7dz+ljkB88sknXL9+
      /VA/TdNElu3p1OyybVkWlmXZYruYz6Zplq1dTuKHG2zvBYDP5zv6pyyLuUeTZAyF/o5GpmaX
      6Bs8g6bm0PI5mtvb8e3c/KHQ492OLMsEAoFjObl7k4RCoUMDQNd1PB57dL1dtncfEoqiPPvN
      x6SYz7qul6VdTuqHG2yXGDoGyVSOXCbNwvI6584NsrK0zNTYXdKahHLITWoYxrGvZtcTUvB7
      SmmXF4HS7irTwFS81CgSmmVSKBRAkqgJRyioKuUeGbfrCSkQlNZ3yD5a60NkDIWB9kZm5pbo
      7e9HU5sxdBXDtIpGVilaYzfPK6dOETxOtX63pQWAJNHR3bf3cmjoLAABnxfYHl0wzYP7gVJS
      mUKhgNfrPfbnBEenWlNMx//qUmoEcrncU6JNUF6qtXbD8QAoZa4hn8/bNkIh2OZ5XNNUDhwP
      gFJyzWw2KwLAZqpVAzgeAKXkmvl8nmAwaIM3gl2EBnCIUnLNF2n9ulsRGsAhSsk1RQDYj9AA
      DlFKrimGQe1HaACnLlhCrmnnWhLBNkIDOMRxc03LssQyCAeoVg3g+GP1qLmmaVpMLG5SG/SK
      AHCAatUArs0r3v9skrqwn3+6u0aLR6+0O4IXFMdToKM+zaOJDF8a7mG4v5lsoTq7Zyep1l62
      tB7ANJienmI9lmLodDcLS2t09Q2iF3Ko2Qyd3T0UG1M4aq757pUB/uYnd9ByKa4NtJbkpuDo
      VKsGKHljLMsymZiYwiNL9A10M/1ohdWFcXrOX6O3vQFd18lkMk/VnuZyuWPN6s7Pz5PL5Rga
      Gnrmew3DsO1JZqdtu0oGi/mcSqWe2rDsuO1SDj/cYLtkDZBYW6S+tYvs+jzJZApkhc7uXtLx
      Teho3N5dQVGeGr6UZfmZQ5qWZbG8kaKxNoimaYTD4SMPg9o5XGpXSaQkSbbdIAf5XGq7lNsP
      N9gu+ZO+cCP14RBW7SBz88sM9ndvV4OZ+qEFMUdp6B9/OokiSyysJznfbDA02FCqm4IjUq0a
      oOR+tyYcRgJkxUt/fy+KLBMMBgnVRPDIh+/c8CyiiQx/+PppLva1MjUfFStBHaBaNYAr5wGu
      DnXynfdvEwr46GuLiFlgBxDzAC7ipcE2XhpsA+Djjz8W64AEtuHaeYBdxDogZxAawCGO29Xu
      jpII7KVaUyBXL4azc/xY8DjVKoJdvQa2UCiIQhiBrbi6HkBV1ePtWSooGVEP4EJEKaTAblyt
      AcR+QM4hNIALEduhCOzG1RpAbIjlHEIDuBDRAwjsxtUaQAyDOofQAC7DsiwMwxCzwAJbKTkA
      kvF1pmYW0NQsExOTqJpOKp0mEYthHDKtfpxcU5wM4xzVqgFKW2Vm6Tx8OEFTRw8Lcwt0drYx
      N7eEocaR/I3UNTRg7gTBQWtMjrruZHcd0HHWqdi5psUO27sHANrld7Hv/yTtUi4/3GC7xAAw
      8YXq8RcyxEzo8fvBMknE47R0t+05ddBxnLquHynfLPb5wzBN07aUyS7bu3+nHbaL2T3o+Nqj
      tks5/XCD7RLPCPPS1hgkkTM5c6qRh2PT9A2eprm5Hk3NYVjbXaosy0+lMAf97CAKhQI+n+9Y
      KZCdu8jZZdvOmuBiPp+kXcrphxtsl7jQXqKzZ4DOnVeXLjVu/ycUALbrd096RpiqquJYJAep
      Vg3g2t2hc7mcGAJ1kGodbXM8AI56IHM2mxWTYA4iDsp2GaqqigAQ2I5r1wKJlaDOIjSAQxw1
      1xQL4ZxFaACHOGquKRbCOYvQAC5D0zSxH5DAdlyZAlXrFh2VRKRATl3wCGJLnAvmPEIEO8RR
      ck3DMKq2QSqF0AAuQgSAwClcqQEKhYIYAnUYoQGcuuARnuxiDsB5qrXHdWVNsJgFdh5RE+wQ
      RxnizOfzYim0w1Tr0HPJG++P3P0cT00jLTUeFtY2ae/qxSjkyaZTDJw5U/SY1KPkmtlslqam
      plJdE5RAtWqAEgPAwu/zk0qn2TADvPTSeaamllieGWHw1beRAd0wMAwDXX/6lPeDfrafXC6H
      oijPfN+T2DmUZ6dt0zRteQIX87nUdim3H26wXXJNcDBcSyq7gU/x82h6Fm+wlt6hYRKr83Q2
      XSh6TGqhUHjmiS+maRIKhUo6Gcatx3EWwy3HpB6lXcrthxtsl/ZJSaG5uYnG5laCAR/pdJZw
      uGY7Gi0LSQKKPNCO8qQT26I7j9AAxyQQrNn7fySyfRr8/kg0i3yhR8k17To5XVCcatUArpsH
      sHMLDUFxqvWB47p5AF3XxTLoCiDmARziWbmmOBa1MlSrBnBdv7e7IZZA4ASuOyhbLIOoDNVa
      f+E6DSCWQVQGoQEc4lm5ZjabFTvCVQChAVyC2A1C4CSu0wCqqgoNUAGEBnCIZ+WamqZVbWNU
      EqEBHELMA7gToQFcgmmaIgAEjlE0AFRVJZWIoerl7Rqfld7sLg8WOEu1pp1FH7W3Pv+MzfUN
      WrrO8vqVS2W74GFdra7rVbsoq9JUawpUNADCfh9dV19HVsIH/t40CjwYn2Gwu5Wp2SX6Bk+j
      qTkK+Rwt7R1FSyIPE1tiO5TKUa0iuGgALC4uEWw6RVvDQTekxdyjR2imxfLqBufPDfJodoVY
      dJbWngvIgLFzwuOTJWsH/WyX3VLIUsvcDrN9UuyyfdCJjeWimM/GTrnqUd5rpx9usF00AJrq
      QzwYHcGSrhLpfTwITL1AIpUhurGJt7OLvKqCJFNX30A+lwN+f0rkkymNx+MpmuYUCgWCwWDJ
      aZBlWbalUHbZ3k097LJ9kN3jtotdfrjBdtEASOd12tpa2Fxd5kxv62O/kz1+Lr96hUQiQU3Q
      x8zcEr39/RTUJky9sH1M6s57DxK0xUTu7smQJxHBdgpou2xLkmSr7aNe73n87k5q+8DQsSyL
      vt4+ludXGDx/ruiH6+vr8fpDnD17Br/XQyQcpq6+EY9c3KHDunuxErRyVKsGODAAJkdu8v6H
      v0SSNMbGZsp6wWLDbZZlsbIeQ/aIWoBKUK3DoAcGwNlLr3Fl+Cw+b4ie3s6D3lIyxZ40P78z
      xyd3HvGjTx8RT+XKek3BsxE9wBNsbm7S0tlNja+84qXYePPMSpw3LnVx7UI3U0vxsl5T8Gyq
      dR6giAYwqa+vI5ZIoijOTEy9dq6T//fJGHenowz3tzhyTYHgwLv71qe/INjcS3PQYnZpvawX
      LJZrDve38oevn+av33uFoF/sCuE0QgPsw+v1kstlyKsqnjJvUXJQrmmaFsmsiiU2xKoY1aoB
      DpwHuHT1Omsry0i+07Q2NZT1gk/mmqZp8b8/HkWWYGp8hRs3xGK4SlCtGuDAAJAkmfbOLkcc
      2MrkMUwLVStw99EGqVyB2pCoCRY4Q8VLIutqAsyvJViPJbgw0Mkv7sw57ZIAoQEc48muVpYl
      3nqlj+aIj9amOlrrxZYolUCkQA5xkNj6wsUuUrFVpMYg186fctolAdUrgl0x5CJLEi0RL3em
      N/j2jz4nlVUr7ZKgSnDN9ugf/GaCN14eoCES4Ie/HnfYK0G1Dj9XtPo8p2r83188pKAZ3Bpf
      ZDblIxgI8tbl3kq6JagiSgx7i7npCUbHJskm49y/P0IqmycWT7C2soxxiKDan2t+OrrI9eFu
      Xr9wipX1OLG0hmGZFDT7DlUTHEy1aoASewCJxqZGNmeWWVhZ59y5QWZmV4ivz9PcfY5WjlYS
      2dNay6ejC/i8HryKxPBAK/NrW3Q1R0oqc3Nz6V0xKlESedxSVbv8cIPtkk+JVHxB/BhopkGh
      sF0SGamtpZDfXsosSdIzS+8GTzXiURT+5ie3OdPdzJsv93J/eo0vXOymlMlgO88Ws8u2nSWR
      xXzebZv92FkS6eZ2KVkDbEZX8dc10dPZxMzcMr39/WiFJkxtpyRy5w5+Vund7akV/uoPhvm7
      783yw1+N8R++eR35kIqyw7C7tPB5s31Y6aOTJZFu/u5KCx1JprtvkNMDPfgCNQwNnSHg2ymJ
      bDheSeRqLMPffXiP3z5c4YvD3Xzwu2k0XWgAp6lWDVDxsS+PLHPlbBvICl+40EVNwEe+YM+J
      5QLBk1R8HqCjKcxvR+cJBYP8rw/v09ZYQzgo6oKdRswDVIjWhhouDzbzjS92c2tR5yuv9FXa
      JUEVUfHzAbpaavnNyCyfjK5wqqXWaXcEOwgNUCE+n1ihoKqsbqk0RMSeQAJnqbgG+N3DJZY3
      EsTSGhMLMafdEexQrRrA8b/6yTHbZFalIeRBUTxML8Wqdl16panWMlTHA+DJaet//fUrrG4m
      iWc02pvCjMyUdxcKwdGwa6mC26l4v3e+p5kzp+r5939xnW+8eZ7pJZEGCZzD8WHQ/bmmaVr8
      93+8w+/Glln8+3/i6lAn//K9y067JEBoAMfYn2veHF/m09EFvvnuMDV+H8P9rWIkqEIIDeAQ
      +3NNRZbwKvDR7Xl62+t4+3Kf0+4IdqhWDVDRmeBXz3YQS5zh3j2Vf/OXX8Trqc6tOQSVo6Ip
      UE7VmVpYJ5nTSKTzTrsi2IdIgY5JMr7O/NIapqExMzuHYZrk8nky6RTmIWP5u2IrGs/wH//L
      T7n5cJ4vvtTPz26V9yAOwfEQIvhYWOiWh2xig6nJKerrQkzPLrK8OMvsYvTQp8lurvnRrRn+
      5Mvn6G2p4QefTNPZLNYBVRKhAY6JmkkQrG9GzyaprY2wvpFmaX6G7vPXwLL2juLU9cfX9pum
      ia7rnDnVwEefPyIW3+LtK+d4Y7jrqfceFzsb0U7bpmnaMgNezOfD2sUO3NwuJdYEG6yubRAI
      N9DRUsvIyATd/QPU10dQcykMqxFFUVAUBY/n8Uvs/VxRkGWF8z2NfPX1Ibze8ujxJ69XTuyw
      bVnbu2HbtTfnQT4Xa5fn7bsrh+3SPil5uHz1tb2X9U1tO/8LA83A9iTXQciyzPzaFnNrW/z1
      ey/zn/7bd/H5RAFMpREawCFM08S0tucAFFlGskxbnw6Co1Gt9QCO33mWZdHXXsfGVpaf35nl
      taEOEQAuoFpX4VZkHkCSJF4718mfvXmecNBbtXvTuwkxD+DUBfflmpZlVe2Tx20IDeAQ+3NN
      TdPwlvkQPkFpVKsGqNgJMZYF0ViS5VhObITlAqqxJzZNs3JrgTL5An//4V0KJnzvlw+ddkPw
      BNWkASzLYnFxkQ8++KByBTGxZI7GsJerp9v5zVzBaTcET1ANGsAwDObm5piZmaG+vp633nqr
      cmeEdbfWYuoFvv3je7zx2iUM00SpgkZwKy+yBtA0jampKWZnZ+nr6+PLX/7y3uRrReYBYLvL
      7W2pwR8I0tNWx4c3Z/jatUGn3RHs8KJpAMuyyOfzTE5Osr6+Tnd3Nzdu3HhqzqmiM1Brm1u8
      NHyBwZ42fvgrcS6Y4OTs3vj3798nHo9z/vx5hoeHi6Z4jgfA/kmvzsYA9x5tcGs6xh9/achp
      VwT7eN4nIy3LYmtri4cPH5LP5zl37hzXrl175ucqek6waRj85buXxFyAC3ieNcDGxgajo6MA
      XLp0iYaGhiOPalVMA+wuA66G0YfngedNA+w+8e/du4fP5+OVV16hrq7u2HYqqgEMwxABIDg2
      sViMu3fvIssyw8PDNDU1lWyr5ABYmH7Ilu6nJQjLmwma2rswtRyZZJpzFy9QrAPazTX3jwYJ
      Ko/bNYBpmiwvLzM5OUkwGOTq1auEw+EKVYQBnT0D5OYWSakWL798kampJZZm7nP6yrvIgF6k
      JFLXdXRd33O8nGV4bi69Oww3lETutosdnOS7M02TxcVFxsfHaWho4MqVK4RCoT27FQoAk/mZ
      aRYW1zk72M29uw9o6uhi4MJlUquzGI0Xi5ZESpKEx+Mhn88TCoXKXgvg1tK7YrilJHK3Xezi
      INsrmyk+HV3k6rlOelofz991XWd6epq5uTk6Ozt5++23CQQO3jXQ+ZJIZPrPXqD/7Par7t59
      v+re/qdYSeQu+XyeYDBY2uUFzz2abvD+Z5P82Zvn+cGvxvjmu8ME/V40TWN8fJzFxUV6e3t5
      55137A1M2ywXYfdJl8vlika0wHmc1gCWtdPrKAqyLJPJZHgwMk0sFuPs2bPcuHHDEZ8qNgy6
      mwIJ3IHTw6A+r8I7r/bz3Y9uE9Di3L29wdDQEJcvX3Z0ZLBiE2G5XI5IJOL05QVFcHIizLIs
      YrEY8xOjDNZaXLx4laampoqMCFZsHkCkQNWHZVlEo1EePnyIx+PZm7WtJBWrB1BVVQSAi7Az
      7TBNk7m5OSYmJmhoaODatWsEg0FXzAFVrAdQVRW/31+pywscQNd15ubmmJ6epqWlhTfeeMN1
      I38V0QBiFth9lFMD6LrO2NgYCwsLewUobrvxd6lID/C8LbwSHI18Ps/4+DjRaJS+vj6+9rWv
      IcuybTPM5aAiGsAwDLEE2mWcRAPMLK7xne9+QC6X4Vtff5s33/oKft/z0b4V6QFM0xSrQJ9j
      LMvisweLLK2s0+LL8OHNKf7Vn9/gwXKWD+5GuTOf5S/evkgk5P5NjyuyMVahUBD7gbqMJzXA
      r+7N8533b3P/0dpT7/3tvSl+9tHP8BY2mE54+KOv3eD2bIqPPp/lW+8Oc3Wog4mFDadcPxEV
      uQtVVXWtKBJAPJVjLZ7mG2+e529/ep+g38unIws0BXQCxhariQKvXr3K5aFePr4zyxcunCIa
      z1AbDvCr+/NousE33xmu9J9xJCqiAcQkmPuQZZmcqlHQTT4fX+F7vxzj//z8AVgW9x+M8+Uz
      NYzMG/zVH7/DV1ob+Gx0kd88XOKff2kISZJoawzT2lCDqhl4FBmP8nykuBXpAXK5nOgBXMb0
      coL//P3PSaTzqJqOZJkY2U08WppMXSPLeg8tXbXUR8LIksT14e6nbEiSRMD3fKW2FdEA+Xxe
      9AAuIplR+fY/3GE1liaby5NYm2f10X0yeR2lcYB/+y/+GaoOX706QPg5ELbH4cThmtxcY2Zx
      la6+AXQ1Tz6bpqu3r2hJJIhlEG7j49uzPFpYI725jJbPUtPYTmP7dpHHUG8La/EM/+7PXycS
      evFm7k8cAOuxFMPDQ0xPL7O6ME7vxS/slUSqqoosy8iyjCRJGIaBpmmkUilM0ySTyQDs7Q6x
      W95W6mtN0/auJcvy3qzzSV/vXqNQKOy9VhTlsd+X8tqyrO0jo0wTr9e79/rJ3x/0encY+bDX
      hmHszbbv/72qqmQyGSRJIpPJ8Otf/xojsUgg0kpdez+yLNFcG+ClgWbee/0sHU01WJZONmuU
      9D3utku5vrcn20VV1ZLb+MQBoGAQiyWQvF5O9Q6QjK1DWz2KouD3+6mpqXns/fl8HkmSiEQi
      ZZ8M83g8tg2v6rpuW0mkaZq2FH8U81nXdXK5HKOjoyiKwre+/hU6RlbJqgZ14QBfGu7mQl9L
      2fJ5N7fLib3qHRhgcXmNgd5TaAUNy9QxrOLiYreQWcwEV45bt27h9Xq5fPkytbXbB5QP9bU/
      9bCqBk4cAJLipbu7CwAl4Ae288TDaoKf513IXgRefvnlY+2e9iJTkVEgMQtcWTwez1M3f7UG
      g+MBYBiGOBjbhVTr2izH/+p8Pi96ABdi58ZfbsbxACgUCqIHELiGvUdxuYsWLMs6cAu+3Ukw
      O4okntetEQ3DqPjWiKZpunJrRLttS9bON5/NZsvaCJZlkcvlntr7x85aAGH7aHYzmcxTQ57P
      499XDtt7PUC5N6nanXETX/ThWJaFZVmOBoBhGKJddqjYtijC9jaSJNk2BHkcn5/H764cth0R
      waahMfZghMXVDaYnHpDTTFYXJlnZzJzYtpbPcH90DIDR0REsy+L+nbuUI5tNxtYZHR1hI5Fm
      dHR0z3Y5MtrFuWlGRh8Qjy4zs7KBkU9zf2y6DJYhl4wxPrPA/PRDkjmd2Oos86uJp95nmQbj
      D0aYX44yM/mQjGqwvjTN0nrqxD7oao57I9sHoO+2y0iZ2iWd2GB0dIRoPMXy7DimlufeaGmH
      LDoSANlElNq2AbKpOKaWZy26STKxSTKVP7FtS1LwyNvaJbmxxlYyQXRji3LMNYfrm+horied
      yZJYXyOVjBGNpctiu76uHkNTyaYzbMYTRKPrFFT1xHYty2R+OYqhptEMk421VeLxTTLp3FPv
      VZNrBJr7yGe2MPQC0eg6W1ubJJNlaBdkPDt3Vya2TjyZZG0tVpaHR6i2kVOtTWSyWR6t59lc
      XyOT10qy5UgAyIpCQc1tL1wK1ZOLzeOvqS+LbZ8/sLf0urW9hQcj47S0tpTFdjy6TMrw0dvR
      TEdHE/dHpmltaSyLbcUfoi7kIZvXqfHJrGcNQr6TN0chvUk6r7G0vIqlBDHUBJLnYH0nKV60
      nXZRAhEKyVW8gfLs1+r1+5F3Gqa5rYWJkVGa29vKYntrY4W4KtPX2UpQizO/maM+VFo274gG
      CNa1oiRm6OjqxSsZ6LURguEIqnby3DcZi6LpOqsbCdpO9RNpyBH0+8vyh5lAZmuTWChE66lB
      wg1Zgn4/5Vi3ubUZRffU0tXZiOzzkkwV8HlOPgrnj7Rw5ZUWtra2UBQZS8vjCdVSKDzdb/nC
      zQRiMzSe6sEnm5iFCL5whDJ0RKTiG2i6zko0RmtnL+H6MraLJZFLxdhMhDh78SXyuozPU9q9
      tDcMWm521/uLHaDdRzKZ3FsFWu1U5wIQgWAHEQCCqkYEQBG0Qp5kKo3YxdRd6AWVrWT52kUE
      wAFYps5Pfvw+q6vrZFMx7o1OoKkZbt++y+zUHf7H//wRanUunqwwJv/4/j+wuholl0lwd2SM
      rdg69x5M8NlPv89PPxvluIpWBMABmOYWkreZs2f6+eijX9BgrfOD93/J4noMbzBAe2cPfnef
      K/2CksaggaGzA3z0049p9Sb5r9//LYnEFsFAgN6B0xx3Ul0EwAHISgM13hQ3b43Q1lLPw/lN
      zl8cwqfF2UwppGKLogeoCBHqQnl+e/MebW2NjDxa4/prZ1lfmiHY2Mbc1PixewAxDFqFiGHQ
      3yN6AEFV8/8BZbQ0uo09XEoAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Sheet 24' width='192'>
      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
      7QAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Sheet 25' width='192'>
      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
      ZgcPQwQAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Sheet 26' width='192'>
      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
      kozLdv95NYFgeydSMX9gdsfp8eOxq5Qlabdu7S7KoogsKSiKjFgqYbXa6OrqJPdQfStymbbu
      fsRCjqHRC3S5ZbYKCmKxiKIKu/UlydgdTtpbPOQKpSfa12KxUC6XkGT5vl4aJemomRmN4fMT
      tNhUsmL5ftlWZLlEWZaxO9y0+RzkHwl8t9kd2Ky7TVmSZUqSjA2FYrGA4HBRLt2va48fjx3K
      8gMdnPc3YSq4eO65abaT67ub6J74dDVgZPgcS9EE50fOUZBBFgtoQKURq9VqIbwU5tzIBYRy
      lowIY11BlpZXGR4ZplwqIagSkqLisD1ow9HVFeRygcC5MRLRNYZHx8hvb1C2tDEYcBJZ22Bk
      dAixTUGRiygaWAXQFIm1jW3KFAk6/WzsyExevko0EqZ/cBhNzJAWVc4F/djdbrI7O/tlqqqK
      Us4T39ymqzWAqDkYbPUQjsS4eOUaibUIjt4BXFYBj7ufTKGE277bO2qCwM5mHI9zgNRGhP6h
      Uexqka2czFRfO+FwhMHhEZRSGUGTKSsqTtvuTs+txDo2fxfTve2El6OMTV0htb6Cracfn0Ml
      mswwNNCL1CFQEnc7C0EAAY21yDL9A0OI+R0yBLgy0cPy0jJDo6MU0wlEXAQ9Ttw+DzvpDHB0
      bLbT24p7a5mWvgGcNgGP005OFHE7Km+KK2a3Ee1epoa7WF6KMDQyRi4VR7a24fM48HndpHdy
      PJxxXMzvUJQlYtENetqDFFQ7k20+wstRLly6SjK2gqNnAJdNwOO279b1/YCb1EYUWZbYzolk
      Uhv0D47iQHwwDVpLMpnM0WN8E8NzWmxsLr+anGnMBmBypmm6rBBGoFjIoQo2bIKAhobT5UJg
      d2rQ4XBibmo1DmYDqJL8ZoT3by4xffkitz65SVdbC9MvPksotMracoiXbtzAZrOyFIlz9eoU
      VrM1NDXmEKhKNlYiDE5OMzTQA0B6K81P3v0p58+PUirs8NNffsLa3Jdsbm9TMs6RuWcWswFU
      ycD4Zdbu/hP3FiJ4fV48Pi+DfZ3c/nKWYGcffS0O7G09FJMR0nlj7Y0/i5jToCa6OC02Nt8A
      Jmea/w+ekvOA4Ym5PgAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Sheet 27' width='192'>
      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
      q4sgaDL/HypnD5eb2xpLAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Sheet 33' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Single Chart' width='192'>
      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
      RU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='all of regressions' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='all over time' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='all over time (2)' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAABJ0AAASdAHeZh94
      AAAgAElEQVR4nO29d5BkyXng93uvvK+uau97ps30+B23swa7i8U6LHYBEk4ACBIAwSOOPDFI
      xZ3uTlLoAqFQxMmRcQpJIZISQR4BESCBhVsQC7Mwa7HjXY9r7315/1zqj5qenZ5pU91d7esX
      0THT1VkvM1++72Xml5+RhBCCEiV2KfJmN6BEic1kwwVA07SNrrLEOrOdx3TDBSAWi210lSXW
      me08pqUl0BoRQjAx1MO585dIZFWiM2NcvHSVVE5DU7LcvN0DgK5muXn1Ej1Dk5vc4hL3UhKA
      NSMwO/0c3V/N7dtD9PZP0Nlay63uQSKhGUYm8g98/+0beKqbqSn3bXJ7S9xLSQDWiCRJeO0y
      568M095RjsVWhsPtxawrVNQ0UOaxAxCeCROeGePSpSsoxiY3usRdSgKwRoShcfXmAA+fPoXX
      7kHJzpKMhdHM9nnlvGUeKuv24HeY0EqK5y1DSQDWiEDHLHTOnzvH6HSC/fv20DsS5uC+JoZ6
      rmNoBpev99B+8CEiw90EGttxmDa71SXmkDb6ICwUChEMBjeyyk3BMAyEEJhMO/9p385jWpoB
      1glN00in05vdjBLLsCMEQBg6fbeucf7iFdLqwjvM0PQM+ga3ayPo6brE2bNnGQ8l3v9QGIxP
      ThGbniKlbc9eG7rC7a4rXLxynZy28JjOFmFMzWv8/pYgm5gilLHz0IE6dKHTf+smMUVi//5W
      YrNhYqksHrcDk5aip2+MlKJzYH8HobEBRmcS7G3voMzj2OxurIp4xuDEqVPIGAz33iSUhgP7
      Wxkdn6DaLGPzlOEyb79lWGxymJwtyIGGMtBVerq7SRlWDu5vITQRIqHquB0WRC5B98AYad3E
      4f17GRvoZiqq0NG5D4/Dumw9O2IGsHsq8ZrivHvmAjlDJZo0aKt20j0ywc2u21TX1jI8MgJa
      gpmUhXKXzMzkOONJQUeDl/GZ1GZ3YdUkwxOcO3uW6WgaRVGJTvbSPx7f7GatGV9VA3JygrMX
      rpHTsqQUKy0+nZ7JWbq6+qitrWZ4ZAQtEyGhe3CJLJHpEcK6h/oyC+F4rqB6doQA6GqWyqZO
      TrQG6BuNYbXaUBQFi9lEeXX9vDeB1+vFYrGAEEjI5LIZtrNW0h2o4eSpUwQtGcK6k46WejRV
      3exmrRk1l6Oh7RDtNQ5GZ1LYbFayORWrxUR1XQNO653FiyTh9XqwmC2AAZJMNpsteEx3hADI
      Zhuzoz30xR0c3VvG9Gg/E2kLbfU11NVXArCnpQUsPuqr3HgDFQTKK/Ga0vQMTWKxbN+VYPOe
      ZiRAdgapsOVIm8toqPSxp7mRYEMDPuv27JvZamWs/yZho4z2Wg9jg91E5CB7ygPU1ZcD+TG1
      OAJUBeyU19TgDdRiy00zNBnCbCrs0b6rBtV1fUO0FvF4HK/Xu4416ETCScoCy5gcCJ2+2zdJ
      GTYO7GvFJEtFbYWmaSiKgtPpLOp1tyLrPabCUInFs/j9nqULGiq3b9xAs/robGumkCG9KwCG
      YWyIWWs0GsXv9697PZuNqqrkcjncbvdmN2Xd2c5jend+lGUZq3X5XfNaMZlMG1LPVsAwjF3R
      1+08pjtiD1CixGopCUCJXU1JAErsakoCUGJXUxKAEruakgCU2NWsTQCEQSKRRJC3yJydniKR
      zpJLJ0lmFAAyyRip7PY/mi+xM1mTAAz13uSd9y5iAIO3rxNKZkins4z09HC1uxshBDfPv8mN
      kZkiNbdEieKyJkORprYDhKIXABgaGcZdVkE6o+E1WbGjo2ajCFsAiyxhGMbdH3UHGGsth6Zp
      aJq2K/qq6/q27WfRLKVc3iBHT5ziyqWLYLXTVO7kvcsDtDZUM53LnzTP/VgslmJVu2URQqDr
      +q7oq8lk2rb9XNMSqLvrIrPhEDd7hmnfU8+5997DXVaDy+vFU92Cy2QQ9Pvxu+zLX6xEiU2g
      5BS/TiiKQi6Xw+NZxoJxi5DKKhiGwOO0rfi723lMS2rQEqiazl+/eoH/9J0z5NTtG+h2NZQE
      oAQmk4wQgBBYdkEYl3vZnu5CJYqKLEn4XDbcDgtykR2DtjolASiBphtEk1l2Y66gkgCUIJNT
      ySgaQgg03SjYn3YnsHt6WmJRUlkVRdWRJemuCctuoSQAJYilspR57DjtFtK57Xmiu1pKAlCC
      UCxDTcCN3Wommd5dM0BpD1CCmViKCr+LnKaTyBQWUW2nUJoBShCJZwl4HfhdduKpkgCU2EXo
      hkE4kSHodeJyWImVBKDEbiKb09ANA4/Tis9lK2mBSuwukhkFWZZw2Cz4XHZiyexmN2lDWaNL
      pM7kxNTdSLyJ8BSzsTTJ8BQz0Xyc0ejMGDOxzBqbWWK9iCSzOK0W7FYzLoeFxC7TAq3RJfI2
      1271YgC6kuZa13UmJmaYHJumb6gXIQR91y8zMhMtUnNLFJtwPEPAm08O4nfZySgqmr578riu
      0SVy/x2XSMFgby8t7e2EYjqSJOMw66STM8iuCiSJkkvkFmU6ksTvtqGqKkLo2MwmIvEUfnfh
      Tkwll0hDJZFKMzkzzUzCzL7mCppr/Lx7vp+jHVWMZUoukVuVWCpHU7U/305Jxmm3ktPEitq9
      nV0i1yQA3V0XSaST3Oyb5OjJ06jZJOGEhlnP4QxU0Fidxl8WQLOV9tpbESEEs7E0QW8+h4HZ
      JONyWIilstRXrGcOh63DmgSg/eAx2u/53WJ3U3XPzNnRuQ+Amu2Zf27Hk1N1FE3H5867QUqS
      hMtu3VUb4dKreRcTTWaxWczY7kkR5XfbSKR3z2FYSQB2MbFkFofNjPWeNKou++46DS4JwC4m
      nMjgc9nnuUH63HYS6RwbHCxk0ygJwC5mNpamssw17zOvy7arDOJKArCLCSeyBDzzNRRuu5Vk
      Rtk1/sElAdjFzEZTBH3zBcDntpHKqujG7jgNLgnALkXVdJIZ5YEZwCTLuOy7xyaoJAC7lGgy
      i906XwMEIEl5TdBu8QwrCcAuJRTP4HPbsdwnALIk4XPbiCZ2h1l0SQB2KdFkFp/L9kAkOEmS
      cDusxHfJYVhJAHYpM9HUXTPo+/G57KU9QImdixCCcDxDhc+14N/dDuuuOQsoCcAuJZLIB8Na
      CJ/LRiKTw9gFhwFrsgadGevnau80H3zyNOP9txibiWJxl1MupwnJHo52tHD73K/IlR/gSEtl
      sdpcYo1o+vuRIBbC48yfBRiGQDbt7GjRaxIAl78KvzOCAGqa2qiqzXD5eh+q1Ywm4hhGjmRG
      w2zo82xLdoOdiRDi7s9WI5HOYTHLOGzmBdvnsltIZ1V03cBUYLj0rdjPQliTADhdLuZuTzY+
      S1fvOAcPH2Ky5zYVDjP9/UN4axpI8/4DYRgGuq6vveVbnDn3z63Y1+lIEr/LjhAGuv7gg+tx
      WkhlFHKKSiGBordqPwthTQLQd/MK/YMD2INVzPZewhGsY3h0HCtQ1dzMz3/8Jk8/epDeWN4l
      EvL/ms07PyKjYRiYTKYt2ddIMkeF34XFbEaSFn7Du51WsqqB1718+7fzmK6p1c1tB2hqOwCS
      REdTdd6ASpIwSRLIMi+99DySJHF4e+ZP27GE4xn8HvuiDz/k9wHxdO4Ba9GdxpoEwLSM1Et3
      3vo7exu1vRBCEIpn2N9csWQ5n8tGdBcEySqpQXcZhiGIJhdXgc7hce4O18iSAOwydEOQSOco
      9y2sAp3De2cJtNMpCcAuI5VVUHVj2YTYboeVRGrnm0OUBGCXMRtLE/A4kJfYAEPeMSaRyWEY
      21O/XyglAdhlRBLZZZc/kPcJyCn6jo8TWhKAXcZMLLXsBhjyp8E5VSsJQImdRTieocK/vG7f
      67LdjRy3kykJwC5C1w1iqVxBM4BJztsKpXZ4xpiSAOwiFE0nk1UpcxcWrNW7C84CSgKwi8gq
      Goqm43UtrQKdw+uyEd3hjjElAdhFRBJZ3A4r5kJMPMkLQGkGKLFjmI2lC1KBzuFx7PwwiSUB
      2EWE4mmCKxEA586PDrEma9Cx/ltc7pniheefZPjWZcbDKTzBelzZGaYkN48c3seVN36EUnOc
      U+01xWpziVUSimXY11RecPm56BCGIR4In7JTWJMAVDW2Uh1KARDLCh595FGuXLkCJgdWoWBo
      aTTZhdWUdxCZ8wrbrt5DK2HOS2qr9NUwBOFEGr/LVnCbbBYZVdXI5BTs1sUfle08pmsSALPZ
      fNfWP+8TescHVoJar5VrNwcor68jajDP+WIpR4ydgiRJd3+2AjlNQ1F1PE5bwW1y2q3oIu9E
      v9x3tko/V8qak+QNjwxj9VdQ7rHy7m/eI1DVhFlLEWho5MYvfkP7iX2k46Z5D8Sce+R60Dsa
      xuuybbon01w/17OvKyGn6OiGwOe2F9wmj9OGYQgUzVjyO+s9puvJ2pPkHTx29/eG1vl/f+bZ
      DwKwv2wttRROKqvwn77zHntqy/jTTzyMqUB1324glspht5qXXMrcj9kkY7OaSGVVlvYf277s
      qCfEJMvohoHNat6xm7bVEoqnF40DtBT5jfDO1QTtKAG4MTRDQ6WXWDJLVtE2uzlbiplomgr/
      ygXA47QSS5YEYMsjhOBa3xQfONyE3WpmeDq22U3aUoTjmYKM4O7H57Lv6FwBiy4IhWHwq9de
      YTqhYzKZMNk9vPDCCzgtG9m8wklkFAYnY3zs8X3EUzl6xyJ0NBSu895u5FSNkek4TVW+B2L8
      348QgnAiQ2AVSyCP08rQ1M59mSy1tefYI09hsZp46qmnCNp01C3sHXd7eJamah8+l43WugD9
      4+Ed7cxx7tY4/8s33+Hta8PLls0qGjlVw1egEdy9eJw72xxiUQGQJAl/oIIys8pPf/4z+iaz
      2JZ+0WwaumFwrX+ao63VSJJEU7WfZFohFE9vdtPWBSHyoU28LhtvXR1mYCKyZPnkHZt+l33l
      07f/Tt7gneobvOweoLXzMA119XR2tiBt0XsQimeYCCVor8+HoLNbzbTUljEwEd3klq0P6azK
      tf4p/vQTD/PSI+3806+uc61/atEAtfF0DovZhN26sAAIIeiauErXxJUHrmG35gPoZtWdqVRY
      VgDOX7xIWVkZXo+brapZvD4wTUtNGc573nAt1X66Bqa3bdTixRBCcObmGFVlbhoqfRxrr+Gj
      j3Xww3duc6lncsH+huMZgl7HoqphVVf5YdcrfOvi18lq86PB2SwmkCRyO1SrtqwAhMYGeOvt
      t3nv/CVyW9DcQ9MNbgzOcPC+/AOt9QFiySyZ3M4auFRW5eytMZ462nz3s86mCj73zCF+fr6P
      N64MPfCd2Vh60XRIAFazlYAzSLW3Bodlfrm5g7PMDhWAZY8Fv/Qn/45oNAGyGccWDAA8FUmS
      zCi01gfmfR7wOLBZzAxMRjjQvHOSc5y9OUaV30VLjX/e583Vfr7wwlG+/rMr5BSN50+9fywf
      SWZprQ3cf6m7ZNQ0GTWNIQSGMJCl99+LFrMJu2Xn+gYvOwN89x/+lr/7+7/lle9+j+wWnAFu
      DM7Q0ViO0zZ/fStJEq31AW4NzW5Sy4pPKqNwsXuCJ482P2B8JkkS1QE3X37xIXpGw3znjRt3
      tWDTkaVDoUQzUVRdRZZk4pkHVZ55z7BdKgDlDW3sra/C57KibjGtoqLq3Bya5cjeqgX/vr+p
      gv6JyI5Rh17qmSToc9B839v/XgJeJ1944QhTkSTf+fUN4qkcmZxKmWfxJdBodJgGfxNOq5NY
      9kHFgddlI5bamZGilxWAzra9tLbvp6njCO4tdgg2PB1DNwzqyr0L/r3c50SSJCbDyQ1uWfFJ
      ZRXO3BzlySPNy4Y19DhtfOmFh8ipGl/78SWyOS2/mV2EofAAjYFm/I4yZlMzD/zdt5tngDde
      /zHj02EyqQTaEi/SeHiKixcvMR1JEpkYZngqnztsaug2o7OJIjY5jxCCq31T7Gssx7rI4Drt
      FpqqfNwcenBQtxNCCM7dGqfC76K5evG3/7047RY++6FDZHIq46Ek4XhmwXK6oTOdnKKprJkK
      dxXTyakHyuxk3+Blt7W6phCJRLAqgqXOQvr6B2hpbaOnt4+gzUxYRKircDEyNIy5zktd0H23
      bDFUk9Fklu6RWf7gpWNLXu/Uvjq++9ZNPnSsZcOdNoqVJG8mmuK96yP8wUvHkKTC75/FLPNf
      fvwU09EUdRWeBb83lcirTivcVaSUFO/0v/FAuTKPnVA8vWS921XdvKwAeIPVNO7txGR1YF50
      vjCwWyyMjoxjstlA0u8kyRvEW12/Lknybg/PUOFz4nVal7xewGMnp2iMTseoLfesqA4h8qfM
      hYYRuRdd14vW17euDtHREFyRO+McDquJpkovLOK2OBoZxmf3YcJEmT3ATHIaVVPnaYLcjnzS
      PEVRF/SxWO8keamsit1iWhf/jmUFoLGukv7BUcqCAdqWEPJsJo1hhYym43da1j1JXtfALMc7
      arFalt6YeMxmmmvKGA+naKxemWfO21eH+f7bt/jKR4/TVr+yRGfFSpI3E01xazjEH758fF0S
      0Y3Ehmgpb8VsNuN1+rCYrWS0ND7H+0sth82CySST0wRe24NtWM8kecNTMf7Xb73DQ201fOnD
      R4s+iy/b6sGBYbL2CrwiTcaAhc2pZI6eegxN1zGZzIBAkmU+8pHnkGWZw4uroFfFZDjJbDx9
      1/RhOdrrg1zoHuf0/vqC6xBC0D8RYTqS2lTfgrevDXNoT+WK4vkUiiEMJuMTnGp6FACLbMFr
      8zKbmpknABazCYvZRFbRCo4qt1bC8QzvdA1zuXcSv9vBwESEnKqvyKOtEJadU8w2O5GxXi7e
      HsW8hPBJsozFYkGW8/6hEmAyme74ixZXaq8PTNNc7Z9n+rAULTV+xmYSpLKFazLGZhJMhBI8
      eqiBmejmGNWF4xluDM7w2MHGddm/JLJxdKETdOZfJCbZRJkzQDgdmlfOZjFjMcskNuAwLJLI
      8OP3evirV8+TU3S+8vIJ/sMXnqCjsZzXzvRgrHGvMTId42fn+8jkVKCAGeDxD3yQ+vFZGppb
      toQaVAhB1+AMz6xgU+tz2akJuukbi3B4kTODe1E1ndfO9nCqs45Kv4vXL/Tz9LGWtTZ9RQgh
      ePvaMPuaypc0Y1gLo7ER3DYPdvP71y93VTCTnJ5XTpYlXHbrup0Gz1m3vndjlCu9U7TU+Pni
      C0epDrjvjvFLj7Tzf//gHJ3Ds+xrWp2HshCCH73bzdlb4zRX+WlvCC7hECMEZ3/xfW5OZLGb
      NPonE3zs2Uc23SBuMpwknVHYU1v4el6WJVpq/PSOhTm0p3JZwbnQPUFO1Xn0YAOGIUi8rTAd
      SW1opIlwPEPXwDT/4qVj66a9Go0OU+ernxfRodxdydDwGYQQ8+pdj6R50WSWdE7lSu8kl3sn
      aary83vPH6Em6H6gz363nZce6eBH7/VQU+7B51q5d1vXwAyhRIaqMhduhxVYaglk6IQ0G1/4
      /Gf5zOd+l1pzmOgmq4KFEHQNzNBaH1jxWnB/UyU3h2bQl7Frj6WyvHlliOdP7sVmyUdRaK0N
      0DUwveT3iokQgvdujNJeH1yXtf8cE/FxmgN75n1W4aoklA4hmH+fPC5rUfMGK6rO//m9s/z3
      f/MrQrE0n3/2MJ975hC15Z5FBf7Qnkr21pbxo3e7V3y6PzoT59V3b/Opp/ZzsKWS8dk4sIQA
      CGDw6rv8xV/8OX/+53/Ory91wyareg0h6BqY4qG2mhW/FWvLPZhNMrOxxdfzQgh+dq6P1roA
      e+vyO3dJkjjYUsH1wekNcQoRQhBL5egamOaJI03r9vZXtBzTiUlqvXXzPg84A6SUJBl1/sGZ
      z2Uv6hJI1XWiiSyPHWzgs88coqHSV9D3nj/ZylQkxcWeiYLrCsUzfOsX1/jQ8Rba64PsqS2j
      dzzvRLToa1Q2mfnjf/s/FlzJRjA0GUPVDPbUrDzQkCxLtNUHuD4wTXXAvWCZ/vEI/eMR/uXH
      TswzN2irD/LKmzcJxdMFpRdaC/G0wl/8028I+pzruuQaj4/hsrmx32f+LEkyAWeQSDqEy/p+
      /R6HlUiieDPA9Tsz+ReeP4JpBUG1nHYLv/WBfXz7V9fZU1O27AyZyal86xfXONhSxcl9dUhS
      fjn8btcIqqZvn6gQQggu905yeG8Vq30pttUH6R0LL/gmVzWd779zm6ePteC9L4eu1WKivSHI
      tf71XwbFU1kGJ6PULCKkxWIkMkSttx6zPP8dKEsyQVc5E/HxeZ97nLYVadGWQtF03rsxylNH
      m1d1uNVS7edYew2vvHEDdYkcZqqm88qbNynzOHju1N67L7UyT945aDaW3j4CkFN1ekZDHGiu
      WPWyoK0+yEws/UCgJyEEb10dxueyLbi8yi+D8nuI9bYsHQ8leeJwEx9/onPd6hBC3Fn/P6hJ
      kySJClcl0cx8P2O/204yq6AXof9d/dOYZGlFioz72zhnFPjry4MLltENg5+c7SWVUfjEk53z
      ZnS71Uyl38XgZHR7CIBuGHz9Z1cYmIiuaVlgt5op9znpG58/uLOxNO/dGOXDD7cuavbQWhcg
      ksyuq6O9phucvzXGqc66VZlfFIohDMbjY9T7Gxf8e9BVznRyvo+x2SRjNZnuOtivFt0wePf6
      CI8fbsS6TDiXpbBaTLz0aDvnb48zfF/YFiEEv7k+Ss9oiM986CA2y4Mr/b11ZfRPRLaHAGRy
      Gt0j4RXb8izE3Jt8bnA13eC1M70ca6uhNrj49R02C3try7g+sH6WpXOnnR0NKzO7WCnRTBhF
      y+F3LPwGLndXEstE0cX7ywuTScJmNZO+c4C0Wm4PhxCGYF/j2mM2VQfcfPChFr731s15p/VX
      +6f5zfURPvP0oUXVpS01ZQxPxba+AAgh+OXFAQ7vreTffvaxBaV5JbTU+JkIJ8mp+cG9MThD
      KJ4uSONysKWSW8Oz67IMEkJwsXuCA80V2Ip83H8/I9ER6nwND6z/5yh3lRPNRNH09x92i8mE
      w2Ze01mAIQS/ujzIw/vr1zyOkF8KndxXS9Dn5CdnexFCMDQZ5Wdne3npkfYlX5h+tx2LybT1
      BeD2SIhbw7N85JH2otiBVJXlN5ejM3ES6Rw/v9DHsyf2FmRWsae2jFgqu6QqdbXEUjkGJ6Oc
      6Kgt+rXvRQjBaHSYev/i5hU2sx23zT1vHzB3GryWJVDPaJhURlnUg281mGSZlx9t5/rANG9e
      GeKffn2dDxxuonOZ02K71UxN0L21BSCZUfjxez08e2IPgSVc+laC2STTVh+gZzTEW1eHqfK7
      2F/g0brLbqW5ys+NweIvgy50T1BX4V03s4c5DGEwER+n3t+wZLmgs/wBk4i1eIYZhuCNy4M8
      frix6DOcz2XneEctf/nDC5S5HZzaX7f8l8i/0IomAIau0nvrOpOhOMnw1F0DstjMGLOLeCMt
      eT1D8NqZHmrLPQXZ76yEA82VnLkxxtW+KT78cNuKjPUO7rlzolzEZZCq6XT1T/HI/vp1d9pJ
      q2lCqRnqfMsIgKuc6fsEwOO0EUmsfCwhv7+ZjaU5uU4z3NHWap440sTTx5Z3GZ2jpaaIAtDd
      dQVvdSNuu5nJ0Wn6hvJrst7rlxieXnmEtq6BaYanYrx4um1FByWFoOkG/eMRqgPuFWVNhPxN
      S2YUpqOporWnZzSMJEk0VBV2GroWJmJj+Bxl2C1L29JUeaoJpedH1PC5bKQyK98E64bBry8P
      8sThxnXTblUH3Hzlo8dpWcEhadDrWFuGmHuZnJogqeiosptKm4wDnXRyBslZiSzlHUTmflR1
      6ZsYS+V47UwPLz7cisMiL1t+pfhdVk7vr+Oh1soVX9tmlqgr93C9f4py7+IPkaZpaJpW0PXf
      uTbMQ61VSMJAXefQG2PRUZr8zcu2y2P1EkrOks1lMN3ZLDusJsLx9APf1XV9yesNTcWYiiT5
      9FOdaNrWCrBVNAHweIN0HjnGjWtXATvNtT7evdDPkfYqxjPczZcl3/EbWAxDCF47e4N9jeUc
      aKlal0wv1UELf/RbJ1e93DjSWs0bV4Z4+vjeRds3lzlxqb4CzEbTTEdTfOqDB5Ytu1YMYTAW
      H+FI7bFl66rwVJLVMhhS3t0VoMzrJJ3THviuyWRa9Hq6IThzc5zHDjbica3v/mY1FG0+6uxs
      5+bVy1TWteAvL8cZaKChykeZP0CVv7BjfSEEF26PMxtL89zJxR+uYrCWtXZLTRnprMpUZG3h
      VoQQXOgeZ19T+apCl6+UnJZlNjVDpWf5SHleuw9DGMSz8buf+dx2kpmVnQaPz8YZm01wbIvm
      iS6aADh95Rw/cZLG6gDB6iosyOzr7MTi9FGzxAHTvYTiGX55cYCXH+3AYdsC3jeL4HZYqa/w
      cmt4bVHnFE3n/O1xTnbUbUjEinAq7+lV7lpeACRJotxVTviefYBZzifNK1QVKoTg3a4RjrRW
      4XFujCvlStkyalBNN3j13dscaKmkta7ITsTrwKE9lVzrX1v06VtDswS9DuorFw7sVWzG42M0
      +JswyYWZIARdFfPiBMmyhNNmKfgwbDqSYng6xql9haklN4MtIwBnboySzCg8e2LP8oW3AHtq
      ykjn1FVHndMNg7O3xjjWXluw2m6tjMVGl9X/30uFu3Kef3Aqq9A9Gubn5/sLEvy3rg6zr7F8
      ybCMm82WEICxmThvXh3itx/vLMoR+UbwftS51S2DJkJJpsIpHmqrLnLLFkbRFcZiI1R5Cl+L
      V7grmU2+bzdlMZtorV3eBh/yb/+esdCKInFsBpsuANf6p/nfXznD8fZa6irWbuy2UUiSxKE9
      VatylRRCcP7WOEfbqpdNcFcsEtk4iqZQ6S48VLzfUUZOz5FR84eaTpuFP/vUaV56pH3JPYtx
      x6G/s6liXV06i8GmC8DgZIRMTmNvXdmGhy5cK3vuHIpNrXAZlMqq9IyF1t3u515mktMEnEGc
      1sLNyd1WD7qhz3OPtJhNy2rnXnuvhx+/18Px9pW7rm40m77eePbEXo6311IV2Hsfw5EAABlY
      SURBVLiIC8XCYTOzp8bP9cEZqlbgwXWld5Kg17moa+Z6MBQZWNH6H/KZYzw2L6HULEFX4ebL
      iqZTVeba0pq8OTZ9BrBbzdSWe4pu7rARSJLEgZZKrq8gF5mq6VzuneThzo3TjBjCuOMCufI6
      K9yVzKRWtsx7+ZF2/v3vPL7llz+wBQRguzPnKVaoifTQVIysot2NOrERJHMJkkqSau/Kl1wB
      Z5CZBUKmL4XZbNqyev/7KQnAGrFbzQS9Dr71y+sFOcqcvTnG0dbqose4XIpIJoLT4sRnLyy3
      wL1UuqsIpXZOmqn7KQnAGhHktR63h2eXTSM0NhtncDLK4dbimncvx0hkiBpf3bwIcIVS5gyQ
      UlJk1Z2ZImnTN8HbHVmS+L3njxBJZJd02smpGn/5gwuomo5/FWH91sJwZJD2in2r+q7Lmt+o
      J5XEsibU25HSDFAEfC47zdX+JVV+FrOJ/c3lnN6/vhEf7kfTVaYSkzSULRwBYjkcFgd2s51Y
      ZuU+HduB0gywQciSxGeePgiszRJ1JQgheO3WjxiODACrqzNvFFdBKDXL3vK24jZwC1BUAZgZ
      7UexlePUoiRlLw1VfqaGulFdNdQXIaTJdmejHvx84otx3h54k5uTXdR46xaNAFEIFe7KBZPn
      7QSKJgBqJkbv0CiechMZJUHIiFBf6WN0oBe5wVMSgA1ACIOp5BRv9f2a0egwx+pP8OIHP4rN
      bMNiWv2hVNBVQV+ot4gt3ToURwCEoLenn71te5kKqSBJuMwyscg4Jm/e2GslLpE7gZW4RBaD
      6eQU7w6+RX+4lxP1D/Nc24ffN3swQDVW344ye4BQapackpuXPG+O5VwitzJFEgANJIm+27eZ
      SZhobyynuamcN97u4ZGHGhlOFu4SuVMo1CVyLddX9ByxbIy3+9+gb7abh+pO8K/2/xluW3Fn
      W6/Di8VkIaOnF4wmt5RL5FanOAIgW+g8dBRdyRDP6JgMFbvbz5EDGl5/gEbH1jaI2m4IITg/
      coZvXvzP+Ox+Hm15gj967E9xWR/MrFIM7Hc0QdFMdNFwituVom6CTVYHZdb3f69vyBtfBbbH
      qfiWRzc0RqLDnB36Df2hXgLOcj526JMcrD68rhtsk2zC5/Azm5ymObCxudLWm5IadBug6Sq9
      sz28N/QOaSXFkbpjfLjzZewWO2bZsiHapXJXxQNxgjYKw9CRC3TjXI5IOsxYbIR9VQcwy+aS
      AGxlVF2le+YWZwbfIaNmeLjpUQ7UHMZh2XgXw3J3JdfGL29YfXN7nHA6zCtXvsWhmiM8sffp
      NQm7buh879q3uTR6jj/5wL+hvXJfSQC2GqqucnOqi3g2xs2p62i6xunmx+isOrippggVrkpm
      U9MPZI9cC/eakOuGTlbLMpWYYDQ6zER8nNnUDGklxXhslLE7AX33BFtXVb+iKfz89mtE0iGa
      A3vonrlJW0VHSQC2GiORQf7q3f+DKk81nz76eVor2td0iFUsfA4/mqGTVtPzcoetFkMYvHbj
      h0QyETw2LxPxMWLZGF67lwZ/E51VB6hwV1HuKietpumb7eG7V/+JR5sf53Tz4wVHthBCkFSS
      fOfyNzHLJr7y6J+gGTp/d/av6Zm9XRKArYSmq5wdfo8D1Yd4+cDHaShr2uwm3cVqsuKyuAjf
      lzxvtVyfuMrPbv8Yu9nOxw59isO1R6n21i64vLOabRxvOEW9v5FXrnyLsdgoLx34bZzW5R1u
      xmOjfPvKN2mv6OC5jhcx3zkQfLrtOV678WpJAJbi3PAZ/vnG9/niqX/xQD7dYmMIgzf7f01a
      SfHl03+Mzby1VGdm2YzfGSCSDtGwSGqlQlA0hV/3vs7t6Zt8+fQf0RzYg9deWFDgKk81Xz79
      R/zk5qt87cxf8luHPrlomichBF0TV/nJrR/xVOuHONHw8Lyl08Gaw/TOdpcEYDGEENya6mIi
      Psb1yWvrLgA3Jq9xY/Ianzv+hS338EPejingDDCVWL1NUDgV4gddr2Az2/j8iS9R5ly5V5zN
      bOPlgx/nythFvn35mzzS/DgnG0/PWxJpusqbfb/i2sQVPnnkMzQH9jywb5AlOT8jrLo3O5zb
      0zcIp8P8yQf+NT+79WM6KvfTuk7WkBPxMV7v/ikvH/htAs71zQ+2Fqo81dyevrni7xnC4NbU
      DX7R/VMO1hzm8T1Prck2SZZkjtYdp9JTzatd32U4Mnh3SZTKJfnRjR+QUpL8zvEvUu5ePPmJ
      2+YuCcBCRNJhfn77Jzzd9iwHqg8DEj/seoUvnfrDVb21liKRS/Ddq//E6abH2BNsLeq1i03A
      GWQ2ubLsODktx9v9v6Zr4iof7nyZtoqOomiRJEmizlfP7578Mq/dfJW/PfvXHKo5zPXJa1S5
      q/kvjv4OLtvyUTdKDjH3oRsav+j+Kc2BPRyoyZ+wHqg+xNG6Y/yg6xUUbfVJ4u5H0RS+f+3b
      NPqbOdX4yJaPoVPuqiCajaIZhcX4D6Vm+MdL32A8PsbnT3yR9sp9Re+jy+ri44c/TbWnmm+c
      /1s8Ni8vH/x4QQ8/lATgAS6PXWQ2NcvT7c/dtXyUJIkn934Ii2zh9e6fohuLZycvFEMYvNH3
      C3Jqluf2fXhV/robjcVkxSyZGI2OLFluOjHFL7p/yt+f+xp1vno+89DnCboKy8O2GmRJ5oXO
      l/jc8S/w4c6XV7S82vp3fQXkd/5XmEpMripq80xyml/1vs6L+19+QNVnkk28fPC36Zvt4fLY
      hTVFhRZCcHX8El0TV/nk0c9iM28PX9tENs5YfISf3HwVQyweAeO1m6/y7cv/wKMtH+BD7c9j
      MVkXLVssXFY3T7U+s6IAXrADbIGEEITTIUaiQ/TN9vLz2/9Mnb+Rf/PB/xaHpfDATJqh8f1r
      3+Z002M0ljUvWMZr9/GxQ5/g25e/SaWnetXqwLHYKK93/5SPH/70trKu9Dn8fOzgp6jz1S/o
      FzDHB9ueoSnQzLH6kxvYutUhibW8yu5hpO8G47NxDLObSnOWacnD6cMdXHnzn1FrjnGyLR+V
      OBQKEQyuXNMhhMAQBpIkEUmHGY2NMBIZZCgyhKJlqfbU0hhoRtUV+mZ70AyNjx78ODUFREMT
      QvDLnp8xGh3hd45/EbNp8feCEIILI2d5b+gdvnDyD/DYF47trygKuVwOj2e+bX4sE+UbF/6W
      kw2nOdl4esuv+wthtWO6FSjaDFC/p5NAcIZbQyGQHVhEDkNLo0kOLHLeI0wIcddRZCUYwuDb
      V/6BgVAfPocfRVMoc5SxJ9jGhzteospTjc1sv/swPdr0BGeHf8O3Ln6Dx1ue5Gjd8SXfWAPh
      Pi6OnOf3H/4KEtKy7TtSe4ypxCSvXv8enzj8mQVNFea83+691kR8jJ93v0aDr5GH6k5gGOub
      EG+jWM2YbhWKJgDRqWEGZrIcOtDByK2b1HqtXLs5QLC+npgx3yF8JW+9nJbjN4NvcXH0HD67
      nxc7P0qFuwqnxbnodcwmM480P059WSP/fP37DEUGea7jwwt6SiVzCX5668c83f5swSpOk2Ti
      6bbn+Nalr/NG7y94puOFB8rMtW3u36ya4W/O/CU5Lcsnn/lswbYs24XtOpMVbQn07i9fQ3YH
      cfsr8QiFqrZG3nr9XR47uY/BuJn9Tfm49IVOl0IIJhMT/OzWP2MIwfP7XiTgDGJfoSlwIhfn
      tRuvEkrP8tL+36Le33h3sHRD5wdd38EQgo8f+vSKNTEzyWm+cf5rPNvxIgeqD817CO5fAgkh
      +FXPzzGbLDy+58klZ6SNRgiBPnoeDBVz06Mr/v52XgIVTQAKpZCbpeoq50fO8JvBtzlef4pH
      Wh7HugZNgm7oXBg5wxt9v+KJvR/kRMMpZMlE18RV3uj7BV869YcF643vp3e2m29e+Hs+1P48
      p5seveu4sdgeYCtiJKfIfP9fgaHj/Mw3kFZo7LadBWBLaYGEEMymZvjxjR+i6Dk+89DvUutb
      exhxk2ziZOMj1Poa+MG17zAcGeRY/Ul+2fMzPnLgY6t++AH2BFvx2D1858o36ajsXLEabjMR
      QmCEB1DO/b+Y6o5hREfQxy5ibvnAZjdtw9gyAqDpKudGzvBW3694uOkxHtvzRFHt4CVJot7f
      wO+f/grfufxN/qfXv8rp5sdpLW9f03VlSeZTRz/HVHySMsfWz255L/rwGdSr38Lc/jzm9ucx
      ZrrJ/eb/Qq7cj+zanm/0lbLpApBWUoxGh3lv6F2yaobPn/h9ary167apclicvHTgt8lpOU43
      P16Ua9b5GqjzrSz7ymYiDB31xg/R+t/A9vAfIld2IkkSckUH5qZHUc7+P9ie+nfbdmO7EjZ9
      D/CDa6/w01uv8mzHi7y4/2MbZgpsGPkzhfUa5K26BxC5JMq5v8HIRLA98sdIrop590BoCtnX
      /wfMe5/E3PpMQfentAdYA51V+1F0hWfaX9hQO/jtYHtTbIzYGLmzf43srsb+5H+94GZXMlux
      nvoyubf+AlNlJ5Jva6c5XSubPgPsVLbSDDCn5lSv/COmlsex7HsJaYnTbgCl63sY07ewPfFf
      IS1jq7Sdx3TTZ4AS8xFCgJ4DkxXpvrMCIQQIARig5dCnb2EqbwOTBbjzNyHe/z9ghPvRel/H
      iI1hOfpZzA2nCmqHpfMlcpNdaD2/wLzvxR27HygJwBZDJCbJvv5VZF89srcOYWig5RC6AroC
      ho4wNER8DGO2G8nfhOyqAARC10AY+R9DBwRGfAy0LPYX/mPBDz+AZLJgPfEFsm/+BXJlJ6bg
      +rqEbhYlAdgiCGFgTFxFufKPiNgYeOuQ3FX5pYrJhmS2vv+vbM7PAGOXMDWdRnKU5WcByYQk
      m0AygWwC2YxIhzGiw5hqj6y4TbK/EUv7c6iXvo781L9H2oK+ymultAdYJ1ayBzDi46g3fogR
      6sPS+RKmpkdgg0IeLofQVXJv/jlycA/Ww59esMx2HtPdpwrZQggljXr7NbK//p+RLE7sz/wH
      zHueRDJZt8TDD3NLoS+iDb6LPn1rw+sXQmCkZhFFdEW9lx2zBBLCACWFev37yL4GTHueeGAT
      ueJrGhoiE0VyBtZ8rfuva0zdQLn2HSSzHdvjf4Zc1rxlHvr7kT3VWPa/jHLx69g/9N8hrcDR
      aCn0iasIXUH21YOuIJQMQk1CNoHQcgglgUhH0Lp/gly1H9vD/xKpyIekmy4AQkkhUrNI/oYl
      HzKh5UBXwWwFNYvIRDGSkxjREURiEiMxAUoafeIymG2Y+n6JqbwNuaIDObgXye5DWsa0QggB
      WhaRjWPERtAG3kIffBNzx0cw1Z9A9tYgWVxgda1qEEQuiUiHUG+/hhHux7LvI5iaHltWJbkV
      MO95EmOyC+XCf8Z67PeWNJgTQoChIZks+U28mkHkEhjJKURsDCMxiUhMog2+BULHVHMUJDm/
      x7HYkaxusDqRLC4kVxC5rAk0hdyb/xuS3Yep/gSmumP5PdIKzcqN5DTG9C1MDSeRLI7i7QEM
      XSOZTOP0ePIbNMzYrGaUXAYhW7FZ8g29f72onPsaytV/zHfI6rlzI/JOzZLJCpIEkow+dR2R
      mkUOtNzVckjOILKvDslbh+ytRXIGENlY/jtKBj3UgzHTg0jPgNWDKbgXuaIduawFtAzYfZBL
      YsTHMSKDGJEhRCYMWg7JEQC7BxEZRA62YiRnIBsDkwXJ7kP2NyLd0dRIFjsiE0WuOXRXiB8w
      h9ayZF/7b9BnbmM5/CmsBz+BtIg32VZFD/WR+c7vY973ErYn/vXdvt4/pmrXd1F7Xkcua0bk
      Enntla7mX0K+OmRPDZK3FpQEwtDz2imTFWkRZ3YhDCRJRmRi6DM30UfOoYd6kZ1BTHXHMNWf
      QLrjdC/JpjsCqIKawUiHEbERjPgERnwcfew8IjaCXH0E2VdfvBmg5/plcpIVDQdePc4Udh49
      sp+ud3+OVneCU+21C35Prj2COTWDueWJ/IMvBAgd9HzoDaHnQAiEmkZY3VhPfAnJVY5k8y58
      wzzVd/9rqj2Svxm5BEZ0CH22F63/DYzpv8KIDOSv463LqxzLmjC3PJF/y7vKF3zDCTWDSIfu
      vsGM6Ztot19Dn7yGZLbi+OTXkBazBpXMSP5GLBUdWI9/oahLqo1C9tZhbn8BU2UnS6VdNTJR
      UBKYqvYjl7chOcqQ7N5lD9QWY+5eSQ4f5sbTmBtPI7Jx9Okb6CPnUG//JK8Jy0aRqw4ilCQi
      E8kvX802JHcVsr8BU+1RzM2PI+JjyMG9iFyyeDPAlSuXOXLkCFeuXMFtshAVOkfam7l8/jLm
      6jYOt1RhGAbT09N4PJ5Vr+OWa24h1xXpEMqFv8PU8iSm2ofuTqOru7ZAn7iGEe7H3PnS3WXW
      XII8h8NRlDYv2I8tcF2TyUQ0GsXtft+kXEIgtBzSCp2XVtsfoaQQPT9BXP3/oP40ou7h/Ezj
      DCI5ypa8btEE4OLFCzz00FEuXbqKz2rFF7ByezRFc42HGcXJ0b1rc4rfbmwlU4j1ZquMqchE
      we5d0exatHm4odLLu785g7+qHofLhbemBZOaIejz4nHsvAOUElsPyeFf8dKydBC2TpRmgO3B
      9tuJlShRREoCUGJXUxKAEruakgCU2NXcPQjTNI1YLLbuFaZSqYLKFTsdZ0HnA0Usp+s6qqqi
      KMqWa9tKyhVCMcd0o/t5VwDMZvOG7eQLqUfTNMzmpQ+q52JrLuffW8i1il2uUC2QpmmYTKZl
      B7OYbZuL5blcOV3X89EiCvCfXm5MV1KnLMsbdj+2rBWWybS8kVOhb7BCrrUe5TajzmKWK3bg
      gGLWWax+bvIeQBCdGeVW7+gDf7n34dbVDDeuXuL8pS4UY36Ze8slI5OcP3eWGz1DGGLha80x
      3ned4en4onUC9Fy/yNmz55gIJRYtJ4RgdOA25y9cJasvHu15dmyAs2fP8s6775G6pxP39yE2
      M8a5s+cYGJufi2te24RgbLCbs+cukMioC5bTcmkuX72GpguUdIxLF84xOD77QJ3peIirN3sA
      UNIJLl698WDbhCA0MUTPcD7xyHDfDc6ePU8okZ1Xt5pNcfFKF4YQxGbGOH/uLLf6RxH31ZmK
      zXLtVu9cZxju6WJsNvlAnTNj/fSNToMwuHX1AmfPnmU6lpnXT2HoDN66zFRcBWEw1HODi1eu
      k9OMeeV0JcO1a1fJqgaTw72cPXuWt946u9kCoJPK5ojORpcsJYSgoXU/dc4M47HF81NZnX6O
      HjtGJjJOTlv8fC+XnGVkYpZ4MrlEpQqzkRx7WlupCiweOlFPTTE4naOpsQ7zEjNSeV0Lp04e
      x2W3YbMsXq53YISDR48wOdK/eJ1qhqlojmOHWrl+fWEnlUQiTiqZQBeCod5emjuPEB4dRL2/
      XDJDPBYCIJ5IEo8/OBaGrpLOKkSjEQC8wVqOHmxgsH/igToTyRhCgMMb5OhDR4lPjC1cZzRf
      ZyY2zWQoTCSamV+nppDJKkRicYShE05m2dvWQbl3vkGdmkmg55LMpjRSM8NMZkw01Ndiluff
      42QiQTqVQNEF1Y2tnDx+FKfbvtkCYKauoQbzMtOeyeIgOT3EhOKj0b/4qs1qk7l65gxpw45l
      0ZnP4Pr1bqprKsikM/NmivtqpaWlnvDkCNe6hxatMxudIYuZ2dEe+qcSi5YDiE4O465sXFJQ
      Am4bF86dR7ItbiotmywY2SiXrveRyiy8AS0rr8bjygcUVg0zLocVn9XC/X5VVbX1d03Vy6tq
      cDketLCVzVZqa6oxyRKSBFYULnWN0tExPxpeoKLmrtmLWdK5fOEcqtWJ+b57XF3XgNUiIwyV
      rpv91FYHSWfmC4BssVFbU4UsAbKJloY6Zse6udE3Pa+c1eWnpjyfaDsWjgIGE4M9jN03a/uC
      lfjd7xvnhSeHKKtu2mQBEAa5nIKqKqja4gkW0pExxpMy+9sa74b7WIhIKEbHQ8dwSBkyymLX
      MwgEK4iFw0SjUfRFLmdoKhpmKsrLUJfQ5DiCtVgNlcqgD32JJRBCMDQRprFm6fihM9EkR44c
      QUlFFi0jySbaOg+zt9ZPZdVCgasEmqqgqho5RcVhNZicDjGTVXHcV07J5fLaKlVDVRRUVSWn
      qPNusxAGipJDVRU0TeXq9V4OHTqA3SwtUKeKoqjE4mk6Dz2EXYmR1heuU1U0ysuDhGdDhO/T
      QArDuFNOQdMyaMJORbkPJTd/PjH0fB9VRcFfGcTQZYJ+D8Z9Y6GpKsodrZwwNIYmUzRV+zB9
      9atf/eqid3odyGQyOJ13XOr0HN09A5jMYJhseN0Lm88amkokHCIUDuP2V2AzLyy3kqHQ3z9A
      Rf1egj7XIhbrMv5AkPKKCqoqK3HYFp5RJJMJJRVhKqpyoLMVeZG3tmxx4LPrzGQttDdWvr/m
      1HV0XcdmmzME1LA7/bicSxsGVgTLGBwYoqW9E6dt8WyH8dAEsxkzna31C+5xpseGyCiCZDrL
      nrY2wpOjNOxtx2m9t7+Cwd7bIJnJapCNTqMZEvGMSnnAz9xldTVDX98gMiBZ7aBkmQmFwOLE
      47LfGVMHk6ODKBrE0zkCHgeDg8NUtXQQdN/bZ4OB7lsgW8hhYU9zE+XlFVRXVmC7p226kqZ3
      YARZGJjsfsxanJmUmQMdDfPGIh2bZWA6hZSN4q9txW/OkjDsNNdVcu9tCU2OEM/opNNp/H4v
      Xn8Ah83C/w9aUKCo6omIIgAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='cost 1' width='192'>
      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
      VWrPAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='cost 1_1' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='cost 2' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='cost 2 (2)' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='cost 2 (3)' width='192'>
      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
      0+kmoiHm/wOw3O9MTp/pRQAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='linear' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='test' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='test (2)' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='test (3)' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='test (4)' width='192'>
      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
      AElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='test (5)' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAABJ0AAASdAHeZh94
      AAAgAElEQVR4nOy92XNcV37n+blr7thBAARAEgRXUdxEiRJLUoma2rrK5ZiucUXYnojp6XBM
      REe/9DzOPzGPjpjXiRj7odvddpe7XHaVSyslUqLERSJFYiMBYl8IZAK53vXMw82byAQyE5kg
      kSAFfCMYBBJ57z333Ps757d+f5IQQrCPfexBSJIkybs9iH3sYzex4wLgOM5OX2If+9g29neA
      fexp7AvAPvY09gVgHw2BEIJbt27x4MEDLMvi008/JZ1OMzo6yvDwMADZbJaPP/6YtbU1bt26
      hW3bLC0t7ei49gVgHw3D4OAgQ0ND/PGPf8R1XRKJBDdu3EBRFABSqRQXLlzg7//+7zEMg9/9
      7nd89913uK67Y2PaEwJg2zaffPIJ9+/fZ2VlhQ8//JBcLsetW7cwDAOAp0+f8tFHH5FKpfj0
      00/JZrMsLi7u8si/P5Akibm5OYQQrK6ucubMGT755BP6+/sZGRnBcRwUReHGjRv8+te/ZnFx
      kZWVFWzbZm5ubsfGtScEQJZlTp8+zaNHj/jjH/+IEALDMJiZmSGbzQLwzTffcPr0af7bf/tv
      yLLMBx98wPDwMPthkucDx3GYmpoiHA5z+fJlvvjiC9555x1M06SpqYnFxUWGh4eRZZmVlRXO
      nj3Ln/zJn5BMJmlpadmxcak7duYXCLIss7q6iizLyLLMuXPnGBkZoaurq+Q7oVCIwcFB5ufn
      sSyLSCRCOp0mGo3u4ui/H1AUhZ/+9KeF348ePQrAoUOHCp/19PRsOu5Xv/rVjo5rTwhAJpPh
      8ePHtLW1cfDgQb766isuXLjA9evXEUJw+PBhBgcH+eyzz3j//feZm5ujubmZW7duEQ6Hd3v4
      33s8zVgksg6DbQEkSWrotaWdToXwdbt97KMSHscNptdM3j0UbagA7KdCAB99O8XfXx/b1/V3
      EU26TFSXG776wx5RgaphdiXN0mpmt4exp+EIcNzdWYD2vAB0tYRRZGlXVp99eHCEwN45V39V
      1KUCua7N49ERniaSrCzO8fDhEIbt8uTxI7KGxdz0JIbtkkqldmq8zx2G5WBa+wl7uwlXgLtL
      Kmh9NoAQHOw7xNTEOJOTkzS1tpOYnSDU2smjkYdkLIvhe3d4PDGNvUtbWr0wLAfL2aXlZx+A
      p/7s1vtSlwokKyqLc+MoepDTr5xieXqURwm42BMhEQjg5jJYlkUwpDA1t8ih7g5c132hDcyc
      aZMzbWzb3u2h7FnYjovtil15BnUJgJVNkcxa6IEIczOTJJIOZ48fYfTBfTp6DtEScOiQAsxM
      jNPc1Fdwf77IblDL8VYfVd3z5tDuQbIRgKwoyA22xep66looxpkzZwq/+zG8c+fPFz4LA63n
      zj2PsTUEOcvGMPdtgN2EI0AIzxaQG+yL2PNxANN2MJ0XW037vsNxBW5eCBqNPS8Alu1i2fs7
      wG7C9wLthidozwtAznIw9wVgV+EKgSRJ7IYjaM8LgOW4u7L17mMdjgBNlhDs7wANh+MIFEXe
      hanfhw/HFWjK/g7QcIi83qnIe3oadh1CCHRF2pVg2J5+8rYj0FUFEOxvAbsHN68C7UZAfk8L
      gCNcNFXetwF2EUIIbCEIqPs7QMNh2y6aIqOpMtY+g93uQYAiSftu0EbDclxURSagKeT2o8G7
      ClWWdiUlek8nwDiuQFVkXFfZzwjdZaiyhLMLO8CeFgA7vwNIsF8TsEvwX3lF9hITG409rQIZ
      tktQV9BVeX8H2EUIKa8C7YIzYk/vAFbeCJYAYz8dYlehyNKu1AXXJQCOlWVk5DE5oRBTHdbS
      WfoP9TM1M0esqYVMYonmjh5A5sihgzs05OcHw3II6iqW5WBa+zvAbkKVXgIBULQg4YBMNivh
      KjqvHmvlxtACb106x8TYEI7rMDc1jqQFCUVjdDSHX+iKsIxheiF4B7KGuV8Vtgvw0qAFknC9
      yrAGP4P6KsJyGRw5iLCTOCaMjK9xpOcAo6MjqFqYV052s7CyytPlBIZpoigx4MWtCHMEhAIa
      EuAIab8qbBdgOQJFltA1BZfGP4O6rqYGQvR0d9F/6BCKJDBtl2BAI5fLoetBEC6Hoq10dxto
      emCnxvzcYFguQU1BuGI/JXqX4AqBLEnIuxQIq0sAJEkmVMSVGcwv7MFgKP+J90EgEHwug9tp
      mLZDU1jHdlys3SKm2eNwheeKlCX2s0EbDcNy0FWZgKrs7wC7BEd4KpAs7U4+4p5Wei3HJaAq
      2KqLub8D7Ar8QniJl0AF+r7BtFwCmoLtuBj7keBdgeOu7wC7oQLtaQEwbMcTANvdV4F2CS77
      NsCuwcwLgKrK2PupELsCfweQJAkJGh4z2tMCYDteNmhAlTH2bYBdgSMESp4NTpa82EwjsacF
      wM1Pvqp4atA+Gg8hwGdD3I18oD0tAHZ++w1o8r4NsEtw8tVgAMr+DtBYCOGtOqqynw69W/Bs
      AO/n3YgG72kvkDf5MrIk7btBdwmuEKh5WhpFpuHMEHtaAFwhkGUJRfa8QCJP0bePxqGYEVqR
      Gl8WuWdVIDdvbCn52Zfl3WEm2+so9QLtG8ENg+W4eVIsD7IkF4RiH42D41KwAVT5RTeChWBh
      dor4WobVlSXGxsYwHcHs9BSG7bC0MIflCDKZF7/tqOV4pFg+pF1Kx93r8NOhYXfcoPWVRNo5
      1GATU08egW1yoPcIibkJhB5jdOghgaDOwsICciDKyeODBfXiRYRpe5mgPmSZ/R1gFyCKbYBd
      oEaps0meTnxxnIP9A4RUl6XpceZyGhfPHCIdf4prZMlls2iSxvT8U/q62l7YksisYaErcqEE
      TwIs20Z7MYvXvrewXYFwvVJISbhYDg0ti6xLAHKpFZ6uZZHDa2SdNKs5wanD3Qw9uE97Vy/t
      Ici6KjNPJohEwi90kzyBjKYqhRI8RZGRZHm/LLLBEBj556Cgqy5p023oM6jrSqGmTt663Fn4
      vT//f2trW+GzMNDeeuF5jG1H4SfC+VBlaV8F2gW4JZHgxtthe9YLZNpuiQ2g7ZNj7QqK4wAe
      P+i+AGyCEF4TZSEEruvi5JmcXXf9hfU/F0IU/q9me2x0g2rKPj/obqDYC7Qb2aAvhcK7vLzM
      nTt3cF2XSCTC2NgYP/nJT/jHf/xH/uN//I8IIfiHf/gHstksvb29PH36lMOHD3PmzBkikUjZ
      c27cAYK6sp8OsQtwN3iBGr0DvBQC0NbWRiAQoK+vD1VVMQyDgwcPMjg4WPiOoijYtk06nSab
      zfLdd98xPz/Pn/7pn5ZNbzBsh2CRDaCrCsY+O1xD4beoWk+FaHxV2EuhAt29e5cnT55gGAb/
      8A//AMCTJ0/45ptvGB0dZX5+nr6+PmKxGD/72c84duwYAwMDVVUg2xFoSpENoMjY+00yGgrv
      6UiFBWo3bABJ7LCT3nGcF9IN+q/3ZjjYEuZMfysAv7k5Tn9HlNeOdm5x5D6eF1whuDGV5u1D
      UcCLCdycSXGlL9qQpERJkqSXYgeohqzpbMt4tTbYAAFV3u8R0GAUV4MVf9ZIvNQC4LiCv/9m
      ga8nV+s+1tzoBdp3gzYcrvAi8D52I3HmpRYARZZoj2h0RvW6jzWt0mQ4TVGwd6FDyV7Hph2A
      xjLEvdQCAN4qsh27yYsDrN++rsrkrH169EbCFaJ0B9iFLeClFwDbcbdnA2wQgICm7BPk7gKK
      jd19FWgbMF2BuQ3VxbQ9XlAfmqrs84M2GMVBsGI00hB++QXAFnXvAF4AxiuD9KGr+9QojUZx
      EAy83aDRdcEvtQC4QuC4ou72mr77rXjxCWj7O0Cj4e0ApVtAo5kh6m+SN/wYS9GIqQ6JZJYj
      Rw4xMTlNc2sH6fg8rQf6cRyHw/073yTPdQWOEHXTGgo/Blk0914Ucl8AGomNOwA0nhmiziZ5
      Ibq72niasrHsHGcGu7kxNOc1yRt9iAtMPR5BDoQJx5poi4V2tCLMzFOZmFZ9zdUc1/M+OI6D
      KLz0AttufJO2vQzTdpARJXMuSwLTcrDlxghBXQJgpFYYebLIieNHmZ+e4MlMhr7OZiYnJ3HV
      EMd6DrC4kmAtbZDJ5uhs8ULcO5UKYQmHgCpjC1FXFZFwXCTJa8jmb8FBXcN26zvPPp4NkgyK
      UloBpskyNLAyr66raMEoRw97qs3x4ydI5yyamyKsJhJEYs3g2Bxu7iCdXCMcbdqRARfDdQUh
      TanbCyTyRkDx7rtbjZr3Moo5gXw0OiV6kwCk0ykikQjpdGZTLr2s6nR2rieLNec7QTa3eAll
      KF5ENtbUvFPjLYHtCnRVJms5dbG62a5AlaWS76uKjLNvAzQUrrvZDdpocqwSAbAyCf72//tb
      Dg0cIxBt5f23LzdsINuB5Qh0RSJnlU+sqgTbESVpELA7qbh7HcXVYD7U3fQCqcEmfvLTn6Gr
      Mm6gpXGj2CZMx9sBJOrLHzE3FMOAtwPsd4lpLLwOkaWfKbKEvVteIEmWmZ2dJrGaItbcSn/X
      2w0byHZgOS66IoMk5T1NtW0BluOiKhtWHkXeT4ZrMBwB6sYdQJIwGrgQbQqEnR48QnN7N8dO
      nGrYILYLa9s7QGkahA+fJXofjYEQHiNfMeQG84NuEoDRx4+JhVSGh8caN4ptwnRcAoqEXKcH
      x3LcknJIH5oq7QtAA1HOC9RoW2zTW9De0sLs7BxNRWRXLypKm9zVPmmG7aJrmwVAVeR9Q7iB
      cF2vEL4Y6m56gZ6MDdFz/DyDr0g8fDjcsEFsF6bjEg0qaIpUV0Kc4wj0MsE5Vd7fARoJzwgu
      lQB5N71AijD57NrntIRlLCXWuFFsE54bVEZXZKw6Vg1zQy2AD0WW94NhDcTGkkjY5VygvuPn
      iLQukrEEB7u7GjaI7cJ0XDRFQlekujI5TdslFtQ2fa4q398dIJ1O8/HHH/OLX/yCP/zhD7S0
      tNDa2sro6CiXL1+mvb2da9euIcsyHR0dpFIpOjo66OvrQ9M2z9XzgFtmB/Ao0nfkcmWxaRlM
      ry1z984t7jwYbdwotonCDqDKmHW8uBurwXxo33MbQFEUhBAsLCwgSRK9vb2oqsrq6iqGYSCE
      IJvNMjExQTwe5/r164yMjOzYeMoVxMgSDd2FN70Fs4vLXLhwgYG+7oYNYrvwdUhNkeuqCfBT
      KDZCVZTv7Q4QiUSQ8z7Hf/tv/y2Li4tYlsXg4CALCwsEg0GampqYmJjgzJkzJBIJuru7efr0
      6Y6NqVw6tCo3liG6RAWyLYNoUOPWrVv0HjnJpbMvth3geREkNEUiVwet4UZeUB/f54bZ09PT
      5HI5RkdHWV5eZmBggJWVFSYmJnj99ddZXFzEcRzef/99+vr6ePfdd8lmszva3MQLXW5QgSRo
      ZF1SiQAsz02SNPL5GS9ud6MC7HwoXVdkkrn66gHKtW/SVPl7WxXW19dHX1/fps+PHj1a+Lmr
      a93u6+np2fExlVOBpHyWbqNa1pYIQNeh4xzoO0rWMNG18lw7uUwaNRjBSK+ymsxwoLub1ZWn
      NLW2k1lLEGluxbFMAoHAjg/ezb/IuiLVlRJtu6JsIExX9l5ZpOMK/jAa50xXmEMtwYZe2xWi
      bAKjJPmNM3Z+DJvSoW9/+RlPc3CgOcbF114r+Ztrmzz46ksOv/U/Mff4EW0HeonPTZJ0FOYX
      hpBlgZidRQ3GOHb00KZMv+cNfyXXlPqN4PKR4L2XCiFL3nzIu7DlC7FZBfLH1CgrYJMAtDQ3
      c3/4a2LnfrDpy7Kq09/nbY19ff0szE6ScMNcOHOSJ49S2GaOdCaDZNhMz0foPdC6YyWRrjd7
      uI6DjItVRzmjZbtIYvP3VRlyprUnyyJFmfnYabhC4Lo2tthMD2fZdnnOlOeMTQKwmrP53/73
      v+LunbubvmybGZ7MLaC7EZpVg5wFRw918OD+t7R29tAXkUnZMjOTTwgGgzvaJM+wvRiAqqoE
      NHCh5jI6FwjoGuoGQzikaxi2s+fKIk1bkHN2oxxUQisqS/UhyxKyrGx6PktLS8zPz3Po0CG+
      /PJLjh8/jix7nT4HBwdxXZcvvviCAwcOsLy8zJEjRzAMg/7+/or2xKY77ogF+Off/TOHjp/d
      /GU9zOvvXC38fnjA+7+zY71KLAwc6GivdQa2Da+qy5sgVZFqdoMKIbxjyyiYqiqTzFnPdZwv
      OmxXYLluXV605wG/hVW517KSCuS6LjMzM5w+fZrBwUEeP37MwMAAMzMzDA4OMj4+zvj4OO3t
      7WSzWT7//HMsy6KlpYWmpvIlupsU4ZWVFQzDIJNJP+Mt7iycfFkjUJcNIATISGXtE12V9xw9
      omG7KLJEtsH3Lch7fMo8h0plkV1dXciyjCRJmKaJ4zj09PQUzmGaJhcuXGB8fJxwOIyqqvT0
      9PDtt99WHMcmAZDVAAMDAxzoaH2G29t5eB1e1juLCEFNtoYjBEoF90JgD9Ij5myX1pBG2mzs
      fVeiRYTyrZKEENy5c4dEIsHY2BiTk5P09/dz69YtFhYWmJubo7+/v6AinThxgh/84Ae4rsvJ
      kycrjmOTCqRrCtOJDKFQAnhxo8HmBk+Oz+pQTrUpRqUYAHh9wr6vgbBKyFkuTQGF1TriKM8D
      5aLAPlRZ2pTcKEkSFy9e5OLFiwCbXmo/bvCjH/2o5POrV69WHcemHcAwDMaHvmFyof6mE42E
      7Qq0ohlUZYlaSgLcKgKwF5tkZC2XpqCK7VZvK/u84QoqGqb1UtTEszbXJlPktrF7b9oBguFm
      /td/938QDtbfdKKR2JjSLEu1dXovV4XkYy8S5OYcl1hAQZakfICwMfGAaoGuertFarKXCrMd
      r+mmHSCbmOM//+f/ws27D+s/WwNhOqUPy0uj3XrWXBeUMkEw8FWgvbUDGLZLYBtVdc8KUSEK
      DPm09DokQJa91J3tBF43vQmRlg4Gjh2jLbIzOeDPC3Y+FdpHrdum7W5mhPDh1QN8f9Ohy8Gw
      XYKqTFCVqpIMCyEYHR3FMAxmZma4c+cOuVyOTz75hHTa8xguLS1x8+ZNUqkUt2/fJpvNsrpa
      XpV28964clCk+gTAclxsV2wrjXqTACSTSca+u8WjqcW6T9ZIWBsM3kCN+UCWUz4PCPJqVKPb
      FO4ycrYgqEoEVaWqK9QwDO7evUsqleL+/fs4jsNvf/tbLly4wCeffALArVu3iEQi/Mu//Avx
      eJzPPvuMqampsudzqUxkptTJDGE6Xr+H7TRKKbEBJsaGUGMd/MVf/jtC4UilY14IeJxA6zOo
      KbX58AtcQmUgF/iF9gaEENiOi6rIhDSPYrISgsEgAwMDhZ9jsRiDg4PcuHGDVCoFQCAQoKWl
      hYMHDzI+Pg6ApmmYpomul9qUrlvZFlMkCaMOmkrfY/TMAtDSHOXaP39A/OlTOnuP8Mqxw3Wf
      sFGwHOExCeehKZtdZ5WOqywA22u497JCgKc7A2FNJl7FFZpMJnn06BG5XI5YLMbExAQXLlxg
      bm6OH/7wh8zNzdHZ2cndu3f5yU9+QmtrK8FgkMePH5dNsXDLcAL5UOumufF2se0QapWMbH5m
      krRhedG2uk/VWNgbjOBayyItx93EC+pDbnA10m4jn0+IJEFQk8kmK89fLBbjz//8zzd9/otf
      /KLwc09PD6+++ioAp0+fBijsGhvhlOEF9aHI1OTS9mE4gqaAsi0jvkQAeg8f50IOgsEwoeDO
      5/M/CzbaAJpcWz5QNVffXlOBLMfLp5IkKa8Cbc8DNr6cJaDKHGyu/Z3x3NHl/6bUyQ1kOYKI
      ptSVEu+jZCkUroOdyzDyaLyhZWn1QggvgavYmK21LnhjBLkYXg7KcxvmC4+s7RLME4QFVRnD
      2V7q+shShtGnmbqO8ctZy6FedjjLdYkFZHLb2AFK3oSVpTlEqJ0LpweZnZ0re4DrOAgBrut4
      OdsILMvCFQLbtrwOjA3g2feS2tah15gR6jjrSXQbIctSvhppb+wCubwLFPzdb3uFKE1BlZZQ
      fanU1XKBZKm+VqmmLYjqSl3cUD5KRr0aX2ZmKsGCDHJ4c5ML1za5de0Tjv7gJyyNfYdhmLQd
      6GYlsYqu6RiZBOFoK1ogzMChnW2St7EfgKZItdkAFRghfPg06XoZ8tzvG4wiAZDqfOmKkbWc
      uiPIbpWIvFwHOZanDQhC6vYobUoE4Oyb73P6kucKk8sUsciqzpFDXmG1rIc43dfBjaGnvHXp
      VSYeDSNLEvGnC7iSihYM0dPetKMVYa7rYAvvpVckgVlDVVi5xmzF0BSJbM5CDn7/d4GsZaPJ
      UmEuFBkyhlUQilqRNh2PzaGOijLbcZEVqewxritw3crPqBh+FrCCi+nUX9VW2h9AkrEyy9z4
      +ht6B05xerC/dNBmhvHJaTQnQsQxuD+6yqkjfXx371tirR0c6+ogkbGYmZlBlqQdqwjze3wV
      VxMFtDzf/BZVTY6AoK5W/J6mKoh8A72NGB0dZXh4mAsXLjA0NEQgEOCdd95hYmKCkZERIpEI
      q6urXLlyhZWVFY4dO/bsN7uDsFyJ5uD6XER0BUtIROusDDMcgeXWXpEHICQbXVXKHiMkgaD8
      M9gIxxXIsoSmKt6OIisVVdxyKLnCysIUt+/cxVajpJLJzV/Ww1x+/yebPu/qWk+bDrfAwYM7
      rP7k/9/U5K6GncZnlK4EvQo1ytLSEpIkEY/Hefvtt/nggw8Az9WXTqexbRtJkvjv//2/09zc
      TG9vL6FQCPCoCX//+98TjUZpaWlhenqan/zkJ8RiMWZmZrhx4wbd3d48hsNhLl68uOO0IDnL
      LVntQ6pMxnJpDdV3Hncbzcqr2QD12GGCdVXYN57rEYCSN0FC4KJg5HK0tb24BTG2s7nJnSJR
      UzboxjTqjajWKikej3Px4kUWFhb44IMP+NnPfoaUd53Oz89z7tw5bNumra2Nnp4e5ufnC8f6
      tIPpdJpMJsOPfvQjxsbGsG2b4eFhmpqayGazTE5O8t1333Hnzp06ZmR7MDZk1IY0ue7SSNNx
      CapK3YS2jluZ96eebFC7KKKs1VEa66NEAEzTRAuEOX7qFfq7d76ud7soJ+VyjaSq1fLQoXpV
      2OXLlxkeHub8+fMoisKtW7eYm5vDsizOnTuHLMucOnWKP/mTP0GSpBIiqmQySXd3N0IIcrkc
      Dx8+pKWlhUQigWEY3LlzhzfeeIPu7m66uroqJpE9T5i212DER0jzdoB6kLNcYkHF8wzWIQTV
      0qH951PL+ax8QFSSJAJqffxQsEEF6j50nO5Dx+s6wW7AcjYHs5Qa6wEElQtioLoK1NnZyfvv
      vw/Az3/+8/VzCsGBAweAdXa1K1eulBzb3d1NLpejqamJcDjM/Pw8/f39ZDIZfv7zn/POO+8Q
      Dod58803yWazm3Jn/OtsZEzzdyDf0bBRuCsJuysEjqAkJhLSFJbS9ZECpE2HkCZj2C6WIwio
      takfLpsb5BXDT0vZSpsxXYGe/5Iu18cPBXU2yn5RYLmliXDg2QAuW1PqOS5VJ94LqNU+ide/
      fcx/+eNt/u//81eoVYx9SZJK0gL8n322gljM42GNRCKb+jP7MAyDTz/9lHg8jqqqGIbBX/zF
      X7CyssKdO3eYnZ1F13X6+/tRFIW33nqr4njKlYaGNLnuqirDdglpMmnTa1ISqNGD5LjV8/cV
      Ob+gbSEBxSRnwW2M/+UUgAopzb4RVM0nLag+8VqdVWGL8RT3H81u24deDkII/uneAtGgytUT
      HYXPg8Egx48fp6mpiaGhIRRFwTRNOjo66Onp4ZVXXuGLL75gbGwMWZaJRqOcPbuZ3gY8AtqN
      tlBArd8GyFguYU1BU5y61A9B5ZpgyNOk13A6y6HwvHVFIm0+gw3wssDLBC1DbltDCN1xKydh
      QZ5ipY5VZHRqiWgkiPacA2ems3mFFkIQj8dpa2tjcXGRiYkJ0uk02WyWhYUFent7uXr1Khcv
      XkRVVRynsiBb+eYixQiqnipTjy6ftVxCmlI4tlY4VVIhoPbajGIVKKBIdSfEvZw7QAVyW2WL
      Ujp/QqvaAJpSswrkCsHQk8Xnuvr7iGcsujckl0mSxGt5vtZf/epXJX/z2RDa29tpb2/n/Pnz
      Vc9vVkgL1xQvEU2uMbLrCYDfpKT26G0lYlwftaamm7ZLk+69xn4+Uz14SXeAzasXgCZXb3Zd
      C21KPQ33JufjRMIBmqLB51pMn7NdUoZNKrf1OR1XsJAy685f8vKAypNS1ZNSkLUcgppMeBsu
      1HLEuD5q7RVmueuCXKvaVIyXUwAq6PlbFcVU4wTyUU9h/Ddjs7x97iitsTCrqWxNx9SC+VWD
      I+1hjBqEKpGz+ejRKolsfSkAhuOWTXkI1rmS+0ZwoM7VtziAVQ5Kjd0iPZe493MlRrlqeCkF
      wK5gA3htTitPQKW+AMWolR1OCMHn957w+qm+5y4Ac2s5DreHasrPj+gKAVUipNVng+Ss9VTo
      YmxVGlkMP6Yi4QlOPTvAVq+pUmNKtOVQiAkpeU7RenLPXkoBqOQF0rfYAWoJk2tVIsEl53Jc
      1jIGh7paaW2KkHhOAiCEYDFpcrQ9jFlDfr7leGkI9fq/DUcQKDOH9RTGFBe16HX2akZUb0Kk
      1GgE22L9mUqS5BVG1UOpUvM3XyBUepG3Somuxgrno9ZWqd+MzXG8vxNNVWiJhVhZra8gpBJs
      11MrmkKaRxG4hTpi2C6OoG5uT8Mu77MPaUrNAlDMsh3Q6itI2UoFUuWte4W5+QKG4meqK1Jd
      43hpBaC8DVDdCK7kPSqGrio1ufPuPprn7bNHAGiNhUlmjC2PqQXJnE004Hk1AurWZX6+MZs2
      6zPCi3XnYoQ1mUyNKlAu7wKVJKnmFbtW1JLc6Nl0pZ8F62yZ+1IKwEZWOB+6Up3drFJfgGLU
      0inScV3ujs1z9qiX9tDRHGF57fnsALOrBr35Xl2BGpr2ZW2XzohW80vro5I9FNRkMjXuJhnT
      JZSXonobXLsVegP4qIUZwhGbYwn19ovbtgAszU/z8OEQhmXzaHSEZMZg+sljMvWzqE0AACAA
      SURBVIbN2upaTecQQvDdd99x/fp1kskkH330UYFjZnR0tBD2v3XrFul0upAg5lRRgapNmuvy
      XGyAp6sZOloiRPL8qW3NYVbTuarH1IqFpEl3k+f/D+lbr8ZZy6U9rJGqQwVyhaiYjKYrcs06
      dNZ2Ceue8e03uK7FAPXUn/K9AXzU0i61nCocUKS60iG2LQBTk5MEI02szD6hpauXJ4+GMV2J
      0e9uMzYxieWsT4afrLXxH0B/fz/JZJIPPviA1157jWvXriGEKOTGf/LJJyQSCT799FOmpqYQ
      QhQEYOP5PFptt+L1LMdFk+WKfxdC5FMhKv9dCMHt0XnOHOkq/N4aDbGazlU9ptZ/qzmL1pCK
      EIKIrpI1K9+PEIKs5dISUjHt6t8rnYf1nXDT/StSzefKWQ4B1XsOEt4u4D/3av/cvPFc7Ts+
      1eVW96Eppe+BFwyrbR7gGSLBF9+4wsrUMENPHS72BNEDAYSVxnUEkaYI03MLHOrp3LIkcm1t
      jXQ6zYkTJ/j8889Jp9M4jkMmk2F1dZW+vj6GhoYACIVCZHPeSlsuzK9IngFZKQXAsB0USVRN
      EVAkr2yy2ne+HV/gz997pfCdpnCARCpb9ZhakDYdr5IuP8aQJrGWs6qeN2c5hFXPvqn1+jnL
      RZWkst+X8VZy23aqGqkAGdOhI6wUzhNQJHKWjbzFumq5nsBUG68kXCyn8rP07mPz81QkgWFV
      P64Y2xaA6SePSKzZXDx9hEdD39HZe5gm1aazN8T0+CPaunu2LIkUQvDkiddQz8+KvHr1KktL
      S0xNTSHLMsePHycajaLrOlNTU2h6AFnOli2XC2geoVKlUjqBhK7JVUvtZFcg8mMut0XnTJt4
      yqSvs3m9skyS8q175IrM07UgmbLpiOqF8UWDGnOrRtXx2gJCuooqS7jIVQv+fbiWTVCtPA8B
      VcZB3rI22HQhrGuF84Q0GVtsXcpo5dsyVfueroKgesNCB68Yp/g7YVxM16q5PHPbAtB/5Bh+
      xfDZc+dK/vbKq+UzEDdCkiTefvvtwu+HDh0q/Fzcqby52WOoOHr0qNfTtsLKFMjzgwpRPiXa
      cgUhfeuAkcRm1gkfj+cTDB5sLSmrlCQJRZZxXPeZBGB21eBg03r+T1hTyG1hkPv8OmHdI7et
      RQByFVygPnTFoxksFygrhmm76EXpFIEaPWiuWz0TFGpjhvDymcobwZXegU3X2fIbu4DhxTQP
      FlJl/7ZVLWm1KduqHNI7ifdCV3Lp3Zt4yvm898eHLEleKeUzEosupUw6o+uFMGFdqeqR8cco
      SxDR5JpdoV4MoEpVnLb1iyyE2JRQF1Rr88GX895sRC3kWFaZ5+n/VuuTeCEFYCphMLdmlv2b
      11uq/ORtJfG15AJJVOfIGZqOc7KvbdN1I6EAmVz5MdcCNx8ACxftUNoW2a25/IssSRIRXak5
      GJZzRFX1ppZosJPfIYvns9ZundX6g/lQZG+xq2Y/WvbmHQDqqyl+IdOhc7ZDLFB+aJ4vv/zD
      k8jnglA+zG6768UTyWSS69ev09HRQXNzMysrK1y+fBnTNBm+fZ0bTasoklcGKYTgxIkTxFMG
      oYBGU3hzuWJLLEQilaOjeXu08omsTSyolrxQiixVpXz3U5EBIrrMXLI2ATRtl7ZgZVUwVEMw
      rBzNfEiTWc5sXVLpMUNvtRBJFRchH2aZykDI14fXyA7xwgmAYbtkLRdFKv8AHJeyEUzwdfbK
      N13cXDsWixGLxUilUpw8eZLHjx8DoOs6rW1trK2tEQ2HuHv3LqZpEg6H+fhRhv7OprI7TWs0
      xFpm+7GAp2mLrlipYGmKDPla53IvTK6I2zOi1bED2NX1+7Aqs7BFbXC5umy9xjZLjhCoW+zW
      njpbQyBsowokSeiyZwdUWENL8MKpQMsZi56mQMGQ2Qgzv/JMTU3xu9/9jqGhIT7++GO++uor
      79UXgg8++JCRkRF+85vfMDk5ycOHXr+z4lUhl8tx9uxZlpaWiEajhfNblkVbz2GWV+L09vbS
      3Nycb/gwwcxymo6m8qQ5LVFvB9gu5tYMumOb2ZWrrcZZaz0S66stWwWihBAVE+EK19S3zgcq
      5hX1UStHv2fHba2KbrUDVGqyEVAljBqjwS+cAMyvGfQ2B9Ar9KzyV57e3l76+/tZW1vju+++
      Y3V1FSEEqfhTstks8XicUCjEv/zLv/Dtt9+ytLzC04xV6IfrOA43b97k9ddf5+uvv8Y0Tebm
      5kgmk8w8esDFixfp6+vj8uXLtLe3c/qVV3CF4P2zvWXH3dYUZi29vXwgLwBm0xbevGSFdKVi
      ZDNnr6tAslR7FdVWL2AtKdHZMunUeo3lpLWwPfjqLHh8TNls1gv8ZdezbldXVzENj2vJMAxM
      00QIkW/4V9tu+EKpQEIIFlMWpw5EmFk1SBoOwQ157r4n5+HDh2iaxvHjx1lcXESSJCzLIrv6
      lNRKAuE6DAwMIIQgFAqxuLCAKncSyRuZkUikUEZ45MiRkmucvvgWhwcGCIV0QqEQra2tPF3L
      EdCUikZ0JKTzeG6l8PvQ0BBjY2O88847/PGPf+TIkSNcunSJ69evMz8/z7Fjx3jw4AFXrlzB
      FjKKHC577pCqYFRYjXOWSzBW1Co2r/tuZeiLLYzQWjwwWcslvEEAPKN9a2aOWoxg8o6ITDbL
      yMhIYc6Ghob4sz/7MxKrq9y5/gnJoQDhcBhFUQiHw7z99tvocu07wAslAI7rGVdBTSYWUEga
      Dp3R0u/4tQB6NMro6CiRSISzZ8/iui6JRIKBE69w4q3zxHQJwzA4e/Ys9+7dY2DwGNMTSZqr
      GH8+AqqMsWEFfLKUZLC7ueKDbY2FSOfW9eZTp04xOTnJ8PAwv/zlL/nyyy8BL/Ld1tbGnTt3
      0HWda9euYcpBTl35UdlzRwKV3ZtZe10FkiSJkCqTtqrHAnwnQbUX0ONYqvx38HafWKC0k6jv
      QatGegVbF8QDGLZg1XBIukEcx+HkyZOcOnWKmZkZ71qygpFLAwF0XWd2draQdXDqtbdIZWvb
      AV4oFWgpbdIR0ZElj7R1tUzPKq8AAg4fPsyPf/xj+vv7OXz4MAMDA3R1daFrCooWIBKJ0NbW
      hiRJnDt3jqQpaA6pNQVHynWMH5tb5cTBlorHRIM6GWNdAJaXlwv2xe3bt7Esi0wmw9mzZ8nl
      cly9epWBgQH6+vqwBHSEJO7du4dleT0Wvv76a2/30hRu373LyMgI9+/fZ2Fhgbm5OS8XxxYl
      akhUV7ZkdvMzaavNg5w3QKulNxerX5uO3Up3F6JifzAfAVXiQERleX6WoaEhMpkMd+7c4cGD
      B8zOzjIzN084FEGWZd59911eeeUVWltbCQQCnipWY0r0C7UDzCdNups8T0gsoDKZ2KxT244g
      UsWDoVcoiknkbNrL6Nhlz7FBAIQQTC+n+OXrhyseEwnpZMx1gc3lcly6dIm+vj5WVlbo6uoi
      l8sRjUY5d+4cBw8epLOzE1nVeXJ9hFhA5frwMEeOHOHx48c8fPiQ1157DTudYPj+N7x25Mcs
      Ly9z//59Wlpa6Oj0mOiKX+OIvnUwzLBdgltEq72WSZ4hHKkQOTfs8rEEP4KrVvHG1WIEy5JE
      W0gl3NTDX/3VXxU+v3jxIgCRnMPP/vQgZ7vCAFy6dIlLly4BHldRrRyhL4wACCFYSJqc7PRu
      KBZUSBn2Jn1yq6KWSvrrStbmWFuwprGoG9otJbMWAolIsHLz8HBAw7Sdgsuyt3fdWPa9TIqm
      ewU7gSijT7PMJy3WcjmCLZ0EAkF6e3uxbZs7d+6wsLBAPB4HK8ehwVOMjY3R0dHB06dP6e3t
      ZWJyEkUqDciFNYXEFsE4Y4sgmI+QJpMxnYoCYJexNSRJQle9BahaqoWfDboVYgGlrBYA697A
      cqinLPKFEQDDEdiuKERCVUlCsFmf3KquVy/TK0wIwVrOobnGNj66opQEoKaXU/S2bx3gCuoq
      pu0Q1Mtf585MiscrWbqiOp1RjTNdEU8tA1LJNSYnJ5FlmX//7/99wchvb29jZvE2Zy8OcPr0
      aVpbWxkaGuKVcxeZj5fudCFNrtrsGvL5OzW8fSG1+rmsCs8hoGzNKlGLDQAQ02WmVsuPwXQq
      Fzep8nptwlYq7wsjACtpi47IeiBIkkCVvZe5eKXZivpQK1MR5O8IlVaMjdA30CNOLKU4cXBz
      y6iNCOoahmVXFICILnOmK8Kr3ZuFqbm5uaQNqd9mNOIKzr51lUuvdiBJEsePH+f48ePEszYB
      NVfygItjAZUefK6GJDfw8pCylotlWfz1X/81/+k//Sccx+Ef//EfQZIZz2ro0xGi0ShvvPFG
      4Xq1uCBr8gLhlWfm8kx1G1Umu4gRbiMkScprArAVWcYLIwDzSZPuWLEASDQFFVKmTVBb/3wr
      akNVljYlkGXKuOyqYaMK9GQpyVsnuqoc4SEc0MiZNpWyIdKmw6GW2tQwH5JU3rPiBcFK50GV
      PYqSal4YwxY06VvPRdZyWEpbrIx9w9GjRwtClcvlsISMcGBqaspLHHTdAhFvQPEKiqrBqcEG
      gPUXuRzrtOEImgPl78NxHD77w2+Zagny61/9z8Tjca5fv86ZM2f46quvuHTpEpmMV8L6zAJg
      ZdZ4MDpO+4EeksuztPUcwTENDvZs/cIU42na4uSBcMlnTUGV1ZxDR9EL5Yjyxdw+dEXGdEv1
      xpWMTUuw9lv19FhvBzAsh7WsRXOZ/J+NiIYDJLMmXRV6iySNyjp1JUj5f64QKEWGpeeF2Xwu
      nxkjJJe/jumIkhTmSugIa0yvGkQlieHhYV599VWCwSDRaJR4Kstbb7+LND9EOp0mnU4Xjgto
      0pb8QLUEwnyE8z0LNtoUleq7E4kEmUwGI5shqXrP0G82MjfndT795JNPCAa9heiZBWBuYYkT
      r7zKk9GHSFqAiaFvkfQo4VgzsZCGZVmYpolhu0ytORxtVVFkuaRSzBZeKSNWjrQFct5HpmOz
      nHToCQlkWcZxHEzLxszlkByl5Bz+MY5lk82ZZDJy4ZjlpElLUCaXy5U9xm/rKuebRru2RdZy
      yWQyTK9kONAUJJf1VgxFUbyyvg3HeBVcMkvxNfrawiXXURQF1xWkDQvJzpF1S68r5QtqSiqb
      lPX7kyWXZCZLSPXmTVEU1rIGTbpMOu2UjEEVDolUFimkbhqDEN4YHFOQFUrZMfjHtGreKn3q
      zFlOnjiBpmnYts3ly5dZygoMReHE2bOFtlC+EAjbJWuKwu8b51iSPP4g08iRtjdfd+MxIVnw
      NJklJGmF+ZEkL0vANV3SrlFyf5ZlkU6nCYYjmMJheXmZSCRCOBwmkUhw6tQpFhYWyOUrC59Z
      AIKqxGoyiSPrdDcHkVwXtDDxxCot0a7C4AJCsLyQIBLUONpeqgbMrhl0RPRNvPgdqCxkMoTD
      6zuDJJtEI+WjpgBRbEi6JcekFyxOtkQJBmpbfWORMNm1LOFwmNnxBMcPtlTk7C8Zb3MUG7mw
      uhTDsF10NVvTeTaNJ2jiyhqhUJEqiE1TOEAkUuqZak5LuIpKMFh+x3KxaI5GasqUPNgkWLMV
      Drete5taW1vJreQIOoKWls15UYZk8TSXq3qf0mqGcChYNo6wEW2SzULK2jSnVjxNUyS0aWcI
      hUJ0dnbyA1P2KuVUlddff53x8XEuXLiA4zicOXOGJ0+eAM8hENbZN4C1FmdwcJBIrJ3BU6/Q
      FFTp6zlQ8j1ZknjrSDMPFjLEN6TMLiStEv3fR0RXSBX5tb2C6urb50Y3qCtE3TaAzy8khODx
      YpLj3U01HdccCZLKls+iLE5drheRMslpXrbj5vN5dQHlYwGu8PIra20i19usM726ORZT7V62
      qmGAPKNcjVMRKdO2yS+sr3Yf/f39NHd209LSgqqqHD9+nFAoRDQaRVEUjh49CjwHAZAkif4j
      AwQ1hWAkgipJ9PT1l/XUBFWZHxxp4vqTtZJg1VLaojOy2cfue218sis//bWaa0vdQI2Sy+uP
      W+XHFEPL8/G4QrCcNGiP1Wa4xsI6qVx5AUgaNk112CHFCGrKJr3a84NvvqewXrnP11bdcTai
      LaSxZjibXmijTCaoD60GN2gtgTAfQdXj/C/OcvV/qnaKQIVkypk1kxtTqfVquppG8RzRFtY4
      0Rni5lQSV3hUJbZb2TUXKEqxdbfwAEE+CFL0ANYMh6YaVR8ffiR4JWUQDWo1C09TOECqQiBq
      zXCI1TkOH+EN/n1XCI8guIwA+K1Oy+FpxiJtujUzKCuyREtQZWXDjp2tkAYBoMuejl8tLbtW
      NyhQaH5XXGrpn7raKQKKvCkhTgjBXMqiNbTuTtiVXKDjHWEvo3Mxw2LKoiOiVXyxowGVTH5L
      LyZjrQRFlkpK6eJZm9YaA2A+VFnGdl2ePE1zvKd8AUw5BLTKzNJrufoF0YfXvnRdrfEzPsvN
      WTWC4LTl0hJUt6Q7KcbBZp2ZovJUIYTXXbKCJ0mWJSRJrpiW7XHy1L4DgLcApIvuvxbx3dgy
      VQjB47hBTFc42R4sPNNdS4Z7rTfK7KrJw8UMXdHKLsaYrrBm+AJQvbuLD18IwMsBaq5T9fAI
      cgXji0mOddWm/4PHK1pJ/83a9btAfQTUUuLZctVYPtR8c7mNiWyuEMynLM51het6+bqjOk+L
      qsME4FI9kqvkI7HlsBUpbjk0BRSSxvrC4qXEy9VVYUnCLpqDRM7hadbmWFug5LhdEwBNkbnY
      G2U+ZVV9qWOBdUPYqUDouhFe4Mi7+bTh1r3yqvnCjumVNAfbwlsfkEdALd9eSQiv4L2WCGz5
      85YWmni+/Ap10ZKUj8YKfvOb3zA0NMSTJ0/4f/7fvyWqy4Q0mZmZGf7mb/6Ga9eu8cEHH3D7
      9m1su3zOjW8/JQ07fy+AkKq+xJpc+vJtGuPWt1yCqC6TLDLsK3HDFkOWKKR0m47Lw6c5Xu0M
      bXrXdjUdui2s8oPDTWUNYB9+XQDUxu8PPrd8nuFsi9SJclBliUTGJKAq6HU0v1MUL/ZgbeDy
      ydleK896Vt5i+L2vfLWuUnujwvVWlxh9PM4bb7yBbdscPnwYKdTE0dYArusyNDTEgQMHMAyD
      mZkZ7t+/z1dffVXxfH3NAeaT3i7g5FOZq92JplRuVCJE9dZI5RDRS1kqKjVJLIbfNtdxBQ+W
      chxu0cvuwA0VANd1WVtbQwjBxMQEpmFwtC2IbWSZmZnBcRzm5uZwHKcQqAgUteypxghRDL80
      cM1wiASqb5XloCoSy0mDQx3Rrb+8AZGgVpIWDfWnYmyEnNf3/XcqZwtCVQSz+0An0fYDTExM
      MDU1xfj0HHOzM1jpNVZWVrAsi7t373L58mUOHz5MV1dXITWgHHqbdGaTZn4n8+qJq82pXsYA
      9SGg7i1AzWd3+guA6YiSDveVEFAkxuIGqixxMFp+kW1oLtDw8DAPHjzgxIkTZDIZHjx4wC9+
      8Qs++eQTAoEAN2/ezGdAtnPkyBF6enrQ835lxxU1ST5QIFZdzdm0hSrvLpWP917Wwa5Y3cdG
      Aho506G5SHNKPoMHyIfvX1dliaztEquSz9MU1ElbDv39/fT39zORcvlffvFTVEVBCwb5N//m
      3/Dee+8RDAZ58803C9HcSgj7neBdUbEQphjVusVUYtyrBjlf7Za1BWFNqpiJWnodT1gW0xZv
      9UUr3l9DdoBsNsuNGzc4deoUTU1NRCIRJicnCQQ8FoRoNEo8HvdC/GtrDA0Nce3aNVzXRZIk
      gvnU3FpVIH/F2I4HCMBxXGQZDjSXZ4CohmhIJ22Uug2Thl2R56hWaPJ6kU7OquyHB59JQtDf
      309nTy8iGOPCyaM0NzcXIuShUMib23x+T9XIrSTRHdVZSltbql+QzwitEgvYjiIY09dV4WpO
      AB8CL2W7J6pVXTQbIgChUIgrV67w7bffMjw8zNLSEuFwGFVVmZubo729HV3X+fGPf8ypU6d4
      /fXX0TStILWxgBfdrFWf91fLRNauqQZ4I+JpE03ZXBZZC5pCOmmjVAV6FheoD69xR5ENUGUV
      Lo4cP0kYHG4J1K0GbsTBJp3ZNasmY75akwpB9f7AlRALrBvCprt1Qp8sSVzpjTDYuplqphgN
      VYHOnz9ftoFzT08PZ86cASg0gj57dp1g1w/vWy5VOS19aLIXBTQdsS3du7ctzP/1p2cJ1Nl5
      EbyU6Iyx0QZwSigPt4NgPsDVztYcp1o+HcRyBAspiyv99dsyG9EaUrk7l0ZXpKpOC/B2gHi2
      UjpG/UYwePXOC2lvXsvd/9raGrdu3eK1115jZGSE5uZmTpw4wcrKCl9//TVnzpxhamqK1157
      jXg8TleXl6f2QhXFV0Is7weule5OUyRSplOTsAgh+OKLL/jDH/5AKpXin/7pnzxXoqZw69Yt
      /vmf/5nHjx9z7do1ZmdnqxqLANFQqRFcaORQRypGOUR0ucAPVK4csRheUTtMr5l0RrQt+6LV
      AkWWaAqqzKesmmyASgRZ9aRCFyNcVOxTzgawbZtXX32Vr776iqWlJR48eIAQgnv37q031LAs
      fvvb3/LNN9+sZ/PWP5TGY10Fcmt6kTRFZilt0RTcmgVCkiQGBgbIZDKk0+lCKi54O5au6wwP
      D5PL5bhx4wbDw8NVzxcNaGSLfNZGnsalnlykcvCpx/2EtmqaoCRJ6IrEeDzHkZbqKkA96I5q
      pM2tSyrLVeX5qCcNohj+MbZb6gZ1XbfQWOXu3bu88cYb66nZQvDuu+/y9ttv880337CyskIm
      n108Pj4OvEAVYdUQVDw/uOpINdkAqiwRzzj0NlV/+PF4nPHxcQYGBggGg6iqWtJYwTfcw+Ew
      //qv/0o4HGZtbQ3XdUsEpRjhgEbGWt8BkoZD0zbskE3n1WQWU26BE7+aYPsthqK6sqXBWg9a
      Q2qhOq0aqnWMdETt2ajFkCSpUCJZHBCVZZm3336bL7/8Etd1WVlZIRwOE4lEWFhYIJvN8vDh
      Q86ePYtlWbS0tHDjxo0Cu8S2BWBlaY6Fp6scPX6C+clxDvQdJrE4S1t3H1YuU8K3+ayQ81TZ
      tXqBNEUiY7tbeoBaW1tpaWnhq6++IhKJFHaBoaEhmpqasG2bBw8e8O6773LlyhVkWWZlZaXi
      yw8QCajkiupykzmb2DPq/+CnQ7hlOTnLQQKag+W73GwXquxRlWzVDlWRKzM7e/OyvevHAgqJ
      nNdGauN9vfnmm4WfBwYGSv7mpz77+OUvf1n4edsCMDk5SWfvIIm5CUKtnTwafkAoGmHp3h3Q
      I7xy+uS2JL0cZEkiqMmkTKcmVUKTvY7h0RpqXyVJ4vLly4Xf+/v7Cz8fPHhw0+fFdCdlx5of
      n0/Rvmo4dGxhNNYCLV/kbddAayJJEm/0Pr8FyEdIk3lvYOvcKEXyIsblivNraY5RCVFdZilt
      15XSvRXqFgDHzDA+/ZRXzl5geXqMRwmJi90REoEAbi6NZVkEQwrTc4v0d3ds2SSvVkRUmeW0
      jes42GzRvcTNN44QLnYdLTOfBwplnraNLEmsZS0ON2sVc23qODG24+K4DprMpvN99NFHHDt2
      jEgkwvXr1wur3GeffUZ3dzf379/njTfeKNDB1wLLsviv//W/8pd/+Zd88cUXtLW1ceLECb75
      5hsmJyc5cuQI09PTnD17lmg0SkvLOnOeKnsN8zbabJbtIAmxrfkIKrCac9CVzfe/XdQtAIoe
      5tjRQ0yNjxFPOpw9fpjRB/dp7+mnNeDSIQWYmXhMU1Pflk3y6kEsqCInLTRV3bLZ9app4rge
      f+SzGp/1QgiBJMvI+WtnbEFzSH/mcSh541eWFSL6eoO5VCrF6uoqjuOQTqd5/PhxwZ5ZXFzE
      NM0CU/ZHH31EMBikv7+/0JSwHBzHIZvN8u233xKJREgmk6RSKUKhEKqqcv78eRKJBHNzc8iy
      zJdffklXVxfvvfdeYcXXFRkXGXVDyoYkCRSlciPDaogqgpyTIxpQtnV8OWy/Sd7AepO8c0W+
      /TDQem6zr/9ZEdUVFLk2F9rx9hCHWwINf/khTyuoq2Qth5CmIkvStrwe5c6rq14X90iRajc+
      Ps7q6irxeJx4PE44HGZ4eJirV68yOztLIpEgmUwyMDCArnts1xMTE5zb0NiwGIZh8OTJE5aX
      lws+9XQ6TSKR4NKlS3z++eecP3+eWCzG73//e5qbmwuuRl8AKpVG1lLTUQly3hB+VpdyMV4K
      LxB4XpBy2ZRCCD766COam5tpaWnh8ePHvPPOO4XcIlVViUQiqKpKMBikp6enqhH7PBAJqGRN
      j62h3kzUaggoMmuGU8Jx6gcMc7kclmURi8VYWlpibW2NV199ldOnT5PL5XAcp8CU7QcdKyEc
      DnPmzBnOnDnDW2+9RWdnJ6ZpkslkmJ2dJRKJcOfOHa5cucKVK1cIBALMzs6WzGulaHA95ZDl
      ENPlLTWAevDSCEDWdjHy/4qjqpZlMTIywk9/+lMOHDjA4uIiMzMzHD16lJMnT/LZZ58RDocx
      TZNEIsF7771X6EK/UwgHNLKWgyvJxPTn54kJqDKJnE1A3ZyjFAwGC8wJnZ2dhc9VVS3kXMF6
      pL1W+OfSdR1d12lpaSlxDvjevo0qVWUB2LqstRpMV5Aznt2m9PFSBMIAOsMqPz7aXBKFHB8f
      Z3p6mv/wH/4D9+/fR+SNK8PwmAxu3rzJG2+8QXd3N4lEgs7Ozi0DWc8D0YCnAiUNh9hziAH4
      8NuQPk8vyE6hEkX5diPBPgZbAxzbIr+nHuzqVFqWxYMHD3Ach3g8XiA+isfjPHjwANu2mZiY
      wHEcL4K3YTUdGBigt7eX3//+93R3dzM2NkYymaSjo4PZ2VlSqRRjY2McPXqUt956i6amppIG
      3DuFkK5i2C5Jo/5yzGrw3Z+Nt2zqR2BDTa6PWstafUxMTBCPx7Esi9XVVZoCCk0BmeHhYQzD
      YHp6GtM0SSaT2xqnJJ6Hj7IKHMep6AX6/e9/T1tbGydPnuTv/u7v+PWvIqEpWgAACDVJREFU
      f01zczNzc3PMzs7y8OFDOjs7C56LgYGB5xrY2SlMxTPMJHKYKFw4GKHpGVOhfcwlTUaWc/zw
      cOyFn4fljM1s0izw9/sYWcnRFlTpqKFXw6NHjxgbG+P8+fNMTU0Rj8f56U9/yu3btwmFQgwP
      DxMMBlEUzyv0wx/+sC6PoyRJ0q7sAKZp8vnnn7O0tITjOExMTPDqq68W/h4OhxkbG/NYkONx
      xsbGqtatvmgIqAqG43pZoHWUVG6FoCojs3VD8BcBldgpXLc2FejOnTvcvXu30E7q4sWLBddn
      d3c34+PjpFIpXNdleXmZhYUF7t27V/c4d8UI1nWdt99+u+A9OHXqFLdu3cKyLAYHB1lcXCQa
      jdLe3k4wGCQQCPDdd9/tuPfmeSGU79mraspz9Vh4/b2kmnjvdxuG4xLP2swnTcK6QkDxEvRq
      TYa7ePEiR44c4cMPP6S3t5cvv/yS0dFRTp8+jaJ4qvBrr71GZ2cnqVSKr7/+uiQQVyt2VQX6
      vsK0Xf7+3gK9rWHePbJ1X4FasZi2mIgbvNEbeeEFIGk4jK3kvOIc28W0BXaepvJoa4CB55il
      ul1IkiS9NG7Qlwm66hFDbZcHqBIORDQ6w7U1+tttxAIKF3tKyyxdIVhK289cH/08sS8AO4SQ
      rj5TGaRlWVy7do1kMsl7773HzZs3uXz5MuFwmA8//JBDhw6RTCbp7e3FsqxNGZA7ga+++orh
      4WF+8IMf8ODBA06fPs3g4CD37t1jfHycAwcOMD8/z4ULFwiHwxw4sJkguasCO8NuYV8AdgBC
      CDRVfiYqFE3TuHr1Kh999BGffvopgYDH6bO4uIimaTx69IjW1lauX7+O67o0NTXR3t7+HO9i
      HZZlMTMzw+uvv87q6iqzs7MIIVhaWmJwcJDTp0+zuLhYoLy5du0a7e3t/PznPy+7W/lVeLdv
      3+bs2bPE43Gam5u5evUqt2/fZnR0lJaWFpaWljh//jz9/f3b0u9rwcthVb5kcIRHIZ42t5eJ
      6ruAR0dHOXbsGIqi8Oabb3Lv3j0MwyAWiyHLMrFYjGAwSFdX144G+CRJIhAIMDc3R1dXFwcO
      HKC7u5vV1VUMw+DDDz9kYGCAq1ev0tLSUqi39csOi5FMJvnqq6948803OXXqFN3d3WSz2YKD
      49ixY8RiMVpbW7Ftm9u3b/Pxxx8/l4zisve2bwTvDLKWQ0DdPhsceJHuI0eOkEgkuHnzJq+/
      /jrJZJLR0VF6e3vp7+/HNE2Gh4c5fvx4SQrETsDPCFUUhbGxMbq6ugopJvF4nFOnTuG6LoFA
      gIWFBQ4dOlTxXPfv36e1tZXp6WkSiQRCCC5cuMD/+B//oxC4LG5t9Gd/9mfP3QsoSZK0LwDP
      AU+ePGFkZIQ333yTW7du0dvby4kTJ0in0zx8+JAzZ85w8+ZN3nzzTeLxeEOi0S86il87v8TU
      zygVQpS8M0KIHXGB1x0IE67Dwztfk7JhbmqCb+8/xMim+Pbbb5lbWmH4wbc8jaeYX1h87oN9
      kfHgwQNaWlr4+uuvkWWZkZERhBBkMhnm5uYYHx9H0zR++9vfMjo6WlY12GuQ8mWNkiQV/Pqy
      LBeiusV/38n4T81GsBBeZVdzOIjheN3Tjx+M8vV3E7x2/gxPRh+gBsI8fuiVRIZjzUQC6nOr
      CHsRYds2X375pceZaRikUqkC85rjOLS2tqJpGv39/Tx8+JC1tTW6urpIJBJVC1L20TjULADL
      C3PIoRa0fGjfti3SaYgEVdKZDK4cIKpL2M3NyKFmllfiNPV5acffVxVIVVXee+89Hjx4wJMn
      T7h06RL37t3j4MGDLC0tFaq1EokEFy5coLW1lVu3btHc3Py9nZOXDXXZALaZYWTkEVq4mZ6O
      KEuJLEf6upl4/JgDfUeQ7RxKKMzC9CQHDh4moMl7wgbYx8uJfSN4H3sau5YNuo99vCjY8Uiw
      EKKkAzpQkVmt3OfP+l1/g9sYkXzZr/UyjdV3bTbivur97o4LgCzLmy7s/75x8su5vMp95qcD
      1/rdZ7lWveNq1LVeprHWc61GvhvQIAEAwcriDFk3Qm93a+VuHbIMrsXIyBhyIMqxgf6KEy9J
      Eo6Z4+HwCK0HDtLb1VHxuwCJp/PMLi4TirUx0F+eGcL/bGVxjtn/v7czaVITiqLwBwo4RFtx
      thIHWqPpyv//JamulLEdWjstKg4IogEhCysrIWaV/be59d7ivXvvOWe1o9vrXae5YawgoM+G
      CJk6+YTPy2xJv6vdcH/Y0eCZcrOHtZphmA6dbg8l7AEaXPj2PODrU5/xj++cUPjSvV10E0UR
      c7Ni61zIJ2PMFyvk1AOd1q1znSiK6PMRfKigeBbzxZrHXp9kmP277zEYDJHSecpZBX3voDXC
      3fC8s81w/EquWMM9rLDcGE/9zg0nCAKH7YrXn0tqjSbL1wlyRkVr1EPZ9WKObphUqxV0XUeU
      U/Q7rdC65pMhOyegVVeZzN5paJ/Jpm5TR13nwMt0Tq5YIxEccYRru/q//QGUtIK5+QfdphCn
      XCpgWeZd9OyYWEcXSbq/YZgrVqkXsiTT9/rvAfp6g1bPM32LHugFXLMK9sczri9w8U6RrH9x
      kWIBx18+ObVILPCwIxLlL56H51+Vb8bGQJakyFzcmJLCPmzJqiWa1TxKKjrlJREH0z7xvjTo
      aRVG40U4KMZpt9vY5h4hrnCyo88hJqfQWg32uy2FUhnXtonS7CUzeT7VVDa6wdY8IP2lrlyx
      SiEr45Gg06ghK9FJPdWPTSTvxPhNp9ttMx1PQzk5mUF9yGDuTSRZxrKud/E3jM4YLxiiqBYA
      AAAASUVORK5CYII=
    </thumbnail>
  </thumbnails>
</workbook>
